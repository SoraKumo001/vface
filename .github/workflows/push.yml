name: Push branch
on:
  push:
jobs:
  Modules:
    name: Modules
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Package install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn
  ESLint:
    name: ESLint
    needs: Modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Lint
        run: yarn lint
  Build:
    name: Build
    needs: Modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules(yarn.lock)
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-build-${{ env.cache-name }}
      - name: Build
        run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: Output
          path: out
  Gh-Pages:
    needs: Build
    name: Create gh-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Output
          path: .
      - name: Git init
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          git init
          git config --global user.name $GITHUB_ACTOR
          git config --global user.email ${GITHUB_ACTOR}@git
          git remote add origin https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
          echo > .nojekyll
      - name: Git push
        run: |
          git checkout -b gh-pages
          git add .
          git commit -m "Create gh-pages(${BRANCH})"
          git push -f origin gh-pages
