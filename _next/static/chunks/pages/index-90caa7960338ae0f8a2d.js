_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[7],{"+Luo":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return I})),n.d(e,"i",(function(){return j})),n.d(e,"c",(function(){return S})),n.d(e,"f",(function(){return T})),n.d(e,"e",(function(){return E})),n.d(e,"d",(function(){return A})),n.d(e,"k",(function(){return R})),n.d(e,"g",(function(){return _})),n.d(e,"h",(function(){return D})),n.d(e,"j",(function(){return M})),n.d(e,"b",(function(){return z}));var r=n("+hG3"),a=n("RsxS"),s=n("0wNd"),i=n("Umw7"),o=n("rqsJ"),u=n("yK2v"),c=n("WHR0"),l=n("lIk/"),d=n("BLhf"),h=n("8BGy"),p=n("1VZP"),f=n("PVBm"),m=n("boNM"),b=n("KdhW"),g=n("qA+V"),y=n("Zz2E"),x=n("O/w9"),O=n("Mbu7"),v=n("2/MO"),w=n("ET5l"),k=n("nnua");class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,x,O,v,w,k,m].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],a=[],s=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t)),{});let u=[];const c=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(o);h.forEach((t=>{const e=o[t];e.inputNames.forEach((t=>{const[n]=Object(i.b)(t);e.inputs.push(o[n]),o[n].children.push(e)}))})),0===Object.keys(d).length?h.forEach((t=>{const e=o[t];0===e.children.length&&c.push(e)})):Object.keys(d).forEach((t=>{const[e]=Object(i.b)(t),n=o[e];null!=n&&(n.signatureKey=d[t],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((t=>{const[e]=Object(i.b)(t),n=o[e];n&&(n.signatureKey=l[t],u.push(n))})):u=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:e,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=Object(s.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let a;switch(n.type){case"string":a=j(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=T(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=R(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=R(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=$(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:a,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const a=[],s=[];t.signature.inputArg.forEach((t=>{const[e]=Object(i.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:C(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n}));Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=Object(i.b)(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=Object(i.b)(o[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,s.push(a))}));const u=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function N(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function j(t,e,n,r=!1){const a=t[e];return null!=a?N(a.s,r):n}function S(t,e,n){const r=t[e];return r?r.b:n}function T(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function C(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function $(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function E(t,e,n){const r=t[e];return r&&r.type?C(r.type):n}function A(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>C(t))):n}function F(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"===typeof t.size?t.size:parseInt(t.size,10))):[]}function R(t,e,n){const r=t[e];return r&&r.shape?F(r.shape):n}function _(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"===typeof t?t:parseInt(t,10))):n}function D(t,e,n,r=!1){const a=t[e];return a&&a.list&&a.list.s?a.list.s.map((t=>N(t,r))):n}function M(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>F(t))):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n("HDXh").Buffer)},"+hG3":function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return te})),n.d(e,"AdagradOptimizer",(function(){return ne})),n.d(e,"AdamOptimizer",(function(){return se})),n.d(e,"AdamaxOptimizer",(function(){return ue})),n.d(e,"MomentumOptimizer",(function(){return le})),n.d(e,"Optimizer",(function(){return Qt})),n.d(e,"RMSPropOptimizer",(function(){return de})),n.d(e,"SGDOptimizer",(function(){return ce})),n.d(e,"Tensor",(function(){return Q.a})),n.d(e,"TensorBuffer",(function(){return Q.b})),n.d(e,"Variable",(function(){return Q.c})),n.d(e,"Rank",(function(){return he.a})),n.d(e,"sumOutType",(function(){return he.b})),n.d(e,"upcastType",(function(){return he.c})),n.d(e,"abs",(function(){return pe.b})),n.d(e,"acos",(function(){return pe.c})),n.d(e,"acosh",(function(){return pe.d})),n.d(e,"add",(function(){return pe.e})),n.d(e,"addN",(function(){return pe.f})),n.d(e,"all",(function(){return pe.g})),n.d(e,"any",(function(){return pe.h})),n.d(e,"argMax",(function(){return pe.i})),n.d(e,"argMin",(function(){return pe.j})),n.d(e,"asin",(function(){return pe.k})),n.d(e,"asinh",(function(){return pe.l})),n.d(e,"atan",(function(){return pe.m})),n.d(e,"atan2",(function(){return pe.n})),n.d(e,"atanh",(function(){return pe.o})),n.d(e,"avgPool",(function(){return pe.p})),n.d(e,"avgPool3d",(function(){return pe.q})),n.d(e,"basicLSTMCell",(function(){return pe.r})),n.d(e,"batchToSpaceND",(function(){return pe.w})),n.d(e,"batchNorm",(function(){return pe.s})),n.d(e,"batchNorm2d",(function(){return pe.t})),n.d(e,"batchNorm3d",(function(){return pe.u})),n.d(e,"batchNorm4d",(function(){return pe.v})),n.d(e,"bincount",(function(){return pe.x})),n.d(e,"broadcastTo",(function(){return pe.z})),n.d(e,"buffer",(function(){return pe.A})),n.d(e,"cast",(function(){return pe.B})),n.d(e,"ceil",(function(){return pe.C})),n.d(e,"clipByValue",(function(){return pe.D})),n.d(e,"clone",(function(){return pe.E})),n.d(e,"complex",(function(){return pe.F})),n.d(e,"concat",(function(){return pe.G})),n.d(e,"concat1d",(function(){return pe.H})),n.d(e,"concat2d",(function(){return pe.I})),n.d(e,"concat3d",(function(){return pe.J})),n.d(e,"concat4d",(function(){return pe.K})),n.d(e,"conv1d",(function(){return pe.L})),n.d(e,"conv2d",(function(){return pe.M})),n.d(e,"conv2dTranspose",(function(){return pe.N})),n.d(e,"conv3d",(function(){return pe.O})),n.d(e,"conv3dTranspose",(function(){return pe.P})),n.d(e,"cos",(function(){return pe.Q})),n.d(e,"cosh",(function(){return pe.R})),n.d(e,"cumsum",(function(){return pe.T})),n.d(e,"denseBincount",(function(){return pe.U})),n.d(e,"depthToSpace",(function(){return pe.V})),n.d(e,"depthwiseConv2d",(function(){return pe.W})),n.d(e,"diag",(function(){return pe.X})),n.d(e,"dilation2d",(function(){return pe.Y})),n.d(e,"div",(function(){return pe.Z})),n.d(e,"divNoNan",(function(){return pe.ab})),n.d(e,"dot",(function(){return pe.bb})),n.d(e,"einsum",(function(){return pe.db})),n.d(e,"elu",(function(){return pe.eb})),n.d(e,"equal",(function(){return pe.gb})),n.d(e,"erf",(function(){return pe.hb})),n.d(e,"exp",(function(){return pe.ib})),n.d(e,"expandDims",(function(){return pe.jb})),n.d(e,"expm1",(function(){return pe.kb})),n.d(e,"eye",(function(){return pe.lb})),n.d(e,"fill",(function(){return pe.nb})),n.d(e,"floor",(function(){return pe.ob})),n.d(e,"floorDiv",(function(){return pe.pb})),n.d(e,"gather",(function(){return pe.rb})),n.d(e,"greater",(function(){return pe.tb})),n.d(e,"greaterEqual",(function(){return pe.ub})),n.d(e,"imag",(function(){return pe.wb})),n.d(e,"isFinite",(function(){return pe.Ab})),n.d(e,"isInf",(function(){return pe.Bb})),n.d(e,"isNaN",(function(){return pe.Cb})),n.d(e,"leakyRelu",(function(){return pe.Db})),n.d(e,"less",(function(){return pe.Eb})),n.d(e,"lessEqual",(function(){return pe.Fb})),n.d(e,"linspace",(function(){return pe.Hb})),n.d(e,"localResponseNormalization",(function(){return pe.Ib})),n.d(e,"log",(function(){return pe.Jb})),n.d(e,"log1p",(function(){return pe.Kb})),n.d(e,"logSigmoid",(function(){return pe.Lb})),n.d(e,"logSoftmax",(function(){return pe.Mb})),n.d(e,"logSumExp",(function(){return pe.Nb})),n.d(e,"logicalAnd",(function(){return pe.Ob})),n.d(e,"logicalNot",(function(){return pe.Pb})),n.d(e,"logicalOr",(function(){return pe.Qb})),n.d(e,"logicalXor",(function(){return pe.Rb})),n.d(e,"matMul",(function(){return pe.Tb})),n.d(e,"max",(function(){return pe.Ub})),n.d(e,"maxPool",(function(){return pe.Vb})),n.d(e,"maxPool3d",(function(){return pe.Wb})),n.d(e,"maxPoolWithArgmax",(function(){return pe.Xb})),n.d(e,"maximum",(function(){return pe.Yb})),n.d(e,"mean",(function(){return pe.Zb})),n.d(e,"meshgrid",(function(){return pe.ac})),n.d(e,"min",(function(){return pe.bc})),n.d(e,"minimum",(function(){return pe.cc})),n.d(e,"mirrorPad",(function(){return pe.dc})),n.d(e,"mod",(function(){return pe.ec})),n.d(e,"moments",(function(){return pe.fc})),n.d(e,"mul",(function(){return pe.hc})),n.d(e,"multiRNNCell",(function(){return pe.ic})),n.d(e,"multinomial",(function(){return pe.jc})),n.d(e,"neg",(function(){return pe.kc})),n.d(e,"notEqual",(function(){return pe.mc})),n.d(e,"oneHot",(function(){return pe.nc})),n.d(e,"ones",(function(){return pe.oc})),n.d(e,"onesLike",(function(){return pe.pc})),n.d(e,"outerProduct",(function(){return pe.rc})),n.d(e,"pad",(function(){return pe.sc})),n.d(e,"pad1d",(function(){return pe.tc})),n.d(e,"pad2d",(function(){return pe.uc})),n.d(e,"pad3d",(function(){return pe.vc})),n.d(e,"pad4d",(function(){return pe.wc})),n.d(e,"pool",(function(){return pe.xc})),n.d(e,"pow",(function(){return pe.yc})),n.d(e,"prelu",(function(){return pe.zc})),n.d(e,"print",(function(){return pe.Ac})),n.d(e,"prod",(function(){return pe.Bc})),n.d(e,"rand",(function(){return pe.Cc})),n.d(e,"randomGamma",(function(){return pe.Dc})),n.d(e,"randomNormal",(function(){return pe.Ec})),n.d(e,"randomUniform",(function(){return pe.Fc})),n.d(e,"range",(function(){return pe.Gc})),n.d(e,"real",(function(){return pe.Hc})),n.d(e,"reciprocal",(function(){return pe.Ic})),n.d(e,"relu",(function(){return pe.Jc})),n.d(e,"relu6",(function(){return pe.Kc})),n.d(e,"reshape",(function(){return pe.Lc})),n.d(e,"reverse",(function(){return pe.Mc})),n.d(e,"reverse1d",(function(){return pe.Nc})),n.d(e,"reverse2d",(function(){return pe.Oc})),n.d(e,"reverse3d",(function(){return pe.Pc})),n.d(e,"reverse4d",(function(){return pe.Qc})),n.d(e,"round",(function(){return pe.Sc})),n.d(e,"rsqrt",(function(){return pe.Tc})),n.d(e,"scalar",(function(){return pe.Uc})),n.d(e,"selu",(function(){return pe.Wc})),n.d(e,"separableConv2d",(function(){return pe.Xc})),n.d(e,"setdiff1dAsync",(function(){return pe.Yc})),n.d(e,"sigmoid",(function(){return pe.Zc})),n.d(e,"sign",(function(){return pe.ad})),n.d(e,"sin",(function(){return pe.cd})),n.d(e,"sinh",(function(){return pe.dd})),n.d(e,"slice",(function(){return pe.ed})),n.d(e,"slice1d",(function(){return pe.fd})),n.d(e,"slice2d",(function(){return pe.gd})),n.d(e,"slice3d",(function(){return pe.hd})),n.d(e,"slice4d",(function(){return pe.id})),n.d(e,"softmax",(function(){return pe.jd})),n.d(e,"softplus",(function(){return pe.kd})),n.d(e,"spaceToBatchND",(function(){return pe.ld})),n.d(e,"fft",(function(){return pe.mb})),n.d(e,"ifft",(function(){return pe.vb})),n.d(e,"irfft",(function(){return pe.zb})),n.d(e,"rfft",(function(){return pe.Rc})),n.d(e,"split",(function(){return pe.pd})),n.d(e,"sqrt",(function(){return pe.qd})),n.d(e,"square",(function(){return pe.rd})),n.d(e,"squaredDifference",(function(){return pe.sd})),n.d(e,"squeeze",(function(){return pe.td})),n.d(e,"stack",(function(){return pe.ud})),n.d(e,"step",(function(){return pe.vd})),n.d(e,"stridedSlice",(function(){return pe.wd})),n.d(e,"sub",(function(){return pe.xd})),n.d(e,"sum",(function(){return pe.yd})),n.d(e,"tan",(function(){return pe.zd})),n.d(e,"tanh",(function(){return pe.Ad})),n.d(e,"tensor",(function(){return pe.Bd})),n.d(e,"tensor1d",(function(){return pe.Cd})),n.d(e,"tensor2d",(function(){return pe.Dd})),n.d(e,"tensor3d",(function(){return pe.Ed})),n.d(e,"tensor4d",(function(){return pe.Fd})),n.d(e,"tensor5d",(function(){return pe.Gd})),n.d(e,"tensor6d",(function(){return pe.Hd})),n.d(e,"tile",(function(){return pe.Id})),n.d(e,"topk",(function(){return pe.Jd})),n.d(e,"truncatedNormal",(function(){return pe.Ld})),n.d(e,"unique",(function(){return pe.Md})),n.d(e,"unsortedSegmentSum",(function(){return pe.Nd})),n.d(e,"unstack",(function(){return pe.Od})),n.d(e,"variable",(function(){return pe.Pd})),n.d(e,"where",(function(){return pe.Qd})),n.d(e,"whereAsync",(function(){return pe.Rd})),n.d(e,"zeros",(function(){return pe.Sd})),n.d(e,"zerosLike",(function(){return pe.Td})),n.d(e,"booleanMaskAsync",(function(){return pe.y})),n.d(e,"transpose",(function(){return pe.Kd})),n.d(e,"norm",(function(){return pe.lc})),n.d(e,"movingAverage",(function(){return pe.gc})),n.d(e,"scatterND",(function(){return pe.Vc})),n.d(e,"sparseToDense",(function(){return pe.nd})),n.d(e,"gatherND",(function(){return pe.sb})),n.d(e,"dropout",(function(){return pe.cb})),n.d(e,"enclosingPowerOfTwo",(function(){return pe.fb})),n.d(e,"cosineWindow",(function(){return pe.S})),n.d(e,"inTopKAsync",(function(){return pe.yb})),n.d(e,"op",(function(){return pe.qc})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return pe.a})),n.d(e,"image",(function(){return pe.xb})),n.d(e,"linalg",(function(){return pe.Gb})),n.d(e,"losses",(function(){return pe.Sb})),n.d(e,"spectral",(function(){return pe.od})),n.d(e,"fused",(function(){return pe.qb})),n.d(e,"signal",(function(){return pe.bd})),n.d(e,"sparse",(function(){return pe.md})),n.d(e,"Reduction",(function(){return fe.a})),n.d(e,"train",(function(){return be})),n.d(e,"enableProdMode",(function(){return Ut.g})),n.d(e,"enableDebugMode",(function(){return Ut.f})),n.d(e,"disableDeprecationWarnings",(function(){return Ut.c})),n.d(e,"deprecationWarn",(function(){return Ut.b})),n.d(e,"disposeVariables",(function(){return Ut.e})),n.d(e,"engine",(function(){return Ut.h})),n.d(e,"memory",(function(){return Ut.m})),n.d(e,"profile",(function(){return Ut.n})),n.d(e,"tidy",(function(){return Ut.t})),n.d(e,"dispose",(function(){return Ut.d})),n.d(e,"keep",(function(){return Ut.l})),n.d(e,"time",(function(){return Ut.u})),n.d(e,"setBackend",(function(){return Ut.r})),n.d(e,"ready",(function(){return Ut.o})),n.d(e,"getBackend",(function(){return Ut.k})),n.d(e,"removeBackend",(function(){return Ut.q})),n.d(e,"findBackend",(function(){return Ut.i})),n.d(e,"findBackendFactory",(function(){return Ut.j})),n.d(e,"registerBackend",(function(){return Ut.p})),n.d(e,"backend",(function(){return Ut.a})),n.d(e,"setPlatform",(function(){return Ut.s})),n.d(e,"getKernel",(function(){return jt.c})),n.d(e,"getGradient",(function(){return jt.b})),n.d(e,"getKernelsForBackend",(function(){return jt.d})),n.d(e,"registerKernel",(function(){return jt.f})),n.d(e,"registerGradient",(function(){return jt.e})),n.d(e,"unregisterKernel",(function(){return jt.h})),n.d(e,"unregisterGradient",(function(){return jt.g})),n.d(e,"copyRegisteredKernels",(function(){return jt.a})),n.d(e,"customGrad",(function(){return Jt.a})),n.d(e,"grad",(function(){return Jt.b})),n.d(e,"grads",(function(){return Jt.c})),n.d(e,"valueAndGrad",(function(){return Jt.d})),n.d(e,"valueAndGrads",(function(){return Jt.e})),n.d(e,"variableGrads",(function(){return Jt.f})),n.d(e,"Environment",(function(){return h.b})),n.d(e,"env",(function(){return h.c})),n.d(e,"ENV",(function(){return h.a})),n.d(e,"version_core",(function(){return Wt})),n.d(e,"nextFrame",(function(){return ye})),n.d(e,"browser",(function(){return s})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return o})),n.d(e,"test_util",(function(){return Bt})),n.d(e,"util",(function(){return Vt})),n.d(e,"backend_util",(function(){return c})),n.d(e,"tensor_util",(function(){return Pt})),n.d(e,"slice_util",(function(){return Dt})),n.d(e,"gather_util",(function(){return i})),n.d(e,"scatter_util",(function(){return _t})),n.d(e,"device_util",(function(){return dn})),n.d(e,"kernel_impls",(function(){return l})),n.d(e,"KernelBackend",(function(){return fn.b})),n.d(e,"DataStorage",(function(){return fn.a})),n.d(e,"Abs",(function(){return Nt.a})),n.d(e,"Acos",(function(){return Nt.b})),n.d(e,"Acosh",(function(){return Nt.c})),n.d(e,"Add",(function(){return Nt.d})),n.d(e,"AddN",(function(){return Nt.e})),n.d(e,"All",(function(){return Nt.f})),n.d(e,"Any",(function(){return Nt.g})),n.d(e,"ArgMax",(function(){return Nt.h})),n.d(e,"ArgMin",(function(){return Nt.i})),n.d(e,"Asin",(function(){return Nt.j})),n.d(e,"Asinh",(function(){return Nt.k})),n.d(e,"Atan",(function(){return Nt.l})),n.d(e,"Atanh",(function(){return Nt.n})),n.d(e,"Atan2",(function(){return Nt.m})),n.d(e,"AvgPool",(function(){return Nt.o})),n.d(e,"AvgPoolGrad",(function(){return Nt.r})),n.d(e,"AvgPool3D",(function(){return Nt.p})),n.d(e,"AvgPool3DGrad",(function(){return Nt.q})),n.d(e,"BatchMatMul",(function(){return Nt.s})),n.d(e,"BatchToSpaceND",(function(){return Nt.t})),n.d(e,"Bincount",(function(){return Nt.u})),n.d(e,"BroadcastTo",(function(){return Nt.v})),n.d(e,"Cast",(function(){return Nt.w})),n.d(e,"Ceil",(function(){return Nt.x})),n.d(e,"ClipByValue",(function(){return Nt.y})),n.d(e,"Complex",(function(){return Nt.z})),n.d(e,"ComplexAbs",(function(){return Nt.A})),n.d(e,"Concat",(function(){return Nt.B})),n.d(e,"Conv2D",(function(){return Nt.C})),n.d(e,"Conv2DBackpropFilter",(function(){return Nt.D})),n.d(e,"Conv2DBackpropInput",(function(){return Nt.E})),n.d(e,"Conv3D",(function(){return Nt.F})),n.d(e,"Conv3DBackpropFilterV2",(function(){return Nt.G})),n.d(e,"Conv3DBackpropInputV2",(function(){return Nt.H})),n.d(e,"Cos",(function(){return Nt.I})),n.d(e,"Cosh",(function(){return Nt.J})),n.d(e,"Cumsum",(function(){return Nt.L})),n.d(e,"CropAndResize",(function(){return Nt.K})),n.d(e,"DenseBincount",(function(){return Nt.M})),n.d(e,"DepthToSpace",(function(){return Nt.N})),n.d(e,"DepthwiseConv2dNative",(function(){return Nt.O})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return Nt.P})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return Nt.Q})),n.d(e,"Diag",(function(){return Nt.R})),n.d(e,"Dilation2D",(function(){return Nt.S})),n.d(e,"Dilation2DBackpropInput",(function(){return Nt.U})),n.d(e,"Dilation2DBackpropFilter",(function(){return Nt.T})),n.d(e,"RealDiv",(function(){return Nt.lc})),n.d(e,"Einsum",(function(){return Nt.V})),n.d(e,"Elu",(function(){return Nt.W})),n.d(e,"EluGrad",(function(){return Nt.X})),n.d(e,"Erf",(function(){return Nt.Z})),n.d(e,"Equal",(function(){return Nt.Y})),n.d(e,"Exp",(function(){return Nt.ab})),n.d(e,"ExpandDims",(function(){return Nt.bb})),n.d(e,"Expm1",(function(){return Nt.cb})),n.d(e,"FFT",(function(){return Nt.db})),n.d(e,"Fill",(function(){return Nt.eb})),n.d(e,"FlipLeftRight",(function(){return Nt.fb})),n.d(e,"Floor",(function(){return Nt.gb})),n.d(e,"FloorDiv",(function(){return Nt.hb})),n.d(e,"FusedBatchNorm",(function(){return Nt.jb})),n.d(e,"GatherV2",(function(){return Nt.nb})),n.d(e,"GatherNd",(function(){return Nt.mb})),n.d(e,"Greater",(function(){return Nt.ob})),n.d(e,"GreaterEqual",(function(){return Nt.pb})),n.d(e,"Identity",(function(){return Nt.rb})),n.d(e,"IFFT",(function(){return Nt.qb})),n.d(e,"Imag",(function(){return Nt.sb})),n.d(e,"IsFinite",(function(){return Nt.tb})),n.d(e,"IsInf",(function(){return Nt.ub})),n.d(e,"IsNan",(function(){return Nt.vb})),n.d(e,"LeakyRelu",(function(){return Nt.yb})),n.d(e,"Less",(function(){return Nt.zb})),n.d(e,"LessEqual",(function(){return Nt.Ab})),n.d(e,"LinSpace",(function(){return Nt.Bb})),n.d(e,"Log",(function(){return Nt.Cb})),n.d(e,"Log1p",(function(){return Nt.Db})),n.d(e,"LogicalAnd",(function(){return Nt.Fb})),n.d(e,"LogicalNot",(function(){return Nt.Gb})),n.d(e,"LogicalOr",(function(){return Nt.Hb})),n.d(e,"LogSoftmax",(function(){return Nt.Eb})),n.d(e,"LRN",(function(){return Nt.wb})),n.d(e,"LRNGrad",(function(){return Nt.xb})),n.d(e,"Max",(function(){return Nt.Ib})),n.d(e,"Maximum",(function(){return Nt.Ob})),n.d(e,"MaxPool",(function(){return Nt.Jb})),n.d(e,"MaxPoolGrad",(function(){return Nt.Mb})),n.d(e,"MaxPool3D",(function(){return Nt.Kb})),n.d(e,"MaxPool3DGrad",(function(){return Nt.Lb})),n.d(e,"MaxPoolWithArgmax",(function(){return Nt.Nb})),n.d(e,"Mean",(function(){return Nt.Pb})),n.d(e,"Min",(function(){return Nt.Qb})),n.d(e,"Minimum",(function(){return Nt.Rb})),n.d(e,"MirrorPad",(function(){return Nt.Sb})),n.d(e,"Mod",(function(){return Nt.Tb})),n.d(e,"Multinomial",(function(){return Nt.Ub})),n.d(e,"Multiply",(function(){return Nt.Vb})),n.d(e,"Neg",(function(){return Nt.Wb})),n.d(e,"NotEqual",(function(){return Nt.ac})),n.d(e,"NonMaxSuppressionV3",(function(){return Nt.Xb})),n.d(e,"NonMaxSuppressionV4",(function(){return Nt.Yb})),n.d(e,"NonMaxSuppressionV5",(function(){return Nt.Zb})),n.d(e,"OnesLike",(function(){return Nt.cc})),n.d(e,"OneHot",(function(){return Nt.bc})),n.d(e,"Pack",(function(){return Nt.dc})),n.d(e,"PadV2",(function(){return Nt.ec})),n.d(e,"Pool",(function(){return Nt.fc})),n.d(e,"Pow",(function(){return Nt.gc})),n.d(e,"Prelu",(function(){return Nt.hc})),n.d(e,"Prod",(function(){return Nt.ic})),n.d(e,"Range",(function(){return Nt.jc})),n.d(e,"Real",(function(){return Nt.kc})),n.d(e,"Reciprocal",(function(){return Nt.mc})),n.d(e,"Relu",(function(){return Nt.nc})),n.d(e,"Reshape",(function(){return Nt.pc})),n.d(e,"ResizeNearestNeighbor",(function(){return Nt.sc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return Nt.tc})),n.d(e,"ResizeBilinear",(function(){return Nt.qc})),n.d(e,"ResizeBilinearGrad",(function(){return Nt.rc})),n.d(e,"Relu6",(function(){return Nt.oc})),n.d(e,"Reverse",(function(){return Nt.uc})),n.d(e,"Round",(function(){return Nt.wc})),n.d(e,"Rsqrt",(function(){return Nt.xc})),n.d(e,"ScatterNd",(function(){return Nt.yc})),n.d(e,"Select",(function(){return Nt.zc})),n.d(e,"Selu",(function(){return Nt.Ac})),n.d(e,"Slice",(function(){return Nt.Fc})),n.d(e,"Sin",(function(){return Nt.Dc})),n.d(e,"Sinh",(function(){return Nt.Ec})),n.d(e,"Sign",(function(){return Nt.Cc})),n.d(e,"Sigmoid",(function(){return Nt.Bc})),n.d(e,"Softplus",(function(){return Nt.Hc})),n.d(e,"Sqrt",(function(){return Nt.Mc})),n.d(e,"Sum",(function(){return Nt.Sc})),n.d(e,"SpaceToBatchND",(function(){return Nt.Ic})),n.d(e,"SplitV",(function(){return Nt.Lc})),n.d(e,"Softmax",(function(){return Nt.Gc})),n.d(e,"SparseReshape",(function(){return Nt.Jc})),n.d(e,"SparseToDense",(function(){return Nt.Kc})),n.d(e,"SquaredDifference",(function(){return Nt.Oc})),n.d(e,"Square",(function(){return Nt.Nc})),n.d(e,"StridedSlice",(function(){return Nt.Qc})),n.d(e,"Sub",(function(){return Nt.Rc})),n.d(e,"Tan",(function(){return Nt.Tc})),n.d(e,"Tanh",(function(){return Nt.Uc})),n.d(e,"Tile",(function(){return Nt.Vc})),n.d(e,"TopK",(function(){return Nt.Wc})),n.d(e,"Transform",(function(){return Nt.Xc})),n.d(e,"Transpose",(function(){return Nt.Yc})),n.d(e,"Unique",(function(){return Nt.Zc})),n.d(e,"Unpack",(function(){return Nt.ad})),n.d(e,"UnsortedSegmentSum",(function(){return Nt.bd})),n.d(e,"ZerosLike",(function(){return Nt.cd})),n.d(e,"Step",(function(){return Nt.Pc})),n.d(e,"FromPixels",(function(){return Nt.ib})),n.d(e,"RotateWithOffset",(function(){return Nt.vc})),n.d(e,"_FusedMatMul",(function(){return Nt.dd})),n.d(e,"FusedConv2D",(function(){return Nt.kb})),n.d(e,"FusedDepthwiseConv2D",(function(){return Nt.lb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return G})),n.d(r,"listModels",(function(){return U})),n.d(r,"moveModel",(function(){return H})),n.d(r,"removeModel",(function(){return K})),n.d(r,"browserFiles",(function(){return at})),n.d(r,"browserHTTPRequest",(function(){return ft})),n.d(r,"concatenateArrayBuffers",(function(){return p.d})),n.d(r,"decodeWeights",(function(){return p.e})),n.d(r,"encodeWeights",(function(){return p.f})),n.d(r,"fromMemory",(function(){return gt})),n.d(r,"getLoadHandlers",(function(){return y})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return p.g})),n.d(r,"getSaveHandlers",(function(){return g})),n.d(r,"http",(function(){return pt})),n.d(r,"isHTTPScheme",(function(){return dt})),n.d(r,"loadWeights",(function(){return ut})),n.d(r,"registerLoadRouter",(function(){return b})),n.d(r,"registerSaveRouter",(function(){return m})),n.d(r,"weightsLoaderFactory",(function(){return ct})),n.d(r,"withSaveHandler",(function(){return yt}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return It}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return Et})),n.d(s,"toPixels",(function(){return At})),n.d(s,"fromPixels",(function(){return Ft}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return Rt}));var o={};n.r(o),n.d(o,"Serializable",(function(){return Mt})),n.d(o,"SerializationMap",(function(){return zt})),n.d(o,"registerClass",(function(){return Lt}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return sn})),n.d(u,"computeOutShape",(function(){return on})),n.d(u,"collectGatherOpShapeInfo",(function(){return un}));var c={};n.r(c),n.d(c,"axesAreInnerMostDims",(function(){return xe.b})),n.d(c,"combineLocations",(function(){return xe.c})),n.d(c,"computeOutAndReduceShapes",(function(){return xe.d})),n.d(c,"expandShapeToKeepDim",(function(){return xe.e})),n.d(c,"assertAxesAreInnerMostDims",(function(){return xe.a})),n.d(c,"getAxesPermutation",(function(){return xe.f})),n.d(c,"getUndoAxesPermutation",(function(){return xe.h})),n.d(c,"getInnerMostAxes",(function(){return xe.g})),n.d(c,"getBroadcastDims",(function(){return Oe.b})),n.d(c,"getReductionAxes",(function(){return Oe.c})),n.d(c,"assertAndGetBroadcastShape",(function(){return Oe.a})),n.d(c,"assertParamsConsistent",(function(){return ve})),n.d(c,"computeOutShape",(function(){return we})),n.d(c,"computeDilation2DInfo",(function(){return ke.d})),n.d(c,"computePool2DInfo",(function(){return ke.e})),n.d(c,"computePool3DInfo",(function(){return ke.f})),n.d(c,"computeConv2DInfo",(function(){return ke.a})),n.d(c,"computeConv3DInfo",(function(){return ke.b})),n.d(c,"computeDefaultPad",(function(){return ke.c})),n.d(c,"tupleValuesAreOne",(function(){return ke.i})),n.d(c,"eitherStridesOrDilationsAreOne",(function(){return ke.h})),n.d(c,"convertConv2DDataFormat",(function(){return ke.g})),n.d(c,"getFusedDyActivation",(function(){return Ie.c})),n.d(c,"getFusedBiasGradient",(function(){return Ie.b})),n.d(c,"applyActivation",(function(){return Ie.a})),n.d(c,"shouldFuse",(function(){return Ie.d})),n.d(c,"PARALLELIZE_THRESHOLD",(function(){return Ne})),n.d(c,"computeOptimalWindowSize",(function(){return je})),n.d(c,"slice_util",(function(){return Dt})),n.d(c,"upcastType",(function(){return he.c})),n.d(c,"getImageCenter",(function(){return Se})),n.d(c,"getReshaped",(function(){return Te})),n.d(c,"getPermuted",(function(){return Ce})),n.d(c,"getReshapedPermuted",(function(){return $e})),n.d(c,"getSliceBeginCoords",(function(){return Ee})),n.d(c,"getSliceSize",(function(){return Ae})),n.d(c,"prepareAndValidate",(function(){return Rt})),n.d(c,"validateUpdateShape",(function(){return _t.validateUpdateShape})),n.d(c,"validateInput",(function(){return _t.validateInput})),n.d(c,"calculateShapes",(function(){return _t.calculateShapes})),n.d(c,"SELU_SCALEALPHA",(function(){return Fe.b})),n.d(c,"SELU_SCALE",(function(){return Fe.a})),n.d(c,"ERF_P",(function(){return Re})),n.d(c,"ERF_A1",(function(){return _e})),n.d(c,"ERF_A2",(function(){return De})),n.d(c,"ERF_A3",(function(){return Me})),n.d(c,"ERF_A4",(function(){return ze})),n.d(c,"ERF_A5",(function(){return Le})),n.d(c,"warn",(function(){return Pe})),n.d(c,"log",(function(){return Be})),n.d(c,"mergeRealAndImagArrays",(function(){return Ve})),n.d(c,"splitRealAndImagArrays",(function(){return We})),n.d(c,"complexWithEvenIndex",(function(){return Ue})),n.d(c,"complexWithOddIndex",(function(){return Ke})),n.d(c,"getComplexWithIndex",(function(){return Ge})),n.d(c,"assignToTypedArray",(function(){return He})),n.d(c,"exponents",(function(){return qe})),n.d(c,"exponent",(function(){return Xe})),n.d(c,"decodeEinsumEquation",(function(){return Ze})),n.d(c,"getEinsumPermutation",(function(){return Qe})),n.d(c,"checkEinsumDimSizes",(function(){return tn})),n.d(c,"getEinsumComputePath",(function(){return en})),n.d(c,"isIdentityPermutation",(function(){return nn})),n.d(c,"prepareSplitSize",(function(){return an})),n.d(c,"segment_util",(function(){return u})),n.d(c,"fromUint8ToStringArray",(function(){return cn})),n.d(c,"fromStringArrayToUint8",(function(){return ln}));var l={};n.r(l),n.d(l,"nonMaxSuppressionV3Impl",(function(){return hn.a})),n.d(l,"nonMaxSuppressionV4Impl",(function(){return hn.b})),n.d(l,"nonMaxSuppressionV5Impl",(function(){return hn.c})),n.d(l,"whereImpl",(function(){return pn.a}));var d=n("auKK"),h=(n("Kajj"),n("szMd")),p=n("NQ+5");class f{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==f.instance&&(f.instance=new f),f.instance}static registerSaveRouter(t){f.getInstance().saveRouters.push(t)}static registerLoadRouter(t){f.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return f.getHandlers(t,"save")}static getLoadHandlers(t,e){return f.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?f.getInstance().loadRouters:f.getInstance().saveRouters).forEach((e=>{const a=e(t,n);null!==a&&r.push(a)})),r}}const m=t=>f.registerSaveRouter(t),b=t=>f.registerLoadRouter(t),g=t=>f.getSaveHandlers(t),y=(t,e)=>f.getLoadHandlers(t,e),x="tensorflowjs",O="models_store",v="model_info_store";function w(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function k(t){const e=t.result;e.createObjectStore(O,{keyPath:"modelPath"}),e.createObjectStore(v,{keyPath:"modelPath"})}class I{constructor(t){if(this.indexedDB=w(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(x,1);r.onupgradeneeded=()=>k(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction(O,"readonly"),r=e.objectStore(O).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(p.g)(e),s=a.transaction(v,"readwrite");let i=s.objectStore(v);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(O,"readwrite");const o=u.objectStore(O).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});o.onsuccess=()=>t({modelArtifactsInfo:r}),o.onerror=t=>{i=s.objectStore(v);const e=i.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(o.error)),e.onerror=t=>(a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)}))}}I.URL_SCHEME="indexeddb://";const N=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(I.URL_SCHEME)?(e=t.slice(I.URL_SCHEME.length),new I(e)):null;var e};f.registerSaveRouter(N),f.registerLoadRouter(N);class j{constructor(){this.indexedDB=w()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(x,1);n.onupgradeneeded=()=>k(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(v,"readonly"),s=a.objectStore(v).getAll();s.onsuccess=()=>{const e={};for(const t of s.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},s.onerror=t=>(r.close(),e(s.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(I.URL_SCHEME)?e.slice(I.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(x,1);r.onupgradeneeded=()=>k(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(v,"readwrite"),i=s.objectStore(v),o=i.get(t);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=i.delete(t),s=()=>{u=a.transaction(O,"readwrite");const r=u.objectStore(O).delete(t);r.onsuccess=()=>e(o.result.modelArtifactsInfo),r.onerror=t=>n(o.error)};r.onsuccess=s,r.onerror=t=>(s(),a.close(),n(o.error))}},o.onerror=t=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)}))}}var S=n("atXS");const T="/",C="tensorflowjs_models",$="info",E="model_topology",A="weight_specs",F="weight_data",R="model_metadata";function _(t){return{info:[C,t,$].join(T),topology:[C,t,E].join(T),weightSpecs:[C,t,A].join(T),weightData:[C,t,F].join(T),modelMetadata:[C,t,R].join(T)}}function D(t){const e=t.split(T);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(T)}class M{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=_(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(p.g)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(p.a)(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=Object(p.b)(s),e}}M.URL_SCHEME="localstorage://";const z=t=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(M.URL_SCHEME)?(e=t.slice(M.URL_SCHEME.length),new M(e)):null;var e};f.registerSaveRouter(z),f.registerLoadRouter(z);class L{constructor(){Object(S.b)(Object(h.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(S.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=C+T,n=T+$;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[D(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=_(t=(e=t).startsWith(M.URL_SCHEME)?e.slice(M.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const P="://";class B{constructor(){this.managers={}}static getInstance(){return null==B.instance&&(B.instance=new B),B.instance}static registerManager(t,e){Object(S.b)(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith(P)&&(t=t.slice(0,t.indexOf(P))),Object(S.b)(t.length>0,(()=>"scheme must not be an empty string."));const n=B.getInstance();Object(S.b)(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function V(t){if(-1===t.indexOf(P))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${B.getSchemes().join(",")}`);return{scheme:t.split(P)[0],path:t.split(P)[1]}}async function W(t,e,n=!1){Object(S.b)(t!==e,(()=>`Old path and new path are the same: '${t}'`));const r=f.getLoadHandlers(t);Object(S.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${t}.`)),Object(S.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`));const a=r[0],s=f.getSaveHandlers(e);Object(S.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${e}.`)),Object(S.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`));const i=s[0],o=V(t).scheme,u=V(t).path,c=o===V(t).scheme,l=await a.load();n&&c&&await B.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await B.getManager(o).removeModel(u),d.modelArtifactsInfo}async function U(){const t=B.getSchemes(),e={};for(const n of t){const t=await B.getManager(n).listModels();for(const r in t){e[n+P+r]=t[r]}}return e}async function K(t){const e=V(t);return B.getManager(e.scheme).removeModel(e.path)}async function G(t,e){return W(t,e,!1)}async function H(t,e){return W(t,e,!0)}class q{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new q);try{B.registerManager(M.URL_SCHEME,new L)}catch(mn){}try{B.registerManager(I.URL_SCHEME,new j)}catch(mn){}}n("SwXZ");var X=n("BD40"),Y=n("3rNm"),J=n("8Km0"),Z=n("dWjR"),Q=n("NNfn");Object(d.b)();const tt={buffer:X.a,cast:Y.a,clone:J.a,print:Z.a};Object(Q.f)(tt);function et(t){return new Promise((t=>setTimeout(t))).then(t)}class nt{constructor(t){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(nt.URL_SCHEME)&&(t=t.slice(nt.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await et((()=>s.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await et((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(p.g)(t)}}}}nt.URL_SCHEME="downloads://";class rt{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${t.name}`));0===e.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${t.name}`));let u;try{u=this.checkManifestAndWeightFiles(o,e)}catch(mn){return void r(mn)}const c=[],l=[],d=[];o.forEach((t=>{t.paths.forEach((t=>{l.push(t),d.push(null)})),c.push(...t.weights)})),o.forEach((t=>{t.paths.forEach((t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);if(d[a]=r,-1===d.indexOf(null)){const t={modelTopology:i,weightSpecs:c,weightData:Object(p.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(t.signature=s.signature),null!=s.userDefinedMetadata&&(t.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(t.modelInitializer=s.modelInitializer),n(t)}},e.onerror=e=>r(`Failed to weights data from file of path '${t}'.`),e.readAsArrayBuffer(u[t])}))}))},a.onerror=e=>r(`Failed to read model topology and weights manifest JSON from file '${t.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(t)}))}checkManifestAndWeightFiles(t,e){const n=[],r=e.map((t=>Object(p.c)(t.name))),a={};for(const s of t)s.paths.forEach((t=>{const s=Object(p.c)(t);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[t]=e[r.indexOf(s)]}));if(n.length!==e.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${e.length}).`);return a}}function at(t){return new rt(t)}function st(t,e,n,r){!function(t){Object(S.b)(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){Object(S.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),Object(S.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),Object(S.b)(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map((s=>(s.then((s=>{const i=n+ ++a/t.length*(r-n);return e(i),s})),s))))}f.registerSaveRouter((t=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(nt.URL_SCHEME)?function(t="model"){return new nt(t)}(t.slice(nt.URL_SCHEME.length)):null));var it=n("mEeB");async function ot(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(h.c)().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),a=(null==e.onProgress?await Promise.all(r):await st(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(a):await st(a,e.onProgress,.5,1)}async function ut(t,e="",n,r){return ct((t=>ot(t,{requestInit:r})))(t,e,n)}function ct(t){return async(e,n="",r)=>{const a=e.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(e.forEach(((t,e)=>{let n=0;t.weights.forEach((t=>{const u="quantization"in t?t.quantization.dtype:t.dtype,c=it.a[u]*S.O(t.shape),l=()=>{a[e]=!0,null==s[e]&&(s[e]=[]),s[e].push({manifestEntry:t,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((e,n)=>{e===t.name&&(l(),i[n]=!0)})):l(),o.push(t.name),n+=c}))})),!i.every((t=>t))){const t=r.filter(((t,e)=>!i[e]));throw new Error(`Could not find weights in manifest with names: ${t.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((t,e,n)=>(e&&t.push(n),t)),[]),c=[];u.forEach((t=>{e[t].paths.forEach((t=>{const e=n+(n.endsWith("/")?"":"/")+t;c.push(e)}))}));const l=await t(c),d={};let h=0;return u.forEach((t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);i.set(t,o),o+=t.byteLength}s[t].forEach((t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(p.e)(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]})),h+=n})),d}}class lt{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(S.b)("function"===typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(S.b)(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&Object(S.b)(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(p.g)(t),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(p){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,s=e.convertedBy,i=e.format,o=e.signature,u=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const t=await this.loadWeights(r);[c,l]=t}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=e.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,s=[];for(const c of t)s.push(...c.weights);const i=[],o=[];for(const c of t)for(const t of c.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(a+t+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await ot(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(p.d)(u)]}}function dt(t){return null!=t.match(lt.URL_SCHEME_REGEX)}lt.URL_SCHEME_REGEX=/^https?:\/\//;const ht=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>dt(t))):dt(t),n)return pt(t,e)}return null};function pt(t,e){return new lt(t,e)}function ft(t,e){return pt(t,e)}f.registerSaveRouter(ht),f.registerLoadRouter(ht);class mt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class bt{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function gt(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new mt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new mt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function yt(t){return new bt(t)}var xt=n("o/e8"),Ot=n("SHv8"),vt=n("4iwy"),wt=n("VO80"),kt=n("yRKQ");const It=Object(wt.b)({confusionMatrix_:function(t,e,n){const r=Object(xt.a)(t,"labels","confusionMatrix"),a=Object(xt.a)(e,"predictions","confusionMatrix");S.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),S.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),S.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),S.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),S.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Object(vt.a)(Object(Y.a)(r,"int32"),n),i=Object(vt.a)(Object(Y.a)(a,"int32"),n),o=Object(kt.a)(s),u=Object(Ot.a)(o,i);return Object(Y.a)(u,"int32")}});var Nt=n("wFtI"),jt=n("c7gn"),St=n("BbuY");let Tt;function Ct(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)s=!0;else if(null!=t.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);o=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(jt.c)(Nt.ib,d.a.backendName)){const n={pixels:t},r={numChannels:e};return d.a.runKernel(Nt.ib,n,r)}const[u,c]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(i?l=t.getContext("2d").getImageData(0,0,u,c).data:r||n?l=t.data:(s||a||o)&&(null==Tt&&(Tt=document.createElement("canvas").getContext("2d")),Tt.canvas.width=u,Tt.canvas.height=c,Tt.drawImage(t,0,0,u,c),l=Tt.getImageData(0,0,u,c).data),4===e)h=new Int32Array(l);else{const t=u*c;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}const p=[c,u,e];return Object(St.a)(h,p,"int32")}function $t(t){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(t instanceof ImageBitmap)&&function(t){return null!=t&&0!==t.width&&0!==t.height}(t)&&!function(t){return null!=t&&t.data instanceof Uint8Array}(t)}async function Et(t,e=3){let n=null;if(Object(h.c)().getBool("WRAP_TO_IMAGEBITMAP")&&$t(t)){let e;try{e=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch(r){e=null}n=null!=e&&e.width===t.width&&e.height===t.height?e:t}else n=t;return Ct(n,e)}async function At(t,e){let n=Object(xt.a)(t,"img","toPixels");if(!(t instanceof Q.a)){const t=n;n=Object(Y.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let c=0;c<r*a;++c){const t=[0,0,0,255];for(let r=0;r<s;r++){const e=i[c*s+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${e}.`)}else if("int32"===n.dtype&&(e<0||e>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${e}.`);1===s?(t[0]=e*o,t[1]=e*o,t[2]=e*o):t[r]=e*o}const e=4*c;u[e+0]=Math.round(t[0]),u[e+1]=Math.round(t[1]),u[e+2]=Math.round(t[2]),u[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(u,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),u}const Ft=Object(wt.b)({fromPixels_:Ct});function Rt(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(0===Object(S.O)(t.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const a=e.shape,s=a[a.length-1];let i=1;for(let d=0;d<a.length-1;++d)i*=a[d];const o=t.shape,u=a.slice();u.pop();let c=1;for(let d=s;d<n;++d)c*=o[d],u.push(o[d]);const l=[...Object(S.j)(t.shape).map((t=>t/c)),1].slice(0,s);return[u,i,c,l]}var _t=n("o0+U"),Dt=n("Xr0w");class Mt{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class zt{constructor(){this.classNameMap={}}static getMap(){return null==zt.instance&&(zt.instance=new zt),zt.instance}static register(t){zt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Lt(t){Object(S.b)(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),Object(S.b)("string"===typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),Object(S.b)(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),zt.register(t)}var Pt=n("dsKV"),Bt=n("1WXW"),Vt=n("6366");const Wt="3.5.0";var Ut=n("wE5H"),Kt=n("kRdc"),Gt=n("x3y4"),Ht=n("parS"),qt=n("Fjpt"),Xt=n("k7Jv"),Yt=n("oJu+"),Jt=n("U45G"),Zt=n("AV8V");class Qt extends Mt{minimize(t,e=!1,n){const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:a[t.name]})));this.applyGradients(t)}else this.applyGradients(a);return Object(Ut.d)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(Jt.f)(t,e)}dispose(){null!=this.iterations_&&Object(Ut.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Zt.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Qt,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class te extends Qt{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(false)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Ut.t)((()=>{const t=Object(Kt.a)(Object(Ht.a)(s,this.rho),Object(Ht.a)(Object(Xt.a)(a),1-this.rho)),e=Object(Ht.a)(Object(Gt.a)(Object(qt.a)(Object(Kt.a)(i,this.epsilon)),Object(qt.a)(Object(Kt.a)(s,this.epsilon))),a),n=Object(Kt.a)(Object(Ht.a)(i,this.rho),Object(Ht.a)(Object(Xt.a)(e),1-this.rho));s.assign(t),i.assign(n);const o=Object(Kt.a)(Object(Ht.a)(e,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ut.d)(this.accumulatedGrads.map((t=>t.variable))),Object(Ut.d)(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}te.className="Adadelta",Lt(te);var ee=n("RrjA");class ne extends Qt{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Object(Ut.t)((()=>Object(ee.a)(r.shape,this.initialAccumulatorValue).variable(t)))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Ut.t)((()=>{const t=Object(Kt.a)(s,Object(Xt.a)(a));s.assign(t);const e=Object(Kt.a)(Object(Ht.a)(Object(Gt.a)(a,Object(qt.a)(Object(Kt.a)(t,d.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ut.d)(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}ne.className="Adagrad",Lt(ne);var re=n("yfHJ"),ae=n("oAkI");class se extends Qt{constructor(t,e,n,r=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ut.t)((()=>{this.accBeta1=Object(Zt.a)(e).variable(),this.accBeta2=Object(Zt.a)(n).variable()})),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Object(Ut.t)((()=>{const n=Object(ae.a)(1,this.accBeta1),r=Object(ae.a)(1,this.accBeta2);e.forEach(((e,a)=>{const s=d.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${e}/m`,variable:Object(Ut.t)((()=>Object(Yt.a)(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${e}/v`,variable:Object(Ut.t)((()=>Object(Yt.a)(s).variable(false)))});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Kt.a)(Object(Ht.a)(o,this.beta1),Object(Ht.a)(i,1-this.beta1)),l=Object(Kt.a)(Object(Ht.a)(u,this.beta2),Object(Ht.a)(Object(Xt.a)(i),1-this.beta2)),h=Object(Gt.a)(c,n),p=Object(Gt.a)(l,r);o.assign(c),u.assign(l);const f=Object(Kt.a)(Object(Ht.a)(Object(Gt.a)(h,Object(Kt.a)(Object(qt.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Object(Ht.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(Ht.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ut.d)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Object(Ut.d)(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Object(Ut.t)((()=>{this.accBeta1.assign(Object(re.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(re.a)(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}se.className="Adam",Lt(se);var ie=n("iuCH"),oe=n("CfTU");class ue extends Qt{constructor(t,e,n,r=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ut.t)((()=>{this.iteration=Object(Zt.a)(0).variable(),this.accBeta1=Object(Zt.a)(e).variable()})),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Object(Ut.t)((()=>{const n=Object(ae.a)(1,this.accBeta1),r=Object(Gt.a)(-this.learningRate,Object(Kt.a)(Object(Ht.a)(this.iteration,this.decay),1));e.forEach(((e,a)=>{const s=d.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${e}/m`,variable:Object(Yt.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${e}/v`,variable:Object(Yt.a)(s).variable(false)});const i=Array.isArray(t)?t[a].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Kt.a)(Object(Ht.a)(o,this.beta1),Object(Ht.a)(i,1-this.beta1)),l=Object(Ht.a)(u,this.beta2),h=Object(ie.a)(i),p=Object(oe.a)(l,h);o.assign(c),u.assign(p);const f=Object(Kt.a)(Object(Ht.a)(Object(Gt.a)(r,n),Object(Gt.a)(c,Object(Kt.a)(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Object(Kt.a)(this.iteration,1)),this.accBeta1.assign(Object(Ht.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ut.d)(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Object(Ut.d)(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}ue.className="Adamax",Lt(ue);class ce extends Qt{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=d.a.registeredVariables[e];Object(Ut.t)((()=>{const t=Object(Kt.a)(Object(Ht.a)(this.c,r),a);a.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Ut.l)(Object(Zt.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ce.className="SGD",Lt(ce);class le extends ce{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(Zt.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(t)))}}const a=this.accumulations[n].variable,s=Array.isArray(t)?t[n].tensor:t[e];null!=s&&Object(Ut.t)((()=>{let t;const e=Object(Kt.a)(Object(Ht.a)(this.m,a),s);t=this.useNesterov?Object(Kt.a)(Object(Ht.a)(this.c,Object(Kt.a)(s,Object(Ht.a)(e,this.m))),r):Object(Kt.a)(Object(Ht.a)(this.c,e),r),a.assign(e),r.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ut.d)(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}le.className="Momentum",Lt(le);class de extends Qt{constructor(t,e=.9,n=0,r=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=d.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const r=d.a.registeredVariables[e],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Object(Ut.t)((()=>Object(Yt.a)(r).variable(a)))});const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(Ut.t)((()=>{const t=Object(Kt.a)(Object(Ht.a)(i,this.decay),Object(Ht.a)(Object(Xt.a)(s),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,a=Object(Kt.a)(Object(Ht.a)(e,this.decay),Object(Ht.a)(s,1-this.decay)),u=Object(Gt.a)(Object(Ht.a)(s,this.learningRate),Object(qt.a)(Object(ae.a)(t,Object(Kt.a)(Object(Xt.a)(a),this.epsilon)))),c=Object(Kt.a)(Object(Ht.a)(o,this.momentum),u);i.assign(t),e.assign(a),o.assign(c);const l=Object(ae.a)(r,c);r.assign(l)}else{const t=Object(Kt.a)(Object(Ht.a)(i,this.decay),Object(Ht.a)(Object(Xt.a)(s),1-this.decay)),e=Object(Kt.a)(Object(Ht.a)(o,this.momentum),Object(Gt.a)(Object(Ht.a)(s,this.learningRate),Object(qt.a)(Object(Kt.a)(t,this.epsilon))));i.assign(t),o.assign(e);const n=Object(ae.a)(r,e);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ut.d)(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ut.d)(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Object(Ut.d)(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}de.className="RMSProp",Lt(de);var he=n("I79q"),pe=n("EysY"),fe=n("V+B2");class me{static sgd(t){return new ce(t)}static momentum(t,e,n=!1){return new le(t,e,n)}static rmsprop(t,e=.9,n=0,r=null,a=!1){return new de(t,e,n,r,a)}static adam(t=.001,e=.9,n=.999,r=null){return new se(t,e,n,r)}static adadelta(t=.001,e=.95,n=null){return new te(t,e,n)}static adamax(t=.002,e=.9,n=.999,r=null,a=0){return new ue(t,e,n,r,a)}static adagrad(t,e=.1){return new ne(t,e)}}const be={sgd:me.sgd,momentum:me.momentum,adadelta:me.adadelta,adagrad:me.adagrad,rmsprop:me.rmsprop,adamax:me.adamax,adam:me.adam},ge="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:t=>t();function ye(){return new Promise((t=>ge((()=>t()))))}var xe=n("NuWS"),Oe=n("Um8L");function ve(t,e){const n=t[0].length;t.forEach(((t,e)=>{S.b(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),S.b(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=t[0];t.forEach(((t,a)=>{for(let s=0;s<n;s++)S.b(s===e||t[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${t}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function we(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var ke=n("uBja"),Ie=n("R0ls");const Ne=30;function je(t){return t<=Ne?t:Object(S.G)(t,Math.floor(Math.sqrt(t)))}function Se(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Te(t,e,n,r=!0){let a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function Ce(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function $e(t,e,n,r=!0){const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let s=1;s<t.length;++s)s<=e.length?r?a.push(e[s-1]*t[s]):a.push(t[s]/e[s-1]):a.push(t[s]);return a}function Ee(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Ae(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}var Fe=n("fN6/");const Re=.3275911,_e=.254829592,De=-.284496736,Me=1.421413741,ze=-1.453152027,Le=1.061405429;function Pe(...t){Object(h.c)().getBool("IS_TEST")||console.warn(...t)}function Be(...t){Object(h.c)().getBool("IS_TEST")||console.log(...t)}function Ve(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function We(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Ue(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Ke(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function Ge(t,e){return{real:t[2*e],imag:t[2*e+1]}}function He(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function qe(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const s=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Xe(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}const Ye="->",Je=/->/g;function Ze(t,e){const n=((t=t.replace(/\s/g,"")).length-t.replace(Je,"").length)/Ye.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=t.split(Ye);Object(S.b)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<a.length;++d){const t=a[d];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let d=0;d<r.length;++d){const t=r[d];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let t=0;t<s[d].length;++t)u[d].push(o.indexOf(s[d][t]))}const c=o.length,l=[];for(let d=a.length;d<c;++d)l.push(d);return{allDims:o,summedDims:l,idDims:u}}function Qe(t,e){let n=new Array(t);n.fill(-1);for(let a=0;a<e.length;++a)n[e[a]]=a;const r=[];for(let a=0;a<t;++a)-1===n[a]&&r.push(a);return n=n.filter((t=>-1!==t)),{permutationIndices:n,expandDims:r}}function tn(t,e,n){const r=new Array(t);for(let a=0;a<n.length;++a){const t=n[a].shape;for(let n=0;n<e[a].length;++n)void 0===r[e[a][n]]?r[e[a][n]]=t[n]:Object(S.b)(r[e[a][n]]===t[n],(()=>`Expected dimension ${r[e[a][n]]} at axis ${n} of input shaped ${JSON.stringify(t)}, but got dimension ${t[n]}`))}}function en(t,e){const n=t,r=[];let a=0;0===t.length&&n.push(-1),a=t.length+1;for(let i=0;i<a;++i)r.push([]);const s=[];for(let i=0;i<n.length;++i){const t=rn(e,n[i]);for(const e of t)-1===s.indexOf(e)&&(r[i].push(e),s.push(e))}return{path:n,steps:r}}function nn(t){return t.every(((t,e)=>t===e))}function rn(t,e){const n=[];for(let r=0;r<t.length;++r)0!==t[r].length&&-1===t[r].indexOf(e)&&-1!==e||n.push(r);return n}function an(t,e,n=0){let r=[];if("number"===typeof e)Object(S.b)(t.shape[n]%e===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);Object(S.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}Object(S.b)(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=e}return r}function sn(t,e){let n,r=!1;for(t<=Ne?(n=t,r=!0):n=Object(S.G)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(S.G)(t,n+1);return n}function on(t,e,n){const r=[],a=t.length;for(let s=0;s<a;s++)s!==e?r.push(t[s]):r.push(n);return r}function un(t,e,n,r){const a=e.shape.length,s=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${t.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=t.shape[n],o=[];let u=1,c=1,l=1;for(let d=0;d<r;++d)o.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<n;d++)o.push(t.shape[d]),c*=t.shape[d];for(let d=r;d<a;d++)o.push(e.shape[d]);for(let d=n+1;d<s;d++)o.push(t.shape[d]),l*=t.shape[d];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function cn(t){try{return t.map((t=>Object(Vt.decodeString)(t)))}catch(mn){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${mn}`)}}function ln(t){return t.map((t=>Object(Vt.encodeString)(t)))}var dn=n("ftYm"),hn=n("g4m1"),pn=n("AoCb"),fn=n("i4e/")},"/0+H":function(t,e,n){"use strict";e.__esModule=!0,e.isInAmpMode=i,e.useAmp=function(){return i(a.default.useContext(s.AmpStateContext))};var r,a=(r=n("q1tI"))&&r.__esModule?r:{default:r},s=n("lwAK");function i(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.ampFirst,n=void 0!==e&&e,r=t.hybrid,a=void 0!==r&&r,s=t.hasQuery,i=void 0!==s&&s;return n||a&&i}},"/7N0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sigmoid_:function(t){const e={x:Object(s.a)(t,"x","sigmoid")};return r.a.runKernel(a.Bc,e)}})},"/AvP":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isFinite_:function(t){const e={x:Object(s.a)(t,"x","isFinite")};return r.a.runKernel(a.tb,e)}})},"/EDR":function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n("QeBL")}])},0:function(t,e){},"02mo":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({floor_:function(t){const e={x:Object(s.a)(t,"x","floor")};return r.a.runKernel(a.gb,e)}})},"0I63":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reverse_:function(t,e){const n={x:Object(s.a)(t,"x","reverse")},i={dims:e};return r.a.runKernel(a.uc,n,i)}})},"0ahe":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atanh_:function(t){const e={x:Object(s.a)(t,"x","atanh")};return r.a.runKernel(a.n,e)}})},"0fRV":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("o/e8"),a=n("atXS"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,e).newShape)}})},"0l+w":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("Um8L"),s=n("4zPZ"),i=n("7wDt"),o=n("8YN0"),u=n("VO80");const c=Object(u.b)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),u=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(t,e),Object(i.a)(Object(s.a)(t,e)))}})},"0wNd":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const r={};function a(t){return r[t]}},"0wrZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tan_:function(t){const e={x:Object(s.a)(t,"x","tan")};return r.a.runKernel(a.Tc,e)}})},1:function(t,e){},"17CO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({real_:function(t){const e={input:Object(s.a)(t,"input","real")};return r.a.runKernel(a.kc,e)}})},"1N4k":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({notEqual_:function(t,e){let n=Object(i.a)(t,"a","notEqual"),u=Object(i.a)(e,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ac,c)}})},"1OSX":function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}));var r=n("YSVl");n("1WXW");class a{constructor(t,e,n,a,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);t=this.mean+this.stdDev*r*i,e=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class s{constructor(t,e,n,s){this.alpha=t,this.beta=1/e,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-s+Math.log(s)),a=this.randu(),a<e||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class i{constructor(t=0,e=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},"1U0N":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({stack_:function(t,e=0){const n=Object(s.b)(t,"tensors","stack","string_or_numeric");i.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.b(e<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:e};return r.a.runKernel(a.dc,o,u)}})},"1VZP":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},"1WXW":function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return o})),n.d(e,"expectArraysClose",(function(){return u})),n.d(e,"testEpsilon",(function(){return c})),n.d(e,"expectPromiseToFail",(function(){return d})),n.d(e,"expectArraysEqual",(function(){return h})),n.d(e,"expectNumbersClose",(function(){return p})),n.d(e,"expectValuesInRange",(function(){return m})),n.d(e,"expectArrayBuffersEqual",(function(){return b})),n.d(e,"encodeStrings",(function(){return g}));var r=n("auKK"),a=n("o/e8"),s=n("atXS"),i=n("6366");const o=.1;function u(t,e,n){return null==n&&(n=c()),l(t,e,((t,e)=>f(t,e,n)))}function c(){return 32===r.a.backend.floatPrecision()?.001:o}function l(t,e,n){let r=!0;if((Object(s.A)(t)||Object(s.A)(e))&&(r=!1),Object(s.A)(t)&&Object(s.A)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a.c)(t),r=Object(a.c)(e);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(t)?t:Object(s.m)(t),o=Object(s.A)(e)?e:Object(s.m)(e);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let a=0;a<o.length;++a){const t=i[a],e=o[a];if(!n(t,e))throw new Error(`Arrays differ: actual[${a}] = ${t}, expected[${a}] = ${e}.\nActual:   ${i}.\nExpected: ${o}.`)}}function d(t,e){t().then((()=>e.fail()),(()=>e()))}function h(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(s.z)(t)||Object(s.z)(t[0])||Object(s.z)(e)||Object(s.z)(e[0])?l(t,n,((t,e)=>t==e)):l(t,e,((t,e)=>f(t,e,0)))}function p(t,e,n){if(null==n&&(n=c()),!f(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`)}function f(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function m(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function b(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function g(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?g(n):t[e]=Object(i.encodeString)(n)}return t}},2:function(t,e){},"2/MO":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},"20lx":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMin_:function(t,e=0){const n={x:Object(s.a)(t,"x","argMin")},i={axis:e};return r.a.runKernel(a.i,n,i)}})},"2ugP":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({expandDims_:function(t,e=0){const n=Object(s.a)(t,"x","expandDims","string_or_numeric");i.b(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:e};return r.a.runKernel(a.bb,o,u)}})},3:function(t,e){},"34HJ":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({all_:function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","all","bool")},o={axis:e,keepDims:n};return r.a.runKernel(a.f,i,o)}})},"3BSK":function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i}));var r=n("+hG3"),a=n("w4jT"),s=n("TPxA");class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(t){super(),this.upstream=t,this.impl=new u(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(3);this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n("HDXh").Buffer)},"3FnS":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asinh_:function(t){const e={x:Object(s.a)(t,"x","asinh")};return r.a.runKernel(a.k,e)}})},"3X4V":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv2d_:function(t,e,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(t,"x","conv2d"),f=Object(s.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.b(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=h&&i.b(i.v(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`));const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`)),i.b(o.h(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},O=r.a.runKernel(a.C,y,x);return b?Object(c.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},"3hph":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({stridedSlice_:function(t,e,n,i,o=0,u=0,c=0,l=0,d=0){const h={x:Object(s.a)(t,"x","stridedSlice")},p={begin:e,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Qc,h,p)}})},"3rNm":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({cast_:function(t,e){const n=Object(s.a)(t,"x","cast");if(!i.B(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:e};return r.a.runKernel(a.w,o,u)}})},4:function(t,e){},"49sm":function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},"4FMF":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({sum_:function(t,e=null,n=!1){let o=Object(s.a)(t,"x","sum");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r.a.runKernel(a.Sc,u,c)}})},"4QEz":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({localResponseNormalization_:function(t,e=5,n=1,o=1,c=.5){const l=Object(s.a)(t,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),i.b(i.v(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:o,beta:c},m=r.a.runKernel(a.wb,p,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},"4f3O":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({less_:function(t,e){let n=Object(i.a)(t,"a","less"),u=Object(i.a)(e,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.zb,c)}})},"4iwy":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({oneHot_:function(t,e,n=1,i=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:Object(s.a)(t,"indices","oneHot","int32")},u={depth:e,onValue:n,offValue:i};return r.a.runKernel(a.bc,o,u)}})},"4zPZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalAnd_:function(t,e){const n=Object(s.a)(t,"a","logicalAnd","bool"),o=Object(s.a)(e,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Fb,u)}})},6366:function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return s})),n.d(e,"toTypedArray",(function(){return i})),n.d(e,"now",(function(){return o})),n.d(e,"fetch",(function(){return u})),n.d(e,"encodeString",(function(){return c})),n.d(e,"decodeString",(function(){return l}));var r=n("szMd"),a=n("atXS");function s(t,e){return"string"===e?c(t):i([t],e)}function i(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function o(){return Object(r.c)().platform.now()}function u(t,e){return Object(r.c)().platform.fetch(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function l(t,e="utf-8"){return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"shuffleCombo",(function(){return a.N})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.R})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.O})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.S})),n.d(e,"sizeToSquarishShape",(function(){return a.P})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.Q})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.T})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},"6J+n":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({argMax_:function(t,e=0){const n={x:Object(s.a)(t,"x","argMax")},i={axis:e};return r.a.runKernel(a.h,n,i)}})},"6vQL":function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n("o/e8"),a=n("atXS"),s=n("l0gX"),i=n("OygE"),o=n("uBja"),u=n("n+ZZ"),c=n("VO80"),l=n("NclT"),d=n("dYAU");const h=Object(c.b)({pool_:function(t,e,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`));const g=o.e(m.shape,e,p,h,c),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===c?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),a=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],a[e]]))}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const O=1===y[0]&&1===y[1],[v,w]=function(t,e,n){const r=n.map((t=>t[0])),a=n.map((t=>t[1])),s=t.concat(r,a),i=e.map(((t,e)=>(t-s[e]%t)%t)),o=a.map(((t,e)=>t+i[e])),u=e.map(((t,e)=>[r[e],o[e]])),c=e.map(((t,e)=>[0,i[e]]));return[u,c]}([g.inHeight,g.inWidth],y,x),k=O?c:"valid",I=O?m:Object(d.a)(m,y,v),N=("avg"===n?()=>Object(s.a)(I,e,p,k):()=>Object(u.a)(I,e,p,k))(),j=O?N:Object(i.a)(N,y,w);return b?Object(l.a)(j,[j.shape[1],j.shape[2],j.shape[3]]):j}})},"7/dO":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cos_:function(t){const e={x:Object(s.a)(t,"x","cos")};return r.a.runKernel(a.I,e)}})},"7wDt":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({logicalNot_:function(t){const e={x:Object(s.a)(t,"x","logicalNot","bool")};return r.a.runKernel(a.Gb,e)}})},"867m":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("3rNm"),o=n("VO80");const u=Object(o.b)({prod_:function(t,e=null,n=!1){let o=Object(s.a)(t,"x","prod");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:e,keepDims:n};return r.a.runKernel(a.ic,u,c)}})},"8BGy":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},"8Km0":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({clone_:function(t){const e={x:Object(s.a)(t,"x","clone","string_or_numeric")};return r.a.runKernel(a.rb,e)}})},"8Kt/":function(t,e,n){"use strict";n("lSNA");e.__esModule=!0,e.defaultHead=l,e.default=void 0;var r,a=function(t){if(t&&t.__esModule)return t;if(null===t||"object"!==typeof t&&"function"!==typeof t)return{default:t};var e=c();if(e&&e.has(t))return e.get(t);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(Object.prototype.hasOwnProperty.call(t,a)){var s=r?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}n.default=t,e&&e.set(t,n);return n}(n("q1tI")),s=(r=n("Xuae"))&&r.__esModule?r:{default:r},i=n("lwAK"),o=n("FYa8"),u=n("/0+H");function c(){if("function"!==typeof WeakMap)return null;var t=new WeakMap;return c=function(){return t},t}function l(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],e=[a.default.createElement("meta",{charSet:"utf-8"})];return t||e.push(a.default.createElement("meta",{name:"viewport",content:"width=device-width"})),e}function d(t,e){return"string"===typeof e||"number"===typeof e?t:e.type===a.default.Fragment?t.concat(a.default.Children.toArray(e.props.children).reduce((function(t,e){return"string"===typeof e||"number"===typeof e?t:t.concat(e)}),[])):t.concat(e)}var h=["name","httpEquiv","charSet","itemProp"];function p(t,e){return t.reduce((function(t,e){var n=a.default.Children.toArray(e.props.children);return t.concat(n)}),[]).reduce(d,[]).reverse().concat(l(e.inAmpMode)).filter(function(){var t=new Set,e=new Set,n=new Set,r={};return function(a){var s=!0,i=!1;if(a.key&&"number"!==typeof a.key&&a.key.indexOf("$")>0){i=!0;var o=a.key.slice(a.key.indexOf("$")+1);t.has(o)?s=!1:t.add(o)}switch(a.type){case"title":case"base":e.has(a.type)?s=!1:e.add(a.type);break;case"meta":for(var u=0,c=h.length;u<c;u++){var l=h[u];if(a.props.hasOwnProperty(l))if("charSet"===l)n.has(l)?s=!1:n.add(l);else{var d=a.props[l],p=r[l]||new Set;"name"===l&&i||!p.has(d)?(p.add(d),r[l]=p):s=!1}}}return s}}()).reverse().map((function(t,e){var n=t.key||e;return a.default.cloneElement(t,{key:n})}))}function f(t){var e=t.children,n=(0,a.useContext)(i.AmpStateContext),r=(0,a.useContext)(o.HeadManagerContext);return a.default.createElement(s.default,{reduceComponentsToState:p,headManager:r,inAmpMode:(0,u.isInAmpMode)(n)},e)}f.rewind=function(){};var m=f;e.default=m},"8OX7":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({minimum_:function(t,e){let n=Object(i.a)(t,"a","minimum"),c=Object(i.a)(e,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Rb,l)}})},"8YN0":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("Um8L"),o=n("VO80");const u=Object(o.b)({logicalOr_:function(t,e){const n=Object(s.a)(t,"a","logicalOr","bool"),o=Object(s.a)(e,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Hb,u)}})},"8oxB":function(t,e){var n,r,a=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(t){if(n===setTimeout)return setTimeout(t,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:s}catch(t){n=s}try{r="function"===typeof clearTimeout?clearTimeout:i}catch(t){r=i}}();var u,c=[],l=!1,d=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&p())}function p(){if(!l){var t=o(h);l=!0;for(var e=c.length;e;){for(u=c,c=[];++d<e;)u&&u[d].run();d=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new f(t,e)),1!==c.length||l||o(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(t){return[]},a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},"90yW":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("NNfn"),a=n("o/e8"),s=n("atXS");const i=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),i=Object(a.a)(e,"y","setdiff1d");s.b(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.b(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let r=0;r<o.length;r++)c.has(o[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<o.length;r++)c.has(o[r])||(d.values[a]=o[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},"91d6":function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n("o/e8"),a=n("atXS"),s=n("iuCH"),i=n("NuWS"),o=n("wCH+"),u=n("rm0a"),c=n("VO80"),l=n("yfHJ"),d=n("NclT"),h=n("AV8V"),p=n("Fjpt"),f=n("k7Jv"),m=n("4FMF");function b(t,e,n=null){if(0===t.rank)return Object(s.a)(t);if(1!==t.rank&&null===n)return b(Object(d.a)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Object(m.a)(Object(s.a)(t),n);if(e===1/0)return Object(o.a)(Object(s.a)(t),n);if(e===-1/0)return Object(u.a)(Object(s.a)(t),n);if("euclidean"===e||2===e)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(t),Object(h.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return Object(o.a)(Object(m.a)(Object(s.a)(t),n[0]),n[1]-1);if(e===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(t),n[1]),n[0]);if(e===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Object(p.a)(Object(m.a)(Object(f.a)(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const g=Object(c.b)({norm_:function(t,e="euclidean",n=null,s=!1){const o=b(t=Object(r.a)(t,"x","norm"),e,n);let u=o.shape;if(s){const e=Object(a.I)(n,t.shape);u=i.e(o.shape,e)}return Object(d.a)(o,u)}})},"9JAK":function(t,e,n){"use strict";(function(t,r){let a;function s(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function i(t,e){const n=function(){const t=s();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return s})),n.d(e,"a",(function(){return i}))}).call(this,n("ntbh"),n("8oxB"))},"ARu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("dsKV"),a=n("o/e8"),s=n("x3y4"),i=n("ubnP"),o=n("VO80"),u=n("Z5Ez"),c=n("oJu+");const l=Object(o.b)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),o=Object(a.a)(e,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},AV8V:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("atXS"),a=n("WVnj");function s(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},AoCb:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("BD40");function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),s=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),i=r*t.length;s.values.set(e,i)}return s.toTensor()}},B3db:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({complex_:function(t,e){const n=Object(s.a)(t,"real","complex"),o=Object(s.a)(e,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernel(a.z,u)}})},BD40:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("NNfn"),a=n("atXS");function s(t,e="float32",n){return e=e||"float32",a.c(t),new r.b(t,e,n)}},BLhf:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},BMSg:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({bincount_:function(t,e,n){const o=Object(s.a)(t,"x","bincount"),u=Object(s.a)(e,"weights","bincount");i.b("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const c={x:o,weights:u},l={size:n};return r.a.runKernel(a.u,c,l)}})},BbuY:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(t,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(t,e,i,n)}},Bnag:function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},CKnt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({round_:function(t){const e={x:Object(s.a)(t,"x","round")};return r.a.runKernel(a.wc,e)}})},CfTU:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("3rNm"),c=n("VO80");const l=Object(c.b)({maximum_:function(t,e){let n=Object(i.a)(t,"a","maximum"),c=Object(i.a)(e,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Ob,l)}})},"D2/b":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv2DBackpropFilter_:function(t,e,n,i,u,c="NHWC",l){let d=t;3===t.rank&&(d=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),s.b(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.b(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),s.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];s.b(p===n[2],(()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`)),s.b(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:d,dy:h},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},D4ac:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeNearestNeighbor_:function(t,e,n=!1,o=!1){const c=Object(s.a)(t,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),i.b("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.b(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r.a.runKernel(a.sc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},DbV5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({onesLike_:function(t){const e={x:Object(s.a)(t,"x","onesLike")};return r.a.runKernel(a.cc,e)}})},DrVt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({pad_:function(t,e,n=0){const i=Object(s.a)(t,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:n},u={x:i};return r.a.runKernel(a.ec,u,o)}})},E1lT:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log_:function(t){const e={x:Object(s.a)(t,"x","log")};return r.a.runKernel(a.Cb,e)}})},ET5l:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},EWu9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("g4+C"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({separableConv2d_:function(t,e,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(t,"x","separableConv2d"),p=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.b(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.b(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`));const x=Object(i.a)(m,p,o,c,d,l),O=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},EbDI:function(t,e){t.exports=function(t){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}},EhIR:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new i(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.alea=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},Ei6o:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({mean_:function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","mean")},o={axis:e,keepDims:n};return r.a.runKernel(a.Pb,i,o)}})},EysY:function(t,e,n){"use strict";n.d(e,"b",(function(){return a.a})),n.d(e,"c",(function(){return s.a})),n.d(e,"d",(function(){return i.a})),n.d(e,"e",(function(){return o.a})),n.d(e,"f",(function(){return u.a})),n.d(e,"g",(function(){return c.a})),n.d(e,"h",(function(){return l.a})),n.d(e,"i",(function(){return d.a})),n.d(e,"j",(function(){return h.a})),n.d(e,"k",(function(){return p.a})),n.d(e,"l",(function(){return f.a})),n.d(e,"m",(function(){return m.a})),n.d(e,"n",(function(){return b.a})),n.d(e,"o",(function(){return g.a})),n.d(e,"p",(function(){return y.a})),n.d(e,"q",(function(){return x.a})),n.d(e,"r",(function(){return T})),n.d(e,"w",(function(){return C.a})),n.d(e,"s",(function(){return $.a})),n.d(e,"t",(function(){return A})),n.d(e,"u",(function(){return F})),n.d(e,"v",(function(){return R})),n.d(e,"x",(function(){return _.a})),n.d(e,"z",(function(){return D.a})),n.d(e,"A",(function(){return M.a})),n.d(e,"B",(function(){return z.a})),n.d(e,"C",(function(){return L.a})),n.d(e,"D",(function(){return P.a})),n.d(e,"E",(function(){return B.a})),n.d(e,"F",(function(){return V.a})),n.d(e,"G",(function(){return v.a})),n.d(e,"H",(function(){return W})),n.d(e,"I",(function(){return U})),n.d(e,"J",(function(){return K})),n.d(e,"K",(function(){return G})),n.d(e,"L",(function(){return H.a})),n.d(e,"M",(function(){return q.a})),n.d(e,"N",(function(){return X.a})),n.d(e,"O",(function(){return Y.a})),n.d(e,"P",(function(){return Z})),n.d(e,"Q",(function(){return Q.a})),n.d(e,"R",(function(){return tt.a})),n.d(e,"T",(function(){return et.a})),n.d(e,"U",(function(){return nt.a})),n.d(e,"V",(function(){return rt.a})),n.d(e,"W",(function(){return at.a})),n.d(e,"X",(function(){return ot})),n.d(e,"Y",(function(){return ut.a})),n.d(e,"Z",(function(){return ct.a})),n.d(e,"ab",(function(){return lt.a})),n.d(e,"bb",(function(){return dt.a})),n.d(e,"db",(function(){return ht.a})),n.d(e,"eb",(function(){return pt.a})),n.d(e,"gb",(function(){return ft.a})),n.d(e,"hb",(function(){return mt.a})),n.d(e,"ib",(function(){return bt.a})),n.d(e,"jb",(function(){return gt.a})),n.d(e,"kb",(function(){return yt.a})),n.d(e,"lb",(function(){return vt})),n.d(e,"nb",(function(){return wt.a})),n.d(e,"ob",(function(){return kt.a})),n.d(e,"pb",(function(){return It.a})),n.d(e,"rb",(function(){return Nt.a})),n.d(e,"tb",(function(){return jt.a})),n.d(e,"ub",(function(){return St.a})),n.d(e,"wb",(function(){return Tt.a})),n.d(e,"Ab",(function(){return Ct.a})),n.d(e,"Bb",(function(){return $t.a})),n.d(e,"Cb",(function(){return Et.a})),n.d(e,"Db",(function(){return At.a})),n.d(e,"Eb",(function(){return Ft.a})),n.d(e,"Fb",(function(){return Rt.a})),n.d(e,"Hb",(function(){return _t.a})),n.d(e,"Ib",(function(){return Dt.a})),n.d(e,"Jb",(function(){return Mt.a})),n.d(e,"Kb",(function(){return zt.a})),n.d(e,"Lb",(function(){return Lt.a})),n.d(e,"Mb",(function(){return Pt.a})),n.d(e,"Nb",(function(){return Bt.a})),n.d(e,"Ob",(function(){return Vt.a})),n.d(e,"Pb",(function(){return Wt.a})),n.d(e,"Qb",(function(){return Ut.a})),n.d(e,"Rb",(function(){return Kt.a})),n.d(e,"Tb",(function(){return w.a})),n.d(e,"Ub",(function(){return Gt.a})),n.d(e,"Vb",(function(){return Ht.a})),n.d(e,"Wb",(function(){return qt.a})),n.d(e,"Xb",(function(){return Xt.a})),n.d(e,"Yb",(function(){return Yt.a})),n.d(e,"Zb",(function(){return Jt.a})),n.d(e,"ac",(function(){return te})),n.d(e,"bc",(function(){return ee.a})),n.d(e,"cc",(function(){return ne.a})),n.d(e,"dc",(function(){return re.a})),n.d(e,"ec",(function(){return ae.a})),n.d(e,"fc",(function(){return ue})),n.d(e,"hc",(function(){return k.a})),n.d(e,"ic",(function(){return ce})),n.d(e,"jc",(function(){return le.a})),n.d(e,"kc",(function(){return de.a})),n.d(e,"mc",(function(){return he.a})),n.d(e,"nc",(function(){return pe.a})),n.d(e,"oc",(function(){return Zt.a})),n.d(e,"pc",(function(){return fe.a})),n.d(e,"rc",(function(){return me})),n.d(e,"sc",(function(){return be.a})),n.d(e,"tc",(function(){return ge})),n.d(e,"uc",(function(){return ye})),n.d(e,"vc",(function(){return xe})),n.d(e,"wc",(function(){return Oe})),n.d(e,"xc",(function(){return ve.a})),n.d(e,"yc",(function(){return we.a})),n.d(e,"zc",(function(){return ke.a})),n.d(e,"Ac",(function(){return Ie.a})),n.d(e,"Bc",(function(){return Ne.a})),n.d(e,"Cc",(function(){return je})),n.d(e,"Dc",(function(){return Te})),n.d(e,"Ec",(function(){return Ce})),n.d(e,"Fc",(function(){return $e.a})),n.d(e,"Gc",(function(){return Ee.a})),n.d(e,"Hc",(function(){return Ae.a})),n.d(e,"Ic",(function(){return Fe.a})),n.d(e,"Jc",(function(){return Re.a})),n.d(e,"Kc",(function(){return _e.a})),n.d(e,"Lc",(function(){return xt.a})),n.d(e,"Mc",(function(){return De.a})),n.d(e,"Nc",(function(){return Me})),n.d(e,"Oc",(function(){return ze})),n.d(e,"Pc",(function(){return Le})),n.d(e,"Qc",(function(){return Pe})),n.d(e,"Sc",(function(){return Be.a})),n.d(e,"Tc",(function(){return Ve.a})),n.d(e,"Uc",(function(){return We.a})),n.d(e,"Wc",(function(){return Ue.a})),n.d(e,"Xc",(function(){return Ke.a})),n.d(e,"Yc",(function(){return Ge.a})),n.d(e,"Zc",(function(){return N.a})),n.d(e,"ad",(function(){return He.a})),n.d(e,"cd",(function(){return qe.a})),n.d(e,"dd",(function(){return Xe.a})),n.d(e,"ed",(function(){return j.a})),n.d(e,"fd",(function(){return Ye})),n.d(e,"gd",(function(){return Je})),n.d(e,"hd",(function(){return Ze})),n.d(e,"id",(function(){return Qe})),n.d(e,"jd",(function(){return tn.a})),n.d(e,"kd",(function(){return en.a})),n.d(e,"ld",(function(){return nn.a})),n.d(e,"mb",(function(){return rn.a})),n.d(e,"vb",(function(){return an.a})),n.d(e,"zb",(function(){return sn.a})),n.d(e,"Rc",(function(){return on.a})),n.d(e,"pd",(function(){return un.a})),n.d(e,"qd",(function(){return cn.a})),n.d(e,"rd",(function(){return ie.a})),n.d(e,"sd",(function(){return ln.a})),n.d(e,"td",(function(){return dn.a})),n.d(e,"ud",(function(){return hn.a})),n.d(e,"vd",(function(){return pn.a})),n.d(e,"wd",(function(){return fn.a})),n.d(e,"xd",(function(){return oe.a})),n.d(e,"yd",(function(){return mn.a})),n.d(e,"zd",(function(){return bn.a})),n.d(e,"Ad",(function(){return S.a})),n.d(e,"Bd",(function(){return gn.a})),n.d(e,"Cd",(function(){return yn.a})),n.d(e,"Dd",(function(){return On})),n.d(e,"Ed",(function(){return vn.a})),n.d(e,"Fd",(function(){return wn})),n.d(e,"Gd",(function(){return kn})),n.d(e,"Hd",(function(){return In})),n.d(e,"Id",(function(){return Ot.a})),n.d(e,"Jd",(function(){return Nn.a})),n.d(e,"Ld",(function(){return jn.a})),n.d(e,"Md",(function(){return Sn.a})),n.d(e,"Nd",(function(){return Tn.a})),n.d(e,"Od",(function(){return Cn.a})),n.d(e,"Pd",(function(){return $n})),n.d(e,"Qd",(function(){return En.a})),n.d(e,"Rd",(function(){return An.a})),n.d(e,"Sd",(function(){return Fn.a})),n.d(e,"Td",(function(){return Rn.a})),n.d(e,"y",(function(){return _n})),n.d(e,"Kd",(function(){return Dn.a})),n.d(e,"lc",(function(){return Mn.a})),n.d(e,"gc",(function(){return Ln})),n.d(e,"Vc",(function(){return Pn.a})),n.d(e,"nd",(function(){return Bn.a})),n.d(e,"sb",(function(){return Vn.a})),n.d(e,"cb",(function(){return Wn})),n.d(e,"fb",(function(){return Un})),n.d(e,"S",(function(){return Kn})),n.d(e,"yb",(function(){return Gn})),n.d(e,"qc",(function(){return I.b})),n.d(e,"a",(function(){return I.a})),n.d(e,"xb",(function(){return Pr})),n.d(e,"Gb",(function(){return Br})),n.d(e,"Sb",(function(){return Vr})),n.d(e,"od",(function(){return zr})),n.d(e,"qb",(function(){return r})),n.d(e,"bd",(function(){return Lr})),n.d(e,"md",(function(){return Wr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Qn})),n.d(r,"depthwiseConv2d",(function(){return nr})),n.d(r,"matMul",(function(){return rr}));var a=n("iuCH"),s=n("o3Rt"),i=n("RhVc"),o=n("kRdc"),u=n("SFB9"),c=n("34HJ"),l=n("RRa9"),d=n("6J+n"),h=n("20lx"),p=n("Ig+c"),f=n("3FnS"),m=n("fjZN"),b=n("YAKK"),g=n("0ahe"),y=n("l0gX"),x=n("ulO0"),O=n("o/e8"),v=n("ZJ6U"),w=n("SHv8"),k=n("parS"),I=n("VO80"),N=n("/7N0"),j=n("bTzI"),S=n("iIjY");const T=Object(I.b)({basicLSTMCell_:function(t,e,n,r,a,s){const i=Object(O.a)(t,"forgetBias","basicLSTMCell"),u=Object(O.a)(e,"lstmKernel","basicLSTMCell"),c=Object(O.a)(n,"lstmBias","basicLSTMCell"),l=Object(O.a)(r,"data","basicLSTMCell"),d=Object(O.a)(a,"c","basicLSTMCell"),h=Object(O.a)(s,"h","basicLSTMCell"),p=Object(v.a)([l,h],1),f=Object(w.a)(p,u),m=Object(o.a)(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(j.a)(m,[0,0],y),I=Object(j.a)(m,[0,g],y),T=Object(j.a)(m,[0,2*g],y),C=Object(j.a)(m,[0,3*g],y),$=Object(o.a)(Object(k.a)(Object(N.a)(x),Object(S.a)(I)),Object(k.a)(d,Object(N.a)(Object(o.a)(i,T))));return[$,Object(k.a)(Object(S.a)($),Object(N.a)(C))]}});var C=n("OygE"),$=n("cdtJ"),E=n("atXS");const A=Object(I.b)({batchNorm2d_:function(t,e,n,r,a,s){const i=Object(O.a)(t,"x","batchNorm"),o=Object(O.a)(e,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),E.b(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),E.b(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),E.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&E.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&E.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});const F=Object(I.b)({batchNorm3d_:function(t,e,n,r,a,s){const i=Object(O.a)(t,"x","batchNorm"),o=Object(O.a)(e,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),E.b(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),E.b(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),E.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&E.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&E.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});const R=Object(I.b)({batchNorm4d_:function(t,e,n,r,a,s){const i=Object(O.a)(t,"x","batchNorm"),o=Object(O.a)(e,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),E.b(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),E.b(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),E.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&E.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&E.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});var _=n("BMSg"),D=n("SNsm"),M=n("BD40"),z=n("3rNm"),L=n("WWBm"),P=n("wI/y"),B=n("8Km0"),V=n("B3db");const W=Object(I.b)({concat1d_:function(t){return Object(v.a)(t,0)}});const U=Object(I.b)({concat2d_:function(t,e){return Object(v.a)(t,e)}});const K=Object(I.b)({concat3d_:function(t,e){return Object(v.a)(t,e)}});const G=Object(I.b)({concat4d_:function(t,e){return Object(v.a)(t,e)}});var H=n("dnXz"),q=n("3X4V"),X=n("zR+/"),Y=n("FZCF"),J=n("mdDO");const Z=Object(I.b)({conv3dTranspose_:function(t,e,n,r,a){const s=Object(O.a)(t,"x","conv3dTranspose"),i=Object(O.a)(e,"filter","conv3dTranspose");return Object(J.a)(n,s,i,r,a)}});var Q=n("7/dO"),tt=n("waK1"),et=n("HmhO"),nt=n("LyxI"),rt=n("Nk7E"),at=n("g4+C"),st=n("auKK"),it=n("wFtI");const ot=Object(I.b)({diag_:function(t){const e={x:Object(O.a)(t,"x","diag")};return st.a.runKernel(it.R,e)}});var ut=n("wXC5"),ct=n("x3y4"),lt=n("ARu+"),dt=n("Kfzt"),ht=n("dauL"),pt=n("njhW"),ft=n("ubnP"),mt=n("jgXy"),bt=n("TyAZ"),gt=n("2ugP"),yt=n("G6IW"),xt=n("NclT"),Ot=n("jXH2");const vt=Object(I.b)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const a=Object(M.a)([t,e],r),s=t<=e?t:e;for(let o=0;o<s;++o)a.set(1,o,o);const i=Object(xt.a)(a.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Object(Ot.a)(Object(gt.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(Ot.a)(Object(gt.a)(Object(gt.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(Ot.a)(Object(gt.a)(Object(gt.a)(Object(gt.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var wt=n("RrjA"),kt=n("02mo"),It=n("UI8N"),Nt=n("kaMP"),jt=n("zvA9"),St=n("uy0A"),Tt=n("JLAb"),Ct=n("/AvP"),$t=n("WYAb"),Et=n("b++O"),At=n("bzdD"),Ft=n("4f3O"),Rt=n("shz4"),_t=n("WJRb"),Dt=n("4QEz"),Mt=n("E1lT"),zt=n("RrGL"),Lt=n("wxQM"),Pt=n("gErV"),Bt=n("r9q9"),Vt=n("4zPZ"),Wt=n("7wDt"),Ut=n("8YN0"),Kt=n("0l+w"),Gt=n("wCH+"),Ht=n("n+ZZ"),qt=n("U/2n"),Xt=n("i8k8"),Yt=n("CfTU"),Jt=n("Ei6o"),Zt=n("wion"),Qt=n("NNfn");function te(t,e,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===t)return[];let r=Object(O.a)(t,"x","meshgrid",t instanceof Qt.a?t.dtype:"float32");if(void 0===e)return[r];let a=Object(O.a)(e,"y","meshgrid",e instanceof Qt.a?e.dtype:"float32");const s=Object(E.O)(r.shape),i=Object(E.O)(a.shape);return"xy"===n?(r=Object(xt.a)(r,[1,-1]),a=Object(xt.a)(a,[-1,1]),[Object(w.a)(Object(Zt.a)([i,1],r.dtype),r),Object(w.a)(a,Object(Zt.a)([1,s],a.dtype))]):(r=Object(xt.a)(r,[-1,1]),a=Object(xt.a)(a,[1,-1]),[Object(w.a)(r,Object(Zt.a)([1,i],r.dtype)),Object(w.a)(Object(Zt.a)([s,1],a.dtype),a)])}var ee=n("rm0a"),ne=n("8OX7"),re=n("k9tH"),ae=n("RhH0"),se=n("NuWS"),ie=n("k7Jv"),oe=n("oAkI");const ue=Object(I.b)({moments_:function(t,e=null,n=!1){t=Object(O.a)(t,"x","moments");const r=Object(E.I)(e,t.shape),a=Object(Jt.a)(t,r,n);let s=a.shape;n||(s=Object(se.e)(a.shape,r));const i=Object(ie.a)(Object(oe.a)(Object(z.a)(t,"float32"),Object(xt.a)(a,s)));return{mean:a,variance:Object(Jt.a)(i,r,n)}}});const ce=Object(I.b)({multiRNNCell_:function(t,e,n,r){const a=Object(O.a)(e,"data","multiRNNCell"),s=Object(O.b)(n,"c","multiRNNCell"),i=Object(O.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let d=0;d<t.length;d++){const e=t[d](o,s[d],i[d]);u.push(e[0]),u.push(e[1]),o=e[1]}const c=[],l=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),l.push(u[d+1]);return[c,l]}});var le=n("Pvz5"),de=n("O7f5"),he=n("1N4k"),pe=n("4iwy"),fe=n("DbV5");const me=Object(I.b)({outerProduct_:function(t,e){const n=Object(O.a)(t,"v1","outerProduct"),r=Object(O.a)(e,"v2","outerProduct");E.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Object(xt.a)(n,[-1,1]),s=Object(xt.a)(r,[1,-1]);return Object(w.a)(a,s)}});var be=n("DrVt");const ge=Object(I.b)({pad1d_:function(t,e,n=0){return Object(E.b)(2===e.length,(()=>"Invalid number of paddings. Must be length of 2.")),Object(be.a)(t,[e],n)}});const ye=Object(I.b)({pad2d_:function(t,e,n=0){return Object(E.b)(2===e.length&&2===e[0].length&&2===e[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(be.a)(t,e,n)}});const xe=Object(I.b)({pad3d_:function(t,e,n=0){return Object(E.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(be.a)(t,e,n)}});const Oe=Object(I.b)({pad4d_:function(t,e,n=0){return Object(E.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(be.a)(t,e,n)}});var ve=n("6vQL"),we=n("yfHJ"),ke=n("Ug8H"),Ie=n("dWjR"),Ne=n("867m");const je=Object(I.b)({rand_:function(t,e,n){const r=Object(E.O)(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=e();return st.a.makeTensor(a,t,n)}});var Se=n("1OSX");const Te=Object(I.b)({randomGamma_:function(t,e,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Se.b(e,n,r,a),i=Object(M.a)(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});const Ce=Object(I.b)({randomNormal_:function(t,e=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Se.a(e,n,r,!1,a),i=Object(M.a)(t,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var $e=n("hinG"),Ee=n("hNYx"),Ae=n("17CO"),Fe=n("tQDl"),Re=n("kXpR"),_e=n("Rqg+"),De=n("0I63");const Me=Object(I.b)({reverse1d_:function(t){const e=Object(O.a)(t,"x","reverse");return E.b(1===e.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`)),Object(De.a)(e,0)}});const ze=Object(I.b)({reverse2d_:function(t,e){const n=Object(O.a)(t,"x","reverse");return E.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Object(De.a)(n,e)}});const Le=Object(I.b)({reverse3d_:function(t,e){const n=Object(O.a)(t,"x","reverse");return E.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Object(De.a)(n,e)}});const Pe=Object(I.b)({reverse4d_:function(t,e){const n=Object(O.a)(t,"x","reverse");return E.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Object(De.a)(n,e)}});var Be=n("CKnt"),Ve=n("Xyqe"),We=n("AV8V"),Ue=n("s57M"),Ke=n("EWu9"),Ge=n("90yW"),He=n("Hfat"),qe=n("aTLu"),Xe=n("XcSs");const Ye=Object(I.b)({slice1d_:function(t,e,n){const r=Object(O.a)(t,"x","slice1d");return E.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(j.a)(r,[e],[n])}});const Je=Object(I.b)({slice2d_:function(t,e,n){const r=Object(O.a)(t,"x","slice2d");return E.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(j.a)(r,e,n)}});const Ze=Object(I.b)({slice3d_:function(t,e,n){const r=Object(O.a)(t,"x","slice3d");return E.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(j.a)(r,e,n)}});const Qe=Object(I.b)({slice4d_:function(t,e,n){const r=Object(O.a)(t,"x","slice4d");return E.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(j.a)(r,e,n)}});var tn=n("X4fa"),en=n("n/2y"),nn=n("dYAU"),rn=n("Grcp"),an=n("THqV"),sn=n("adw1"),on=n("th0q"),un=n("RbuM"),cn=n("Fjpt"),ln=n("QYQ3"),dn=n("0fRV"),hn=n("1U0N"),pn=n("L7Hl"),fn=n("3hph"),mn=n("4FMF"),bn=n("0wrZ"),gn=n("NX3e"),yn=n("lg8H"),xn=n("WVnj");function On(t,e,n){if(Object(E.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(O.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(xn.a)(t,e,r,n)}var vn=n("BbuY");function wn(t,e,n){if(Object(E.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(O.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(xn.a)(t,e,r,n)}function kn(t,e,n){if(Object(E.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(O.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(xn.a)(t,e,r,n)}function In(t,e,n){if(Object(E.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(O.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(xn.a)(t,e,r,n)}var Nn=n("VhY8"),jn=n("fmoR"),Sn=n("hT5K"),Tn=n("U/Lz"),Cn=n("OkRW");function $n(t,e=!0,n,r){return st.a.makeVariable(t,e,n,r)}var En=n("Z5Ez"),An=n("p4Cv"),Fn=n("Wiw4"),Rn=n("oJu+");const _n=async function(t,e,n){const r=Object(O.a)(t,"tensor","boolMask"),a=Object(O.a)(e,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;E.b(i>0,(()=>"mask cannot be scalar")),E.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(xt.a)(r,c),d=Object(xt.a)(a,[-1]),h=await Object(An.a)(d),p=Object(dn.a)(h,[1]),f=Object(Nt.a)(l,p,s);return t!==r&&r.dispose(),e!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Dn=n("yRKQ"),Mn=n("91d6"),zn=n("dsKV");const Ln=Object(I.b)({movingAverage_:function(t,e,n,r,a=!0){const s=Object(O.a)(t,"v","movingAverage"),i=Object(O.a)(e,"x","movingAverage"),u=Object(O.a)(n,"decay","movingAverage");Object(zn.assertTypesMatch)(s,i),E.b(E.a(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=Object(We.a)(1),l=Object(oe.a)(c,u);let d=Object(k.a)(Object(oe.a)(i,s),l);if(a){E.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const t=Object(O.a)(r,"step","movingAverage");d=Object(ct.a)(d,Object(oe.a)(c,Object(we.a)(u,t)))}return Object(o.a)(s,d)}});var Pn=n("i/oj"),Bn=n("vGLV"),Vn=n("ukBL");const Wn=Object(I.b)({dropout_:function(t,e,n,r){const a=Object(O.a)(t,"x","dropout");if(E.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),E.b(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Qt.a?a.clone():a;const s=function(t,e){if(null==e)return t.shape.slice();if(E.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),i=1-e,u=Object(ct.a)(Object(kt.a)(Object(o.a)(Object($e.a)(s,0,1,"float32",r),i)),i);return Object(k.a)(a,u)}});function Un(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Kn(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let s=0;s<t;++s){const i=2*Math.PI*s/(t+r-1);a[s]=e-n*Math.cos(i)}return Object(yn.a)(a,"float32")}const Gn=async function(t,e,n=1){const r=Object(O.a)(t,"predictions","inTopK"),a=Object(O.a)(e,"targets","inTopK");Object(E.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(E.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(E.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(E.b)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(E.o)("bool",u);for(let d=0;d<u;d++){const t=d*c,e=i.subarray(t,t+c),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort(((t,e)=>e.value-t.value)),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===o[d]){l[d]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(gn.a)(l,a.shape,"bool")};var Hn=n("U45G"),qn=n("Um8L"),Xn=n("D2/b"),Yn=n("c9N1"),Jn=n("uBja"),Zn=n("R0ls");const Qn=Object(I.b)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(Zn.d)(st.a.state.gradientDepth,c)){let h=Object(q.a)(t,e,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Zn.a)(h,c,l,d)}const h=Object(O.a)(t,"x","conv2d"),p=Object(O.a)(e,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(xt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E.b(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),E.b(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&E.b(E.v(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),E.b(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),E.b(Jn.h(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),E.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const b=Jn.a(f.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(O.a)(u,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,h),qn.a(b.outShape,g.shape)),null!=l&&(y=Object(O.a)(l,"prelu weights","fused conv2d"));const x=(t,e)=>{const[a,i,o,u]=e,l=Object(Zn.c)(t,o,c);E.b(Jn.i(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[Object(Yn.a)(i.shape,l,a,n,r),Object(Xn.a)(i,l,a.shape,n,r)];if(null!=u){const t=Object(Zn.b)(u,l);d.push(t)}return d},v={x:f,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Hn.a)(((t,e,n)=>{let r=st.a.runKernel(it.kb,v,w);return n([e,t,r]),m&&(r=Object(xt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p)}return Object(Hn.a)(((t,e,n,r)=>{let a=st.a.runKernel(it.kb,v,w);return r([e,t,a,n]),m&&(a=Object(xt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,g)}});var tr=n("aSZd"),er=n("jLCh");const nr=Object(I.b)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(Zn.d)(st.a.state.gradientDepth,c)){let h=Object(at.a)(t,e,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Zn.a)(h,c,l,d)}const h=Object(O.a)(t,"x","depthwiseConv2d"),p=Object(O.a)(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(xt.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),E.b(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),E.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),E.b(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),E.b(Jn.h(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&E.b(E.v(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const b=Jn.a(f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(O.a)(u,"bias","fused conv2d"),[g]=Object(zn.makeTypesMatch)(g,h),qn.a(b.outShape,g.shape)),null!=l&&(y=Object(O.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(t,e)=>{E.b(Jn.i(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,u,l]=e,d=Object(Zn.c)(t,u,c),h=Object(er.a)(o.shape,d,a,n,r,s,i),p=Object(tr.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(Zn.b)(g,d)]}return[h,p]},v={x:f,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Hn.a)(((t,e,n)=>{let r=st.a.runKernel(it.lb,v,w);return n([e,t,r]),m&&(r=Object(xt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p)}return Object(Hn.a)(((t,e,n,r)=>{let a=st.a.runKernel(it.lb,v,w);return r([e,t,a,n]),m&&(a=Object(xt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,g)}});const rr=Object(I.b)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(Zn.d)(st.a.state.gradientDepth,s)){let c=Object(w.a)(t,e,n,r);return null!=a&&(c=Object(o.a)(c,a)),Object(Zn.a)(c,s,i,u)}let c=Object(O.a)(t,"a","fused matMul"),l=Object(O.a)(e,"b","fused matMul");[c,l]=Object(zn.makeTypesMatch)(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=E.O(m),y=E.O(b);E.b(c.rank>=2&&l.rank>=2&&c.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`)),E.b(E.a(m,b),(()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and ${l.shape} must match.`)),E.b(d===h,(()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=c.shape.slice(0,-2).concat([p,f]),v=n?Object(xt.a)(c,[g,d,p]):Object(xt.a)(c,[g,p,d]),k=r?Object(xt.a)(l,[y,f,h]):Object(xt.a)(l,[y,h,f]);let I,N;null!=a&&(I=Object(O.a)(a,"bias","fused matMul"),[I]=Object(zn.makeTypesMatch)(I,c),qn.a(x,I.shape)),null!=i&&(N=Object(O.a)(i,"prelu weights","fused matMul"));const j=(t,e)=>{const[i,o,u,c]=e,l=Object(Zn.c)(Object(xt.a)(t,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(w.a)(l,o,!1,!1),h=Object(w.a)(l,i,!0,!1)):n&&!r?(d=Object(w.a)(o,l,!1,!0),h=Object(w.a)(i,l,!1,!1)):(d=Object(w.a)(o,l,!0,!0),h=Object(w.a)(l,i,!0,!0)):(d=Object(w.a)(l,o,!1,!0),h=Object(w.a)(i,l,!0,!1)),null!=a){return[d,h,Object(Zn.b)(c,l)]}return[d,h]},S={a:v,b:k,bias:I,preluActivationWeights:N},T={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};if(null==a){return Object(Hn.a)(((t,e,n)=>{const r=st.a.runKernel(it.dd,S,T);return n([t,e,r]),{value:Object(xt.a)(r,x),gradFunc:j}}))(v,k)}return Object(Hn.a)(((t,e,n,r)=>{const a=st.a.runKernel(it.dd,S,T);return r([t,e,a,n]),{value:Object(xt.a)(a,x),gradFunc:j}}))(v,k,I)}});const ar=Object(I.b)({hammingWindow_:function(t){return Kn(t,.54,.46)}});const sr=Object(I.b)({hannWindow_:function(t){return Kn(t,.5,.5)}});const ir=Object(I.b)({frame_:function(t,e,n,r=!1,a=0){let s=0;const i=[];for(;s+e<=t.size;)i.push(Object(j.a)(t,s,e)),s+=n;if(r)for(;s<t.size;){const r=s+e-t.size,o=Object(v.a)([Object(j.a)(t,s,e-r),Object(wt.a)([r],a)]);i.push(o),s+=n}return 0===i.length?On([],[0,e]):Object(xt.a)(Object(v.a)(i),[i.length,e])}});const or=Object(I.b)({stft_:function(t,e,n,r,a=sr){null==r&&(r=Un(e));const s=ir(t,e,n),i=Object(k.a)(s,a(e));return Object(on.a)(i,r)}});const ur=Object(I.b)({cropAndResize_:function(t,e,n,r,a="bilinear",s=0){const i=Object(O.a)(t,"image","cropAndResize"),o=Object(O.a)(e,"boxes","cropAndResize","float32"),u=Object(O.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];E.b(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),E.b(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),E.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),E.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),E.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),E.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return st.a.runKernel(it.K,l,d)}});const cr=Object(I.b)({flipLeftRight_:function(t){const e=Object(O.a)(t,"image","flipLeftRight","float32");E.b(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return st.a.runKernel(it.fb,n,{})}});const lr=Object(I.b)({rotateWithOffset_:function(t,e,n=0,r=.5){const a=Object(O.a)(t,"image","rotateWithOffset","float32");E.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:e,fillValue:n,center:r};return st.a.runKernel(it.vc,s,i)}});function dr(t,e,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=t.shape[0];return n=Math.min(n,i),E.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),E.b(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),E.b(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),E.b(1===e.rank,(()=>"scores must be a 1D tensor")),E.b(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),E.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const hr=Object(I.b)({nonMaxSuppression_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O.a)(t,"boxes","nonMaxSuppression"),i=Object(O.a)(e,"scores","nonMaxSuppression"),o=dr(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return st.a.runKernel(it.Xb,{boxes:s,scores:i},u)}});var pr=n("g4m1");const fr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(O.a)(e,"scores","nonMaxSuppressionAsync"),o=dr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(pr.a)(c,l,n,r,a);return s!==t&&s.dispose(),i!==e&&i.dispose(),Object(yn.a)(d,"int32")};const mr=Object(I.b)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(O.a)(t,"boxes","nonMaxSuppression"),o=Object(O.a)(e,"scores","nonMaxSuppression"),u=dr(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=st.a.runKernel(it.Zb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const br=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(O.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(O.a)(e,"scores","nonMaxSuppressionAsync"),u=dr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(pr.c)(l,d,n,r,a,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(yn.a)(h,"int32"),selectedScores:Object(yn.a)(p)}};const gr=Object(I.b)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(O.a)(t,"boxes","nonMaxSuppression"),o=Object(O.a)(e,"scores","nonMaxSuppression"),u=dr(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=st.a.runKernel(it.Yb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const yr=async function(t,e,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(O.a)(t,"boxes","nonMaxSuppressionAsync"),o=Object(O.a)(e,"scores","nonMaxSuppressionAsync"),u=dr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(pr.b)(h,p,c,l,d,s);return i!==t&&i.dispose(),o!==e&&o.dispose(),{selectedIndices:Object(yn.a)(f,"int32"),validOutputs:Object(We.a)(m,"int32")}};var xr=n("c/ib"),Or=n("D4ac");const vr=Object(I.b)({transform_:function(t,e,n="nearest",r="constant",a=0,s){const i=Object(O.a)(t,"image","transform","float32"),o=Object(O.a)(e,"transforms","transform","float32");E.b(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),E.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),E.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return st.a.runKernel(it.Xc,u,c)}});const wr=Object(I.b)({bandPart_:function(t,e,n){Object(E.b)(e%1===0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),Object(E.b)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(O.a)(t,"a","bandPart");Object(E.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(e<=s))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=s),n<0&&(n=i);const o=Object(xt.a)(Object(Ee.a)(0,s,1,"int32"),[-1,1]),u=Object(Ee.a)(0,i,1,"int32"),c=Object(oe.a)(o,u),l=Object(Vt.a)(Object(Rt.a)(c,Object(We.a)(+e,"int32")),Object(St.a)(c,Object(We.a)(-n,"int32"))),d=Object(Fn.a)([s,i],r.dtype);return Object(xt.a)(Object(hn.a)(Object(Cn.a)(Object(xt.a)(r,[-1,s,i])).map((t=>Object(En.a)(l,t,d)))),a)}});const kr=Object(I.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(E.b)(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(E.b)(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Object(un.a)(t,t.shape[0],0).map((t=>Object(dn.a)(t,[0])));Object(E.b)(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let a=0;a<t.length;++a)n.push(st.a.tidy((()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(k.a)(Object(mn.a)(Object(k.a)(n[e],t)),n[e]);t=Object(oe.a)(t,r)}return Object(ct.a)(t,Object(Mn.a)(t,"euclidean"))})));return e?Object(hn.a)(n,0):n}});var Ir=n("wE5H");function Nr(t,e=!1){return st.a.tidy((()=>{Object(E.b)(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let a=vt(n),s=Object(B.a)(t);const i=On([[1]],[1,1]);let o=Object(B.a)(i);const u=n>=r?r:n;for(let t=0;t<u;++t){const e=s,u=o,c=a;[o,s,a]=st.a.tidy((()=>{const e=Object(j.a)(s,[t,t],[n-t,1]),u=Object(Mn.a)(e),c=Object(j.a)(s,[t,t],[1,1]),l=Object(En.a)(Object(jt.a)(c,0),On([[-1]]),On([[1]])),d=Object(oe.a)(c,Object(k.a)(l,u)),h=Object(ct.a)(e,d);o=1===h.shape[0]?Object(B.a)(i):Object(v.a)([i,Object(j.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(de.a)(Object(ct.a)(Object(w.a)(l,d),u)),f=Object(j.a)(s,[t,0],[n-t,r]),m=Object(k.a)(p,o),b=Object(Dn.a)(o);if(0===t)s=Object(oe.a)(f,Object(w.a)(m,Object(w.a)(b,f)));else{const e=Object(oe.a)(f,Object(w.a)(m,Object(w.a)(b,f)));s=Object(v.a)([Object(j.a)(s,[0,0],[t,r]),e],0)}const g=Object(Dn.a)(m),y=Object(j.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(oe.a)(y,Object(w.a)(Object(w.a)(y,o),g));else{const e=Object(oe.a)(y,Object(w.a)(Object(w.a)(y,o),g));a=Object(v.a)([Object(j.a)(a,[0,0],[n,t]),e],1)}return[o,s,a]})),Object(Ir.d)([e,u,c])}return!e&&n>r&&(a=Object(j.a)(a,[0,0],[n,r]),s=Object(j.a)(s,[0,0],[r,r])),[a,s]}))}const jr=Object(I.b)({qr_:function(t,e=!1){if(Object(E.b)(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Nr(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=Object(Cn.a)(Object(xt.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],s=[];r.forEach((t=>{const[n,r]=Nr(t,e);a.push(n),s.push(r)}));return[Object(xt.a)(Object(hn.a)(a,0),t.shape),Object(xt.a)(Object(hn.a)(s,0),t.shape)]}}});var Sr=n("V+B2");const Tr=Object(I.b)({computeWeightedLoss_:function(t,e,n=Sr.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(O.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(O.a)(e,"weights","computeWeightedLoss"));const s=null==a?r:Object(k.a)(r,a);if(n===Sr.a.NONE)return s;if(n===Sr.a.SUM)return Object(mn.a)(s);if(n===Sr.a.MEAN){if(null==a)return Object(Jt.a)(s);{const t=r.size/a.size,e=Object(ct.a)(Object(mn.a)(s),Object(mn.a)(a));return t>1?Object(ct.a)(e,Object(We.a)(t)):e}}if(n===Sr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ct.a)(Object(mn.a)(s),Object(We.a)(r.size));{const t=Object(k.a)(a,Object(Zt.a)(r.shape)),e=Object(z.a)(Object(mn.a)(Object(he.a)(t,Object(We.a)(0))),"float32");return Object(ct.a)(Object(mn.a)(s),e)}}throw Error(`Unknown reduction: ${n}`)}});const Cr=Object(I.b)({absoluteDifference_:function(t,e,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(t,"labels","absoluteDifference"),i=Object(O.a)(e,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(O.a)(n,"weights","absoluteDifference")),Object(E.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(oe.a)(s,i));return Tr(u,o,r)}});const $r=Object(I.b)({cosineDistance_:function(t,e,n,r,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(t,"labels","cosineDistance"),i=Object(O.a)(e,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(O.a)(r,"weights","cosineDistance")),Object(E.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(We.a)(1),c=Object(oe.a)(u,Object(mn.a)(Object(k.a)(s,i),n,!0));return Tr(c,o,a)}});const Er=Object(I.b)({hingeLoss_:function(t,e,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(O.a)(t,"labels","hingeLoss");const s=Object(O.a)(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(O.a)(n,"weights","hingeLoss")),Object(E.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(We.a)(1);a=Object(oe.a)(Object(k.a)(Object(We.a)(2),a),o);const u=Object(Re.a)(Object(oe.a)(o,Object(k.a)(a,s)));return Tr(u,i,r)}});const Ar=Object(I.b)({huberLoss_:function(t,e,n,r=1,s=Sr.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(O.a)(t,"labels","huberLoss"),u=Object(O.a)(e,"predictions","huberLoss");let c=null;null!=n&&(c=Object(O.a)(n,"weights","huberLoss")),Object(E.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(We.a)(r),d=Object(a.a)(Object(oe.a)(u,i)),h=Object(ne.a)(d,l),p=Object(oe.a)(d,h),f=Object(o.a)(Object(k.a)(Object(We.a)(.5),Object(ie.a)(h)),Object(k.a)(l,p));return Tr(f,c,s)}});const Fr=Object(I.b)({logLoss_:function(t,e,n,r=1e-7,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(t,"labels","logLoss"),i=Object(O.a)(e,"predictions","logLoss");let u=null;null!=n&&(u=Object(O.a)(n,"weights","logLoss")),Object(E.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(We.a)(1),l=Object(We.a)(r),d=Object(de.a)(Object(k.a)(s,Object(Mt.a)(Object(o.a)(i,l)))),h=Object(k.a)(Object(oe.a)(c,s),Object(Mt.a)(Object(o.a)(Object(oe.a)(c,i),l))),p=Object(oe.a)(d,h);return Tr(p,u,a)}});const Rr=Object(I.b)({meanSquaredError_:function(t,e,n,r=Sr.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(O.a)(t,"labels","meanSquaredError"),s=Object(O.a)(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(O.a)(n,"weights","meanSquaredError")),Object(E.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(ln.a)(a,s);return Tr(o,i,r)}});const _r=Object(I.b)({sigmoidCrossEntropy_:function(t,e,n,r=0,s=Sr.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(O.a)(t,"multiClassLabels","sigmoidCrossEntropy");const u=Object(O.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(O.a)(n,"weights","sigmoidCrossEntropy")),Object(E.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(We.a)(r),e=Object(We.a)(1),n=Object(We.a)(.5);i=Object(o.a)(Object(k.a)(i,Object(oe.a)(e,t)),Object(k.a)(n,t))}const l=function(t,e){const n=Object(O.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(O.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(E.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(Re.a)(r),i=Object(k.a)(r,n),u=Object(zt.a)(Object(bt.a)(Object(de.a)(Object(a.a)(r))));return Object(o.a)(Object(oe.a)(s,i),u)}(i,u);return Tr(l,c,s)}});const Dr=Object(I.b)({softmaxCrossEntropy_:function(t,e,n,r=0,a=Sr.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(O.a)(t,"onehotLabels","softmaxCrossEntropy");const i=Object(O.a)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(O.a)(n,"weights","softmaxCrossEntropy")),Object(E.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(We.a)(r),e=Object(We.a)(1),n=Object(We.a)(s.shape[1]);s=Object(o.a)(Object(k.a)(s,Object(oe.a)(e,t)),Object(ct.a)(t,n))}const c=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Object(Hn.a)(((t,e,r)=>{const a=Object(Bt.a)(e,[n],!0),s=Object(oe.a)(Object(z.a)(e,"float32"),a);r([t,s]);const i=Object(de.a)(Object(k.a)(s,t));return{value:Object(mn.a)(i,[n]),gradFunc:(t,e)=>{const[r,a]=e,s=Object(se.e)(t.shape,[n]);return[Object(k.a)(Object(xt.a)(t,s),Object(oe.a)(Object(z.a)(r,"float32"),Object(bt.a)(a))),Object(k.a)(Object(xt.a)(t,s),Object(oe.a)(Object(bt.a)(a),Object(z.a)(r,"float32")))]}}}))(t,e)}(s,i);return Tr(c,u,a)}});const Mr=Object(I.b)({sparseReshape_:function(t,e,n){const r=Object(O.a)(t,"inputIndices","sparseReshape"),a=Object(O.a)(e,"inputShape","sparseReshape"),s=Object(O.a)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=st.a.runKernel(it.Jc,i);return{outputIndices:o[0],outputShape:o[1]}}}),zr={fft:rn.a,ifft:an.a,rfft:on.a,irfft:sn.a},Lr={hammingWindow:ar,hannWindow:sr,frame:ir,stft:or},Pr={flipLeftRight:cr,resizeNearestNeighbor:Or.a,resizeBilinear:xr.a,rotateWithOffset:lr,cropAndResize:ur,nonMaxSuppression:hr,nonMaxSuppressionAsync:fr,nonMaxSuppressionWithScore:mr,nonMaxSuppressionWithScoreAsync:br,nonMaxSuppressionPadded:gr,nonMaxSuppressionPaddedAsync:yr,transform:vr},Br={bandPart:wr,gramSchmidt:kr,qr:jr},Vr={absoluteDifference:Cr,computeWeightedLoss:Tr,cosineDistance:$r,hingeLoss:Er,huberLoss:Ar,logLoss:Fr,meanSquaredError:Rr,sigmoidCrossEntropy:_r,softmaxCrossEntropy:Dr},Wr={sparseReshape:Mr}},FZCF:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({conv3d_:function(t,e,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(t,"x","conv3d"),p=Object(s.a)(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.b(5===p.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${p.rank}.`)),i.b(f.shape[4]===p.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`)),i.b(Object(o.h)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.b("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},Fjpt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sqrt_:function(t){const e={x:Object(s.a)(t,"x","sqrt")};return r.a.runKernel(a.Mc,e)}})},G6IW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({expm1_:function(t){const e={x:Object(s.a)(t,"x","expm1")};return r.a.runKernel(a.cb,e)}})},Grcp:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({fft_:function(t){Object(s.b)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.a.runKernel(a.db,e)}})},H7XF:function(t,e,n){"use strict";e.byteLength=function(t){var e=c(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=c(t),i=r[0],o=r[1],u=new s(function(t,e,n){return 3*(e+n)/4-n}(0,i,o)),l=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],u[l++]=e>>16&255,u[l++]=e>>8&255,u[l++]=255&e;2===o&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,u[l++]=255&e);1===o&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,u[l++]=e>>8&255,u[l++]=255&e);return u},e.fromByteArray=function(t){for(var e,n=t.length,a=n%3,s=[],i=16383,o=0,u=n-a;o<u;o+=i)s.push(l(t,o,o+i>u?u:o+i));1===a?(e=t[n-1],s.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],s.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var a,s,i=[],o=e;o<n;o+=3)a=(t[o]<<16&16711680)+(t[o+1]<<8&65280)+(255&t[o+2]),i.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},HDXh:function(t,e,n){"use strict";(function(t){var r=n("H7XF"),a=n("kVK+"),s=n("49sm");function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(t,e){if(i()<e)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!u.TYPED_ARRAY_SUPPORT&&!(this instanceof u))return new u(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=h(t,e);return t}(t,e,n,r):"string"===typeof e?function(t,e,n){"string"===typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),a=(t=o(t,r)).write(e,n);a!==r&&(t=t.slice(0,a));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|p(e.length);return 0===(t=o(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||(r=e.length)!==r?o(t,0):h(t,e);if("Buffer"===e.type&&s(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=o(t,e<0?0:0|p(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=o(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|t}function f(t,e){if(u.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return V(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return $(this,e,n);case"utf8":case"utf-8":return j(this,e,n);case"ascii":return T(this,e,n);case"latin1":case"binary":return C(this,e,n);case"base64":return N(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,a){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,a);if("number"===typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,a){var s,i=1,o=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(t,s)===c(e,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,h=0;h<u;h++)if(c(t,s+h)!==c(e,h)){d=!1;break}if(d)return s}return-1}function x(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=e.length;if(s%2!==0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(e.substr(2*i,2),16);if(isNaN(o))return i;t[n+i]=o}return i}function O(t,e,n,r){return W(B(e,t.length-n),t,n,r)}function v(t,e,n,r){return W(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function w(t,e,n,r){return v(t,e,n,r)}function k(t,e,n,r){return W(V(e),t,n,r)}function I(t,e,n,r){return W(function(t,e){for(var n,r,a,s=[],i=0;i<t.length&&!((e-=2)<0);++i)r=(n=t.charCodeAt(i))>>8,a=n%256,s.push(a),s.push(r);return s}(e,t.length-n),t,n,r)}function N(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function j(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var s,i,o,u,c=t[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128===(192&(s=t[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=t[a+1],i=t[a+2],128===(192&s)&&128===(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=t[a+1],i=t[a+2],o=t[a+3],128===(192&s)&&128===(192&i)&&128===(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(t){var e=t.length;if(e<=S)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=S));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}(),e.kMaxLength=i(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?o(t,e):void 0!==n?"string"===typeof r?o(t,e).fill(n,r):o(t,e).fill(n):o(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return d(null,t)},u.allocUnsafeSlow=function(t){return d(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,s=Math.min(n,r);a<s;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!s(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var i=t[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?j(this,0,t):m.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},u.prototype.compare=function(t,e,n,r,a){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(this===t)return 0;for(var s=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),o=Math.min(s,i),c=this.slice(r,a),l=t.slice(e,n),d=0;d<o;++d)if(c[d]!==l[d]){s=c[d],i=l[d];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return x(this,t,e,n);case"utf8":case"utf-8":return O(this,t,e,n);case"ascii":return v(this,t,e,n);case"latin1":case"binary":return w(this,t,e,n);case"base64":return k(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,e,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var S=4096;function T(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function C(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function $(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=e;s<n;++s)a+=P(t[s]);return a}function E(t,e,n){for(var r=t.slice(e,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function A(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function F(t,e,n,r,a,s){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<s)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function R(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,s=Math.min(t.length-n,2);a<s;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function _(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,s=Math.min(t.length-n,4);a<s;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function D(t,e,n,r,a,s){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(t,e,n,r,s){return s||D(t,0,n,4),a.write(t,e,n,r,23,4),n+4}function z(t,e,n,r,s){return s||D(t,0,n,8),a.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var a=e-t;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},u.prototype.readUInt8=function(t,e){return e||A(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||A(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||A(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||A(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||A(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,s=0;++s<e&&(a*=256);)r+=this[t+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=e,a=1,s=this[t+--r];r>0&&(a*=256);)s+=this[t+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*e)),s},u.prototype.readInt8=function(t,e){return e||A(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||A(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||A(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||A(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||A(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||F(this,t,e,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[e]=255&t;++s<n&&(a*=256);)this[e+s]=t/a&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||F(this,t,e,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[e+a]=255&t;--a>=0&&(s*=256);)this[e+a]=t/s&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):_(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):_(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);F(this,t,e,n,a-1,-a)}var s=0,i=1,o=0;for(this[e]=255&t;++s<n&&(i*=256);)t<0&&0===o&&0!==this[e+s-1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);F(this,t,e,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[e+s]=255&t;--s>=0&&(i*=256);)t<0&&0===o&&0!==this[e+s+1]&&(o=1),this[e+s]=(t/i>>0)-o&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):_(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||F(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):_(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return M(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return M(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return z(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return z(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,s=r-n;if(this===t&&n<e&&e<r)for(a=s-1;a>=0;--a)t[a+e]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+s),e);return s},u.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var s;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(s=e;s<n;++s)this[s]=t;else{var i=u.isBuffer(t)?t:B(new u(t,r).toString()),o=i.length;for(s=0;s<n-e;++s)this[s+e]=i[s%o]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function P(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,a=null,s=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;s.push(n)}else if(n<2048){if((e-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function V(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(L,"")).length<2)return"";for(;t.length%4!==0;)t+="=";return t}(t))}function W(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}}).call(this,n("ntbh"))},Hfat:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sign_:function(t){const e={x:Object(s.a)(t,"x","sign")};return r.a.runKernel(a.Cc,e)}})},HmhO:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cumsum_:function(t,e=0,n=!1,i=!1){const o={x:Object(s.a)(t,"x","cumsum")},u={axis:e,exclusive:n,reverse:i};return r.a.runKernel(a.L,o,u)}})},I79q:function(t,e,n){"use strict";var r,a,s,i,o;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(s||(s={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},"Ig+c":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({asin_:function(t){const e={x:Object(s.a)(t,"x","asin")};return r.a.runKernel(a.j,e)}})},Ijbi:function(t,e,n){var r=n("WkPL");t.exports=function(t){if(Array.isArray(t))return r(t)}},JLAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({imag_:function(t){const e={input:Object(s.a)(t,"input","imag")};return r.a.runKernel(a.sb,e)}})},Kajj:function(t,e,n){"use strict";(function(t){n("auKK");var e=n("ftYm"),r=n("szMd");const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>e.isBrowser())),a.registerFlag("IS_NODE",(()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n("8oxB"))},KdhW:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},Kfzt:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("o/e8"),a=n("atXS"),s=n("SHv8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),i=Object(r.a)(e,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`)),1===n.rank&&1===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[-1,1]),r=Object(s.a)(t,e);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const t=Object(o.a)(n,[1,-1]),e=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(t,e);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const t=Object(o.a)(i,[-1,1]),e=Object(s.a)(n,t);return Object(o.a)(e,[e.size])}{const t=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,t)}}})},L7Hl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({step_:function(t,e=0){const n={x:Object(s.a)(t,"x","step")},i={alpha:e};return r.a.runKernel(a.Pc,n,i)}})},LY0y:function(t,e){(function(e){t.exports=function(){var t={880:function(t){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}}},n={};function r(e){if(n[e])return n[e].exports;var a=n[e]={exports:{}},s=!0;try{t[e](a,a.exports,r),s=!1}finally{s&&delete n[e]}return a.exports}return r.ab=e+"/",r(880)}()}).call(this,"/")},LyxI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({denseBincount_:function(t,e,n,o=!1){const u=Object(s.a)(t,"x","denseBincount"),c=Object(s.a)(e,"weights","denseBincount");i.b("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.b(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(c.size===u.size||0===c.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`));const l={x:u,weights:c},d={size:n,binaryOutput:o};return r.a.runKernel(a.M,l,d)}})},Mbu7:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},NNfn:function(t,e,n){"use strict";n.d(e,"b",(function(){return d})),n.d(e,"g",(function(){return m})),n.d(e,"f",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"a",(function(){return y})),n.d(e,"d",(function(){return x})),n.d(e,"c",(function(){return O}));var r=n("9JAK"),a=n("atXS");function s(t,e,n,r){const s=Object(a.j)(e),o=function(t,e,n,r){const s=Object(a.O)(e),o=r[r.length-1],u=new Array(o).fill(0),l=e.length,d="complex64"===n?c(t):t;if(l>1)for(let a=0;a<s/o;a++){const t=a*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(d[t+e],0,n).length)}return u}(t,e,n,s),l=e.length,d=u(t,e,n,s,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${l}`),h.push(`  shape: [${e}]`),h.push("  values:")),h.push(d.map((t=>"    "+t)).join("\n")),h.join("\n")}function i(t,e,n){let r;return r=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:Object(a.z)(t)?`'${t}'`:"bool"===n?o(t):parseFloat(t.toFixed(7)).toString(),Object(a.L)(r,e)}function o(t){return 0===t?"false":"true"}function u(t,e,n,r,a,s=!0){const l="complex64"===n?2:1,d=e[0],h=e.length;if(0===h){if("complex64"===n){return[i(c(t)[0],0,n)]}return"bool"===n?[o(t[0])]:[t[0].toString()]}if(1===h){if(d>20){const e=3*l;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),s=c(s)),["["+r.map(((t,e)=>i(t,a[e],n))).join(", ")+", ..., "+s.map(((t,e)=>i(t,a[d-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?c(t):Array.from(t)).map(((t,e)=>i(t,a[e],n))).join(", ")+"]"]}const p=e.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let e=0;e<3;e++){const r=e*m,s=r+m;b.push(...u(t.slice(r,s),p,n,f,a,!1))}b.push("...");for(let e=d-3;e<d;e++){const r=e*m,s=r+m;b.push(...u(t.slice(r,s),p,n,f,a,e===d-1))}}else for(let i=0;i<d;i++){const e=i*m,r=e+m;b.push(...u(t.slice(e,r),p,n,f,a,i===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let i=1;i<b.length-1;i++)b[i]=" "+b[i]+g;let y=",\n";for(let i=2;i<h;i++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":y),b}function c(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var l=n("6366");class d{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=a.O(t),null!=n){const t=n.length;a.b(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(e,this.size),this.strides=Object(a.j)(t)}set(t,...e){0===e.length&&(e=[0]),a.b(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const r of t){if(r<0||r>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let r=0;r<t.length-1;++r)n+=this.strides[r]*t[r];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(t){h=t}function b(t){p=t}function g(t){f=t}class y{constructor(t,e,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=a.O(t),this.strides=Object(a.j)(t),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return p.buffer(this.shape,this.dtype,t)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(a.T)(this.shape,t,"complex64"===this.dtype)}arraySync(){return Object(a.T)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=h().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map((t=>l.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=h().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>l.decodeString(t)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await h().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return p.print(this,t)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(t=!1){return s(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),p.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),h().makeVariable(this,t,e,n)}}function x(){return Object(r.a)("Tensor",(()=>y))}Object.defineProperty(y,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed}),x();class O extends y{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=t.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(O,Symbol.hasInstance,{value:t=>t instanceof y&&null!=t.assign&&t.assign instanceof Function})},"NQ+5":function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n("B3db"),a=n("NX3e"),s=n("atXS"),i=n("mEeB");async function o(t,e){const n=[],r=[],a=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(t)?t[s].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,r=new Uint8Array(n);let a=0;for(let s=0;s<e.length;s++){const t=e[s],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)}));r.push(t)}else r.push(o.data());null!=e&&(u.group=e),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(t,e){const n={};let o,u=0;for(const c of e){const e=c.name,l=c.dtype,d=c.shape,h=Object(s.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=t.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let t=0;t<s.length;t++){const e=s[t];p[t]=Math.round(e*n.scale+n.min)}}u+=h*r}else if("string"===l){const e=Object(s.O)(c.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(u,u+4))[0];u+=4;const n=new Uint8Array(t.slice(u,u+e));p.push(n),u+=e}}else{const s=i.a[l],o=t.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${e}': ${l}`);{p=new Float32Array(o);const t=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],s[e]=p[2*e+1];const i=Object(a.a)(t,d,"float32"),u=Object(a.a)(s,d,"float32");n[e]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[e]=Object(a.a)(p,d,l))}return n}function c(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const r=new Uint8Array(e);let a=0;return n.forEach((t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength})),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function h(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){const a=r[i],o=t[n[a>>10]+(1023&a)]+e[a>>10];s[i]=o}return new Float32Array(a)}}}).call(this,n("HDXh").Buffer)},NX3e:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("o/e8"),a=n("WVnj");function s(t,e,n){const s=Object(r.c)(t,n);return Object(a.a)(t,e,s,n)}},NclT:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reshape_:function(t,e){const n={x:Object(s.a)(t,"x","reshape","string_or_numeric")},i={shape:e};return r.a.runKernel(a.pc,n,i)}})},Nk7E:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({depthToSpace_:function(t,e,n="NHWC"){const o=Object(s.a)(t,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${o.shape}`)),i.b(c*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${o.shape}`)),i.b(l%(e*e)===0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${o.shape}`));const d={x:o},h={blockSize:e,dataFormat:n};return r.a.runKernel(a.N,d,h)}})},NuWS:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"f",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n("atXS");function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function s(t,e,n){const r=t.length+e.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(t[s++]):a.push(e[i++]);return a}function i(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map((e=>t[e]))]}function o(t,e){return s(t,e.map((t=>1)),e)}function u(t,e,n){r.b(a(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function c(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function l(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},"O/w9":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},O7f5:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({neg_:function(t){const e={x:Object(s.a)(t,"x","neg")};return r.a.runKernel(a.Wb,e)}})},OkRW:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unstack_:function(t,e=0){const n=Object(s.a)(t,"x","unstack","string_or_numeric");i.b(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:e};return r.a.runKernel(a.ad,o,u)}})},OygE:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({batchToSpaceND_:function(t,e,n){const o=Object(s.a)(t,"x","batchToSpaceND"),u=e.reduce(((t,e)=>t*e));i.b(o.rank>=1+e.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${e.length}`)),i.b(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),i.b(o.shape[0]%u===0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`));const c={x:o},l={blockShape:e,crops:n};return r.a.runKernel(a.t,c,l)}})},PVBm:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},Pvz5:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({multinomial_:function(t,e,n,i=!1){const u=Object(s.a)(t,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d={logits:1===l?Object(o.a)(u,[1,-1]):u},h={numSamples:e,seed:n,normalized:i},p=r.a.runKernel(a.Ub,d,h);return 1===l?Object(o.a)(p,[p.size]):p}})},QYQ3:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({squaredDifference_:function(t,e){let n=Object(i.a)(t,"a","squaredDifference"),u=Object(i.a)(e,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Oc,c,{})}})},QeBL:function(t,e,n){"use strict";n.r(e);var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Nd})),n.d(r,"addImpl",(function(){return bd})),n.d(r,"bincountImpl",(function(){return uh})),n.d(r,"bincountReduceImpl",(function(){return ch})),n.d(r,"ceilImpl",(function(){return hh})),n.d(r,"concatImpl",(function(){return yh})),n.d(r,"expImpl",(function(){return dp})),n.d(r,"expm1Impl",(function(){return bp})),n.d(r,"floorImpl",(function(){return Fp})),n.d(r,"gatherV2Impl",(function(){return Vp})),n.d(r,"greaterImpl",(function(){return Up})),n.d(r,"lessImpl",(function(){return rf})),n.d(r,"linSpaceImpl",(function(){return lf})),n.d(r,"logImpl",(function(){return hf})),n.d(r,"maxImpl",(function(){return Sf})),n.d(r,"maximumImpl",(function(){return $f})),n.d(r,"minimumImpl",(function(){return Pf})),n.d(r,"multiplyImpl",(function(){return Gh})),n.d(r,"negImpl",(function(){return Yf})),n.d(r,"notEqualImpl",(function(){return am})),n.d(r,"prodImpl",(function(){return gm})),n.d(r,"rangeImpl",(function(){return xm})),n.d(r,"rsqrtImpl",(function(){return Em})),n.d(r,"sliceImpl",(function(){return ah})),n.d(r,"sparseReshapeImpl",(function(){return Jm})),n.d(r,"squaredDifferenceImpl",(function(){return ab})),n.d(r,"stridedSliceImpl",(function(){return cb})),n.d(r,"subImpl",(function(){return wp})),n.d(r,"tileImpl",(function(){return mb})),n.d(r,"topKImpl",(function(){return gb})),n.d(r,"transposeImpl",(function(){return Ad})),n.d(r,"uniqueImpl",(function(){return Ib}));var a=n("nKUr"),s=n("q1tI"),i=n("g4pe"),o=n.n(i),u=n("vGFT"),c=n.n(u),l=n("o0o1"),d=n.n(l);function h(t,e,n,r,a,s,i){try{var o=t[s](i),u=o.value}catch(c){return void n(c)}o.done?e(u):Promise.resolve(u).then(r,a)}function p(t){return function(){var e=this,n=arguments;return new Promise((function(r,a){var s=t.apply(e,n);function i(t){h(s,r,a,i,o,"next",t)}function o(t){h(s,r,a,i,o,"throw",t)}i(void 0)}))}}var f=n("+hG3"),m=n("wFtI"),b=n("3rNm"),g=n("parS"),y=n("L7Hl");const x={kernelName:m.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(y.a)(Object(b.a)(n,"float32"),-1))}}};var O=n("x3y4"),v=n("O7f5"),w=n("AV8V"),k=n("Fjpt"),I=n("k7Jv"),N=n("oAkI");const j={kernelName:m.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(I.a)(Object(b.a)(n,"float32")),r=Object(k.a)(Object(N.a)(Object(w.a)(1),e));return Object(v.a)(Object(O.a)(t,r))}}}},S={kernelName:m.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(k.a)(Object(N.a)(Object(I.a)(Object(b.a)(n,"float32")),1));return Object(O.a)(t,e)}}}};var T=n("Um8L"),C=n("NclT"),$=n("4FMF");const E={kernelName:m.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=T.a(n.shape,r.shape);return{a:()=>{let e=t;const r=T.c(n.shape,a);return r.length>0&&(e=Object($.a)(e,r)),Object(C.a)(e,n.shape)},b:()=>{let e=t;const n=T.c(r.shape,a);return n.length>0&&(e=Object($.a)(e,n)),Object(C.a)(e,r.shape)}}}},A={kernelName:m.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}};var F=n("oJu+");const R={kernelName:m.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(F.a)(n)}}},_={kernelName:m.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(F.a)(n)}}},D={kernelName:m.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(k.a)(Object(N.a)(Object(w.a)(1),Object(I.a)(Object(b.a)(n,"float32")))))}}};var M=n("kRdc");const z={kernelName:m.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(k.a)(Object(M.a)(Object(w.a)(1),Object(I.a)(Object(b.a)(n,"float32"))));return Object(O.a)(t,e)}}}},L={kernelName:m.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(T.a)(n.shape,r.shape);return{a:()=>{const e=Object(M.a)(Object(I.a)(n),Object(I.a)(r));let s=Object(g.a)(t,Object(O.a)(r,e));const i=Object(T.c)(n.shape,a);return i.length>0&&(s=Object($.a)(s,i)),Object(C.a)(s,n.shape)},b:()=>{const e=Object(M.a)(Object(I.a)(n),Object(I.a)(r));let s=Object(v.a)(Object(g.a)(t,Object(O.a)(n,e)));const i=Object(T.c)(r.shape,a);return i.length>0&&(s=Object($.a)(s,i)),Object(C.a)(s,r.shape)}}}},P={kernelName:m.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(M.a)(Object(I.a)(Object(b.a)(n,"float32")),1))}}},B={kernelName:m.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(N.a)(Object(w.a)(1),Object(I.a)(Object(b.a)(n,"float32"))))}}};var V=n("auKK"),W=n("o/e8"),U=n("atXS"),K=n("VO80");const G=Object(K.b)({avgPool3dGrad_:function(t,e,n,r,a,s){const i=Object(W.a)(t,"dy","avgPool3dGrad"),o=Object(W.a)(e,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=Object(C.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Object(C.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),U.b(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),U.b(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),null!=s&&U.b(U.v(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const d={dy:u,input:c},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=V.a.runKernel(m.q,d,h);return l?Object(C.a)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),H={kernelName:m.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>G(t,r,a,s,i,o)}}};const q=Object(K.b)({avgPoolGrad_:function(t,e,n,r,a){const s=Object(W.a)(t,"dy","avgPoolGrad"),i=Object(W.a)(e,"input","avgPoolGrad");U.b(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(C.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(C.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),U.b(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),U.b(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=V.a.runKernel(m.r,l,d);return c?Object(C.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),X={kernelName:m.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:s,pad:i}=n;return{x:()=>q(t,r,a,s,i)}}};var Y=n("SHv8");const J={kernelName:m.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(Y.a)(t,a,!1,!1),b:()=>Object(Y.a)(t,r,!0,!1)}:s&&!i?{a:()=>Object(Y.a)(a,t,!1,!0),b:()=>Object(Y.a)(r,t,!1,!1)}:{a:()=>Object(Y.a)(a,t,!0,!0),b:()=>Object(Y.a)(t,r,!0,!0)}:{a:()=>Object(Y.a)(t,a,!1,!0),b:()=>Object(Y.a)(r,t,!0,!1)}}};var Z=n("dYAU");const Q={kernelName:m.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(Z.a)(t,r,a)}}},tt={kernelName:m.v,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(1!==a[u])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Object($.a)(t,o,!0)}}},et={kernelName:m.w,gradFunc:t=>({x:()=>t.clone()})},nt={kernelName:m.x,gradFunc:t=>({x:()=>Object(F.a)(t)})};var rt=n("uy0A"),at=n("shz4"),st=n("4zPZ"),it=n("Z5Ez");const ot={kernelName:m.y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(it.a)(Object(st.a)(Object(rt.a)(r,a),Object(at.a)(r,s)),t,Object(F.a)(t))}}},ut={kernelName:m.A,inputsToSave:["x"],gradFunc:x.gradFunc};var ct=n("RbuM");const lt={kernelName:m.B,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:a}=n,s=Object(U.I)(a,e[0].shape)[0],i=r.map((t=>t[s]));return Object(ct.a)(t,i,s).map((t=>()=>t))}};var dt=n("D2/b"),ht=n("c9N1"),pt=n("uBja");const ft={kernelName:m.C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return U.b(pt.i(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Object(ht.a)(r.shape,t,a,i,o,u),filter:()=>Object(dt.a)(r,t,a.shape,i,o,u)}}};var mt=n("3X4V");const bt={kernelName:m.E,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(mt.a)(t,a,s,i,o,1,u),filter:()=>Object(dt.a)(t,r,a.shape,s,i,o,u)}}};const gt=Object(K.b)({conv3DBackpropFilter_:function(t,e,n,r,a){let s=t;4===t.rank&&(s=Object(C.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=Object(C.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),U.b(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),U.b(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),U.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),U.b(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),U.b(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return V.a.runKernel(m.G,o,u)}});var yt=n("mdDO");const xt={kernelName:m.F,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s}=n;U.b(Object(pt.i)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=e;return{x:()=>Object(yt.a)(i.shape,t,o,a,s),filter:()=>gt(i,t,o.shape,a,s)}}};var Ot=n("aTLu");const vt={kernelName:m.I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(Object(v.a)(Object(Ot.a)(Object(b.a)(n,"float32"))),t)}}};var wt=n("XcSs");const kt={kernelName:m.J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(Object(wt.a)(Object(b.a)(n,"float32")),t)}}};var It=n("NuWS"),Nt=n("HmhO"),jt=n("yRKQ");const St={kernelName:m.L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const e=Object(It.f)([a],r.rank);let n=Object(Nt.a)(t,a,s,!i);return null!=e&&(n=Object(jt.a)(n,e)),n}}}};var Tt=n("aSZd"),Ct=n("jLCh");const $t={kernelName:m.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;U.b(pt.i(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,c]=e;return U.b(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),U.b(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),U.b(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),U.b(pt.h(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&U.b(U.v(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Object(Ct.a)(u.shape,t,c,a,s,r,i),filter:()=>Object(Tt.a)(u,t,c.shape,a,s,r,i)}}},Et={kernelName:m.S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,s={x:r,filter:a,dy:t},i={x:r,filter:a,dy:t};return{x:()=>V.a.runKernel(m.U,s,n),filter:()=>V.a.runKernel(m.T,i,n)}}},At={kernelName:m.W,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>V.a.runKernel(m.X,r)}}};var Ft=n("TyAZ");const Rt={kernelName:m.Z,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(g.a)(Object(Ft.a)(Object(v.a)(Object(I.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(g.a)(t,r)}}},_t={kernelName:m.ab,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,n)}}},Dt={kernelName:m.bb,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(C.a)(t,n.shape)}}},Mt={kernelName:m.cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(Ft.a)(n))}}},zt={kernelName:m.gb,gradFunc:t=>({x:()=>Object(F.a)(t)})},Lt={kernelName:m.hb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(T.a)(n.shape,r.shape);return{a:()=>{const e=Object(O.a)(t,Object(b.a)(r,"float32")),s=Object(T.c)(n.shape,a);return s.length>0?Object(C.a)(Object($.a)(e,s),n.shape):e},b:()=>{let e=Object(g.a)(t,Object(b.a)(n,"float32"));const s=Object(T.c)(r.shape,a);s.length>0&&(e=Object(C.a)(Object($.a)(e,s),r.shape));const i=Object(I.a)(r);return Object(v.a)(Object(O.a)(e,Object(b.a)(i,"float32")))}}}};var Pt=n("Xyqe"),Bt=n("jXH2");const Vt={kernelName:m.jb,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=e,u=null==o?Object(w.a)(1):o,c=Object(T.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(N.a)(a,s),h=Object(g.a)(t,u),p=Object(Pt.a)(Object(M.a)(i,Object(w.a)(r))),f=Object(g.a)(Object(g.a)(Object(g.a)(p,p),p),Object(w.a)(-.5));return{x:()=>1===s.rank?Object(C.a)(Object(g.a)(Object(g.a)(t,Object(Bt.a)(Object(C.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(C.a)(Object(g.a)(Object(g.a)(t,p),u),a.shape),mean:()=>{let t=Object(g.a)(Object(g.a)(p,Object(w.a)(-1)),h);return 1===s.rank&&(t=Object($.a)(t,c)),Object(C.a)(t,s.shape)},variance:()=>{let t=Object(g.a)(Object(g.a)(f,d),h);return 1===s.rank&&(t=Object($.a)(t,c)),Object(C.a)(t,s.shape)},scale:()=>{const e=Object(g.a)(d,p);let n=Object(g.a)(t,e);return 1===s.rank&&(n=Object($.a)(n,c)),Object(C.a)(n,s.shape)},offset:()=>{let e=t;return 1===s.rank&&(e=Object($.a)(e,c)),Object(C.a)(e,s.shape)}}}};var Wt=n("U/Lz");const Ut={kernelName:m.nb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:s}=n,i=Object(U.I)(s,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,o=e.slice(0,i),u=o.length,c=e.slice(s,e.length).slice(1),l=c.length,d=Kt(0,u),h=Kt(u+1,u+1+l),p=Gt([o,[n],c]),f=Object(C.a)(t,p),m=Object(C.a)(a,[n]),b=Gt([[u],d,h]),g=Object(jt.a)(f,b);let y=Object(Wt.a)(g,m,r.shape[i]);const x=Object(It.h)(b);return y=Object(jt.a)(y,x),y},indices:()=>a}}};function Kt(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Gt(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Ht={kernelName:m.pb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(F.a)(n),b:()=>Object(F.a)(r)}}},qt={kernelName:m.rb,gradFunc:t=>({x:()=>Object(b.a)(t,"float32")})},Xt={kernelName:m.tb,gradFunc:t=>({x:()=>Object(F.a)(t)})},Yt={kernelName:m.ub,gradFunc:t=>({x:()=>Object(F.a)(t)})},Jt={kernelName:m.vb,gradFunc:t=>({x:()=>Object(F.a)(t)})};var Zt=n("zvA9");const Qt={kernelName:m.yb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:a}=n,s=Object(Zt.a)(r,0);return{x:()=>Object(it.a)(s,t,Object(g.a)(t,a))}}},te={kernelName:m.Db,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(M.a)(n,1))}}},ee={kernelName:m.Cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(b.a)(n,"float32"))}}},ne={kernelName:m.Eb,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(Ft.a)(r);return Object(N.a)(t,Object(g.a)(Object($.a)(t,a,!0),e))}}}};const re=Object(K.b)({localResponseNormalizationBackprop_:function(t,e,n,r=5,a=1,s=1,i=.5){const o={x:t,y:e,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return V.a.runKernel(m.xb,o,u)}}),ae={kernelName:m.wb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>re(r,a,t,s,i,o,u)}}};var se=n("ubnP");function ie(t,e,n,r){return e.rank<n.rank&&(e=Object(C.a)(e,It.e(e.shape,r))),t.rank<n.rank&&(t=Object(C.a)(t,It.e(t.shape,r))),{x:()=>Object(g.a)(t,Object(b.a)(Object(se.a)(n,e),t.dtype))}}const oe={kernelName:m.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,s=e[0],i=ie(t,e[1],s,U.I(a,s.shape));return{x:()=>i.x()}}};var ue=n("4f3O");const ce={kernelName:m.Ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(g.a)(t,Object(b.a)(Object(rt.a)(n,r),"float32")),b:()=>Object(g.a)(t,Object(b.a)(Object(ue.a)(n,r),"float32"))}}};const le=Object(K.b)({maxPool3dGrad_:function(t,e,n,r,a,s,i){const o=Object(W.a)(t,"dy","maxPool3dGrad"),u=Object(W.a)(e,"input","maxPool3dGrad"),c=Object(W.a)(n,"output","maxPool3dGrad");let l=o,d=u,h=c,p=!1;4===u.rank&&(p=!0,l=Object(C.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(C.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Object(C.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),U.b(5===l.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),U.b(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),U.b(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=i&&U.b(U.v(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:l,input:d,output:h},b={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=V.a.runKernel(m.Lb,f,b);return p?Object(C.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),de={kernelName:m.Kb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>le(t,r,a,s,i,o,u)}}};const he=Object(K.b)({maxPoolGrad_:function(t,e,n,r,a,s,i){const o=Object(W.a)(t,"dy","maxPoolGrad"),u=Object(W.a)(e,"input","maxPoolGrad"),c=Object(W.a)(n,"output","maxPoolGrad");U.b(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),U.b(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),U.b(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&U.b(U.v(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const l={dy:o,input:u,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return V.a.runKernel(m.Mb,l,d)}}),pe={kernelName:m.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:s,strides:i,pad:o}=n;return{x:()=>he(t,r,a,s,i,o)}}};var fe=n("wion");const me={kernelName:m.Pb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n,s=U.I(a,r.shape),i=Object(It.d)(r.shape,s)[1],o=U.O(i);return{x:()=>{const e=r.shape.slice();s.forEach((t=>{e[t]=1}));const n=Object(C.a)(t,e);return Object(O.a)(Object(g.a)(n,Object(fe.a)(r.shape,"float32")),o)}}}},be={kernelName:m.Qb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[s,i]=e,o=ie(t,i,s,U.I(a,s.shape));return{x:()=>o.x()}}},ge={kernelName:m.Rb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(g.a)(t,Object(b.a)(Object(at.a)(n,r),"float32")),b:()=>Object(g.a)(t,Object(b.a)(Object(Zt.a)(n,r),"float32"))}}};var ye=n("bTzI");const xe={kernelName:m.Sb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map((t=>t[0]));return{x:()=>Object(ye.a)(t,s,r.shape)}}};var Oe=n("02mo");const ve={kernelName:m.Tb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(T.a)(n.shape,r.shape);return{a:()=>{const e=Object(T.c)(n.shape,a);return e.length>0?Object(C.a)(Object($.a)(t,e),n.shape):t},b:()=>{const e=Object(g.a)(t,Object(v.a)(Object(Oe.a)(Object(O.a)(n,r)))),s=Object(T.c)(r.shape,a);return s.length>0?Object(C.a)(Object($.a)(e,s),r.shape):e}}}},we={kernelName:m.Vb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(T.a)(n.shape,r.shape);return{a:()=>{const e=Object(g.a)(t,Object(b.a)(r,"float32")),s=Object(T.c)(n.shape,a);return s.length>0?Object(C.a)(Object($.a)(e,s),n.shape):e},b:()=>{const e=Object(g.a)(t,Object(b.a)(n,"float32")),s=Object(T.c)(r.shape,a);return s.length>0?Object(C.a)(Object($.a)(e,s),r.shape):e}}}},ke={kernelName:m.Wb,gradFunc:t=>({x:()=>Object(v.a)(t)})};var Ie=n("Wiw4");const Ne={kernelName:m.bc,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(Ie.a)(n.shape,"float32")}}},je={kernelName:m.cc,gradFunc:t=>({x:()=>Object(F.a)(t)})};var Se=n("OkRW");const Te={kernelName:m.dc,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Object(Se.a)(t,r).map((t=>()=>t))}},Ce={kernelName:m.ec,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,s=a.map((t=>t[0]));return{x:()=>Object(ye.a)(t,s,r.shape)}}};var $e=n("E1lT"),Ee=n("yfHJ");const Ae={kernelName:m.gc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,s=n,i=r,o=T.a(s.shape,i.shape);return{a:()=>{const e=Object(b.a)(i,"float32");let n=Object(g.a)(t,Object(g.a)(e,Object(Ee.a)(s,Object(N.a)(e,Object(w.a)(1)))));const r=T.c(s.shape,o);return r.length>0&&(n=Object($.a)(n,r)),Object(C.a)(n,s.shape)},b:()=>{const e=Object(Zt.a)(s,0),n=Object(it.a)(e,Object($e.a)(s),Object(F.a)(s));let r=Object(g.a)(t,Object(g.a)(a,n));const u=T.c(i.shape,o);return u.length>0&&(r=Object($.a)(r,u)),Object(C.a)(r,i.shape)}}}},Fe={kernelName:m.hc,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Zt.a)(n,0);return{x:()=>Object(it.a)(a,t,Object(g.a)(t,r)),alpha:()=>{let e=Object(it.a)(a,Object(F.a)(t),Object(g.a)(t,n));const s=Object(T.c)(r.shape,t.shape);return s.length>0&&(e=Object($.a)(e,s)),Object(C.a)(e,r.shape)}}}},Re={kernelName:m.lc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=T.a(n.shape,r.shape);return{a:()=>{const e=Object(O.a)(t,Object(b.a)(r,"float32")),s=T.c(n.shape,a);return s.length>0?Object(C.a)(Object($.a)(e,s),n.shape):e},b:()=>{let e=Object(g.a)(t,Object(b.a)(n,"float32"));const s=T.c(r.shape,a);s.length>0&&(e=Object(C.a)(Object($.a)(e,s),r.shape));const i=Object(I.a)(r);return Object(v.a)(Object(O.a)(e,Object(b.a)(i,"float32")))}}}},_e={kernelName:m.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(v.a)(Object(I.a)(n)))}}},De={kernelName:m.oc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(g.a)(Object(at.a)(n,6),Object(y.a)(n));return{x:()=>Object(g.a)(t,Object(b.a)(r,"float32"))}}},Me={kernelName:m.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(b.a)(Object(y.a)(n),"float32"))}}},ze={kernelName:m.pc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(C.a)(t,n.shape)}}},Le={kernelName:m.qc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>V.a.runKernel(m.rc,a,n)}}},Pe={kernelName:m.sc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>V.a.runKernel(m.tc,a,n)}}};var Be=n("0I63");const Ve={kernelName:m.uc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(U.I)(r,t.shape);return{x:()=>Object(Be.a)(t,a)}}},We={kernelName:m.wc,gradFunc:t=>({x:()=>Object(F.a)(t)})},Ue={kernelName:m.xc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(v.a)(Object(O.a)(t,Object(g.a)(Object(Ee.a)(n,1.5),2)))}}};var Ke=n("7wDt");const Ge={kernelName:m.zc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(b.a)(Object(F.a)(n),"float32"),t:()=>Object(g.a)(t,Object(b.a)(n,t.dtype)),e:()=>Object(g.a)(t,Object(b.a)(Object(Ke.a)(n),t.dtype))}}};var He=n("fN6/");const qe={kernelName:m.Ac,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Zt.a)(n,Object(w.a)(0)),r=Object(w.a)(He.b),a=Object(w.a)(He.a),s=Object(g.a)(t,a),i=Object(g.a)(Object(g.a)(t,r),Object(Ft.a)(Object(b.a)(n,"float32")));return Object(it.a)(e,s,i)}}}},Xe={kernelName:m.Bc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(g.a)(n,Object(N.a)(Object(w.a)(1),n)))}}},Ye={kernelName:m.Cc,gradFunc:t=>({x:()=>Object(F.a)(t)})};var Je=n("7/dO");const Ze={kernelName:m.Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(Object(Je.a)(Object(b.a)(n,"float32")),t)}}};var Qe=n("waK1");const tn={kernelName:m.Ec,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(Object(Qe.a)(Object(b.a)(n,"float32")),t)}}};var en=n("DrVt"),nn=n("Xr0w");const rn={kernelName:m.Fc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(nn.parseSliceParams)(r,a,s),c=[];for(let l=0;l<t.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>Object(en.a)(t,c)}}},an={kernelName:m.Gc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,s=Object(g.a)(t,r);return{logits:()=>Object(N.a)(s,Object(g.a)(Object($.a)(s,[a],true),r))}}};var sn=n("/7N0");const on={kernelName:m.Hc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(sn.a)(n))}}};var un=n("OygE");const cn={kernelName:m.Ic,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(un.a)(t,r,a)}}};var ln=n("ZJ6U");const dn={kernelName:m.Lc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(ln.a)(t,r)}}},hn={kernelName:m.Mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(g.a)(Object(k.a)(Object(b.a)(n,"float32")),2))}}},pn={kernelName:m.Nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(t,Object(g.a)(Object(b.a)(n,"float32"),2))}}},fn={kernelName:m.Oc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(w.a)(2);return{a:()=>Object(g.a)(t,Object(g.a)(a,Object(N.a)(n,r))),b:()=>Object(g.a)(t,Object(g.a)(a,Object(N.a)(r,n)))}}},mn={kernelName:m.Pc,gradFunc:t=>({x:()=>Object(F.a)(t)})},bn={kernelName:m.Rc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=T.a(n.shape,r.shape);return{a:()=>{let e=t;const r=T.c(n.shape,a);return r.length>0&&(e=Object($.a)(e,r)),Object(C.a)(e,n.shape)},b:()=>{let e=t;const n=T.c(r.shape,a);return n.length>0&&(e=Object($.a)(e,n)),Object(C.a)(Object(v.a)(e),r.shape)}}}},gn={kernelName:m.Sc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:s}=n;Object(U.I)(s,r.shape).forEach((t=>{a[t]=1}));const i=Object(C.a)(t,a),o=Object(g.a)(i,Object(fe.a)(r.shape,"float32"));return{x:()=>o}}},yn={kernelName:m.Tc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(O.a)(t,Object(I.a)(Object(Je.a)(n)))}}},xn={kernelName:m.Uc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(g.a)(Object(N.a)(Object(w.a)(1),Object(I.a)(n)),t)}}},On={kernelName:m.Vc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(F.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object(M.a)(e,Object(ye.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)e=Object(M.a)(e,Object(ye.a)(t,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)e=Object(M.a)(e,Object(ye.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)e=Object(M.a)(e,Object(ye.a)(t,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},vn={kernelName:m.Yc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,s=It.h(a);return{x:()=>Object(jt.a)(t,s)}}};var wn=n("1U0N");const kn={kernelName:m.ad,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(wn.a)(t,a)}}};var In=n("2ugP"),Nn=n("kaMP"),jn=n("CfTU");const Sn={kernelName:m.bd,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(jn.a)(e,Object(F.a)(e)),r=Object(Nn.a)(t,n);let a=Object(rt.a)(e,Object(w.a)(0,"int32"));const s=r.rank-a.rank;for(let o=0;o<s;++o)a=Object(In.a)(a,o+1);a=Object(st.a)(a,Object(fe.a)(r.shape,"bool"));const i=Object(F.a)(r);return Object(it.a)(a,r,i)}(t,n)}}};const Tn={kernelName:m.cd,gradFunc:t=>({x:()=>Object(F.a)(t)})};var Cn=n("c7gn");const $n=[x,j,S,E,A,R,_,D,z,L,P,B,H,X,J,Q,tt,et,nt,ot,ut,lt,bt,ft,xt,vt,kt,St,$t,Et,Re,At,Rt,_t,Dt,Mt,Lt,zt,Vt,Ut,Ht,qt,Xt,Yt,Jt,Qt,te,ee,ne,ae,oe,oe,ce,de,pe,me,be,ge,xe,ve,we,ke,Ne,je,Te,Ce,Ce,Ae,Fe,_e,De,Me,ze,Le,Pe,Ve,We,Ue,Ge,qe,Xe,Ye,Ze,tn,rn,an,on,cn,cn,dn,dn,hn,fn,pn,mn,bn,gn,yn,xn,On,vn,kn,Sn,Tn];for(const fj of $n)Object(Cn.e)(fj);var En=n("iuCH"),An=n("NNfn");Object(An.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(En.a)(this)};var Fn=n("o3Rt");Object(An.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(Fn.a)(this)};var Rn=n("RhVc");Object(An.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(Rn.a)(this)},Object(An.d)().prototype.add=function(t){return this.throwIfDisposed(),Object(M.a)(this,t)};var _n=n("34HJ");Object(An.d)().prototype.all=function(t,e){return this.throwIfDisposed(),Object(_n.a)(this,t,e)};var Dn=n("RRa9");Object(An.d)().prototype.any=function(t,e){return this.throwIfDisposed(),Object(Dn.a)(this,t,e)};var Mn=n("6J+n");Object(An.d)().prototype.argMax=function(t){return this.throwIfDisposed(),Object(Mn.a)(this,t)};var zn=n("20lx");Object(An.d)().prototype.argMin=function(t){return this.throwIfDisposed(),Object(zn.a)(this,t)},Object(An.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(U.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(C.a)(this,[])},Object(An.d)().prototype.asType=function(t){return this.throwIfDisposed(),Object(b.a)(this,t)},Object(An.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(C.a)(this,[this.size])},Object(An.d)().prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(C.a)(this,[t,e])},Object(An.d)().prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(C.a)(this,[t,e,n])},Object(An.d)().prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(C.a)(this,[t,e,n,r])},Object(An.d)().prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(C.a)(this,[t,e,n,r,a])};var Ln=n("Ig+c");Object(An.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Ln.a)(this)};var Pn=n("3FnS");Object(An.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Pn.a)(this)};var Bn=n("fjZN");Object(An.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Bn.a)(this)};var Vn=n("YAKK");Object(An.d)().prototype.atan2=function(t){return this.throwIfDisposed(),Object(Vn.a)(this,t)};var Wn=n("0ahe");Object(An.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Wn.a)(this)};var Un=n("l0gX");Object(An.d)().prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Un.a)(this,t,e,n,r)},Object(An.d)().prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(un.a)(this,t,e)};var Kn=n("cdtJ");Object(An.d)().prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Kn.a)(this,t,e,n,r,a)};var Gn=n("SNsm");Object(An.d)().prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(Gn.a)(this,t)},Object(An.d)().prototype.cast=function(t){return this.throwIfDisposed(),Object(b.a)(this,t)};var Hn=n("WWBm");Object(An.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Hn.a)(this)};var qn=n("wI/y");Object(An.d)().prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(qn.a)(this,t,e)},Object(An.d)().prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof An.a&&(t=[t]),Object(ln.a)([this,...t],e)};var Xn=n("dnXz");Object(An.d)().prototype.conv1d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Xn.a)(this,t,e,n,r,a,s)};var Yn=n("zR+/");Object(An.d)().prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Yn.a)(this,t,e,n,r,a)},Object(An.d)().prototype.conv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(mt.a)(this,t,e,n,r,a,s)},Object(An.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(Je.a)(this)},Object(An.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(Qe.a)(this)},Object(An.d)().prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(Nt.a)(this,t,e,n)};var Jn=n("Nk7E");Object(An.d)().prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(Jn.a)(this,t,e)};var Zn=n("g4+C");Object(An.d)().prototype.depthwiseConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Zn.a)(this,t,e,n,r,a,s)};var Qn=n("wXC5");Object(An.d)().prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Qn.a)(this,t,e,n,r,a)};var tr=n("ARu+");Object(An.d)().prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(tr.a)(this,t)},Object(An.d)().prototype.div=function(t){return this.throwIfDisposed(),Object(O.a)(this,t)};var er=n("Kfzt");Object(An.d)().prototype.dot=function(t){return this.throwIfDisposed(),Object(er.a)(this,t)};var nr=n("njhW");Object(An.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(nr.a)(this)},Object(An.d)().prototype.equal=function(t){return this.throwIfDisposed(),Object(se.a)(this,t)};var rr=n("jgXy");Object(An.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(rr.a)(this)},Object(An.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(Ft.a)(this)},Object(An.d)().prototype.expandDims=function(t){return this.throwIfDisposed(),Object(In.a)(this,t)};var ar=n("G6IW");Object(An.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(ar.a)(this)};var sr=n("Grcp");Object(An.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(sr.a)(this)},Object(An.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(C.a)(this,[this.size])},Object(An.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(Oe.a)(this)};var ir=n("UI8N");Object(An.d)().prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(ir.a)(this,t)},Object(An.d)().prototype.gather=function(t,e){return this.throwIfDisposed(),Object(Nn.a)(this,t,e)},Object(An.d)().prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(rt.a)(this,t)},Object(An.d)().prototype.greater=function(t){return this.throwIfDisposed(),Object(Zt.a)(this,t)};var or=n("THqV");Object(An.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(or.a)(this)};var ur=n("adw1");Object(An.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(ur.a)(this)};var cr=n("/AvP");Object(An.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(cr.a)(this)};var lr=n("WYAb");Object(An.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(lr.a)(this)};var dr=n("b++O");Object(An.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(dr.a)(this)};var hr=n("bzdD");Object(An.d)().prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(hr.a)(this,t)},Object(An.d)().prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(at.a)(this,t)},Object(An.d)().prototype.less=function(t){return this.throwIfDisposed(),Object(ue.a)(this,t)};var pr=n("4QEz");Object(An.d)().prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(pr.a)(this,t,e,n,r)};var fr=n("wxQM");Object(An.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n("gErV");Object(An.d)().prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(mr.a)(this,t)};var br=n("r9q9");Object(An.d)().prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(br.a)(this,t,e)},Object(An.d)().prototype.log=function(){return this.throwIfDisposed(),Object($e.a)(this)};var gr=n("RrGL");Object(An.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(gr.a)(this)},Object(An.d)().prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(st.a)(this,t)},Object(An.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Ke.a)(this)};var yr=n("8YN0");Object(An.d)().prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(yr.a)(this,t)};var xr=n("0l+w");Object(An.d)().prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(xr.a)(this,t)},Object(An.d)().prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(Y.a)(this,t,e,n)};var Or=n("n+ZZ");Object(An.d)().prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Or.a)(this,t,e,n,r)};var vr=n("wCH+");Object(An.d)().prototype.max=function(t,e){return this.throwIfDisposed(),Object(vr.a)(this,t,e)},Object(An.d)().prototype.maximum=function(t){return this.throwIfDisposed(),Object(jn.a)(this,t)};var wr=n("Ei6o");Object(An.d)().prototype.mean=function(t,e){return this.throwIfDisposed(),Object(wr.a)(this,t,e)};var kr=n("rm0a");Object(An.d)().prototype.min=function(t,e){return this.throwIfDisposed(),Object(kr.a)(this,t,e)};var Ir=n("8OX7");Object(An.d)().prototype.minimum=function(t){return this.throwIfDisposed(),Object(Ir.a)(this,t)};var Nr=n("k9tH");Object(An.d)().prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(Nr.a)(this,t,e)};var jr=n("RhH0");Object(An.d)().prototype.mod=function(t){return this.throwIfDisposed(),Object(jr.a)(this,t)},Object(An.d)().prototype.mul=function(t){return this.throwIfDisposed(),Object(g.a)(this,t)},Object(An.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(v.a)(this)};var Sr=n("91d6");Object(An.d)().prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(Sr.a)(this,t,e,n)};var Tr=n("1N4k");Object(An.d)().prototype.notEqual=function(t){return this.throwIfDisposed(),Object(Tr.a)(this,t)};var Cr=n("4iwy");Object(An.d)().prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),Object(Cr.a)(this,t,e,n)};var $r=n("DbV5");Object(An.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object($r.a)(this)},Object(An.d)().prototype.pad=function(t,e){return this.throwIfDisposed(),Object(en.a)(this,t,e)};var Er=n("6vQL");Object(An.d)().prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(Er.a)(this,t,e,n,r,a)},Object(An.d)().prototype.pow=function(t){return this.throwIfDisposed(),Object(Ee.a)(this,t)};var Ar=n("Ug8H");Object(An.d)().prototype.prelu=function(t){return this.throwIfDisposed(),Object(Ar.a)(this,t)};var Fr=n("867m");Object(An.d)().prototype.prod=function(t,e){return this.throwIfDisposed(),Object(Fr.a)(this,t,e)};var Rr=n("tQDl");Object(An.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Rr.a)(this)};var _r=n("kXpR");Object(An.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(_r.a)(this)};var Dr=n("Rqg+");Object(An.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Dr.a)(this)},Object(An.d)().prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(C.a)(this,t.shape)},Object(An.d)().prototype.reshape=function(t){return this.throwIfDisposed(),Object(C.a)(this,t)};var Mr=n("c/ib");Object(An.d)().prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(Mr.a)(this,t,e,n)};var zr=n("D4ac");Object(An.d)().prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(zr.a)(this,t,e,n)},Object(An.d)().prototype.reverse=function(t){return this.throwIfDisposed(),Object(Be.a)(this,t)};var Lr=n("th0q");Object(An.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Lr.a)(this)};var Pr=n("CKnt");Object(An.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Pr.a)(this)},Object(An.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Pt.a)(this)};var Br=n("s57M");Object(An.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Br.a)(this)};var Vr=n("EWu9");Object(An.d)().prototype.separableConv2d=function(t,e,n,r,a,s){return this.throwIfDisposed(),Object(Vr.a)(this,t,e,n,r,a,s)},Object(An.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(sn.a)(this)};var Wr=n("Hfat");Object(An.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Wr.a)(this)},Object(An.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(Ot.a)(this)},Object(An.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(wt.a)(this)},Object(An.d)().prototype.slice=function(t,e){return this.throwIfDisposed(),Object(ye.a)(this,t,e)};var Ur=n("X4fa");Object(An.d)().prototype.softmax=function(t){return this.throwIfDisposed(),Object(Ur.a)(this,t)};var Kr=n("n/2y");Object(An.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Kr.a)(this)},Object(An.d)().prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(Z.a)(this,t,e)},Object(An.d)().prototype.split=function(t,e){return this.throwIfDisposed(),Object(ct.a)(this,t,e)},Object(An.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(k.a)(this)},Object(An.d)().prototype.square=function(){return this.throwIfDisposed(),Object(I.a)(this)};var Gr=n("QYQ3");Object(An.d)().prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(Gr.a)(this,t)};var Hr=n("0fRV");Object(An.d)().prototype.squeeze=function(t){return this.throwIfDisposed(),Object(Hr.a)(this,t)},Object(An.d)().prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof An.a?[this,t]:[this,...t];return Object(wn.a)(n,e)},Object(An.d)().prototype.step=function(t){return this.throwIfDisposed(),Object(y.a)(this,t)};var qr=n("3hph");Object(An.d)().prototype.stridedSlice=function(t,e,n,r,a,s,i,o){return this.throwIfDisposed(),Object(qr.a)(this,t,e,n,r,a,s,i,o)},Object(An.d)().prototype.sub=function(t){return this.throwIfDisposed(),Object(N.a)(this,t)},Object(An.d)().prototype.sum=function(t,e){return this.throwIfDisposed(),Object($.a)(this,t,e)};var Xr=n("0wrZ");Object(An.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(Xr.a)(this)};var Yr=n("iIjY");Object(An.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(Yr.a)(this)},Object(An.d)().prototype.tile=function(t){return this.throwIfDisposed(),Object(Bt.a)(this,t)},Object(An.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(b.a)(this,"bool")},Object(An.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(b.a)(this,"float32")},Object(An.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(b.a)(this,"int32")};var Jr=n("VhY8");Object(An.d)().prototype.topk=function(t,e){return this.throwIfDisposed(),Object(Jr.a)(this,t,e)},Object(An.d)().prototype.transpose=function(t){return this.throwIfDisposed(),Object(jt.a)(this,t)};var Zr=n("hT5K");let Qr;function ta(){return null==Qr&&(Qr=Object(f.backend)().epsilon()),Qr}Object(An.d)().prototype.unique=function(t){return this.throwIfDisposed(),Object(Zr.a)(this,t)},Object(An.d)().prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(Wt.a)(this,t,e)},Object(An.d)().prototype.unstack=function(t){return this.throwIfDisposed(),Object(Se.a)(this,t)},Object(An.d)().prototype.where=function(t,e){return this.throwIfDisposed(),Object(it.a)(t,this,e)},Object(An.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(F.a)(this)};class ea extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ea.prototype)}}class na extends Error{constructor(t){super(t),Object.setPrototypeOf(this,na.prototype)}}class ra extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ra.prototype)}}class aa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,aa.prototype)}}class sa extends Error{constructor(t){super(t),Object.setPrototypeOf(this,sa.prototype)}}Error;function ia(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function oa(t,e){if(!t)throw new sa(e)}function ua(t,e){let n=0;for(const r of t)r===e&&n++;return n}function ca(t){return 1===t.length?t[0]:t}function la(t){return Array.isArray(t)?t:[t]}function da(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function ha(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}let pa={};function fa(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function ma(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach((t=>ma(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?ma(e):t[n]=e.value)}}}function ba(t,e={},n={},r="object",a=!1){if("string"===typeof t){const a=t;let s;if(a in n)s=n[a];else if(a in pa)s=pa[a];else if(s=e[a],null==s)throw new ra(`Unknown ${r}: ${t}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=t;if(null==s.className||null==s.config)throw new ra(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in pa?[o,u]=pa.className:i in e&&([o,u]=e[i]),null==o)throw new ra(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const t={};for(const n of Object.keys(pa))t[n]=pa[n];for(const a of Object.keys(n))t[a]=n[a];s.config.customObjects=t;const e=Object.assign({},pa);for(const a of Object.keys(n))pa[a]=n[a];ma(s.config);const r=u(o,s.config,n,a);return pa=Object.assign({},e),r}{const t=Object.assign({},pa);for(const r of Object.keys(n))pa[r]=n[r];const e=new o(s.config);return pa=Object.assign({},t),e}}}function ga(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function ya(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function xa(t){if(null==t)throw new ra(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function Oa(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new ra(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function va(t,e,n=0,r=1/0){return oa(n>=0),oa(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every((t=>typeof t===e))}function wa(t,e){Array.isArray(t)?(f.util.assert(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>wa(t,`element ${n+1} of ${e}`)))):f.util.assert(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${ka(t)}.`))}function ka(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>ka(t))).join(",")+"]":"string"===typeof t?`"${t}"`:`${t}`}function Ia(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function Na(t,e){return Object(f.tidy)((()=>f.sqrt(f.sum(f.mul(t,t),e,!0))))}class ja extends f.serialization.Serializable{getConfig(){return{}}}class Sa extends ja{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.tidy)((()=>{const e=Na(t,this.axis),n=f.clipByValue(e,0,this.maxValue);return f.mul(t,f.div(n,f.add(ta(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Sa.className="MaxNorm",f.serialization.registerClass(Sa);class Ta extends ja{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.tidy)((()=>f.div(t,f.add(ta(),Na(t,this.axis)))))}getConfig(){return{axis:this.axis}}}Ta.className="UnitNorm",f.serialization.registerClass(Ta);class Ca extends ja{apply(t){return f.relu(t)}}Ca.className="NonNeg",f.serialization.registerClass(Ca);class $a extends ja{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(f.tidy)((()=>{const e=Na(t,this.axis),n=f.add(f.mul(this.rate,f.clipByValue(e,this.minValue,this.maxValue)),f.mul(1-this.rate,e));return f.mul(t,f.div(n,f.add(ta(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}$a.className="MinMaxNorm",f.serialization.registerClass($a);const Ea={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Aa(t){return fa(t)}function Fa(t,e={}){return ba(t,f.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function Ra(t){if(null==t)return null;if("string"===typeof t){return Fa({className:t in Ea?Ea[t]:t,config:{}})}return t instanceof ja?t:Fa(t)}const _a=["channelsFirst","channelsLast"],Da=["nearest","bilinear"],Ma=["valid","same","causal"],za=["max","avg"],La=["sum","mul","concat","ave"],Pa=new Map;function Ba(t){Oa(_a,"DataFormat",t)}function Va(t){Oa(Ma,"PaddingMode",t)}function Wa(t){Oa(za,"PoolMode",t)}const Ua=[];function Ka(t,e){Ua.push(t);try{const t=e();return Ua.pop(),t}catch(n){throw Ua.pop(),n}}function Ga(t){if(!Xa(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Ua.length?"":Ua.join("/")+"/")+t}function Ha(t){if(!Xa(t))throw new Error("Not a valid tensor name: '"+t+"'");Pa.has(t)||Pa.set(t,0);const e=Pa.get(t);if(Pa.set(t,Pa.get(t)+1),e>0){const n=`${t}_${e}`;return Pa.set(n,1),n}return t}const qa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Xa(t){return!!t.match(qa)}function Ya(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function Ja(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(f.tensor1d)(t)}function Za(t){return f.min(Ja(t)).dataSync()[0]}function Qa(t){return f.max(Ja(t)).dataSync()[0]}function ts(t,e){if(e<t)throw new ra(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let r=t;r<e;++r)n.push(r);return n}function es(t,e){return t.asType(e)}function ns(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function rs(t,e,n){return Object(f.tidy)((()=>{switch(t.rank){case 1:return f.slice1d(t,e,n);case 2:return f.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return f.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return f.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return f.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return f.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new ra(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function as(t,e,n){return Object(f.tidy)((()=>{switch(t.rank){case 1:return f.slice1d(t,e,n);case 2:return f.slice2d(t,[0,e],[t.shape[0],n]);case 3:return f.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return f.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new ra(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ss(t,e,n,r){return Object(f.tidy)((()=>{switch(t.rank){case 1:return f.slice1d(t,e,n);case 2:switch(r){case 1:return rs(t,e,n);case 2:return as(t,e,n);default:throw new ra(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return rs(t,e,n);case 2:return f.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return as(t,e,n);default:throw new ra(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return rs(t,e,n);case 2:return f.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return f.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return as(t,e,n);default:throw new ra(`The axis is not within the rank of the tensor ${r}`)}default:throw new ra(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function is(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),f.concat(t,e)}function os(t,e){switch(t.rank){case 1:return f.concat1d([t,e]);case 2:return f.concat2d([t,e],0);case 3:return f.concat3d([t,e],0);case 4:return f.concat4d([t,e],0);default:throw new ra(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function us(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new ra(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return f.tile(t,e)}function cs(t,e=0,n=1,r,a){return f.randomNormal(t,e,n,r,a)}function ls(t,e,n,r){if(t.rank<2||e.rank<2)throw new aa(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new aa(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`)}if(2===t.rank&&2===e.rank){const a=!1,s=!1;return f.fused.matMul({a:t,b:e,transposeA:a,transposeB:s,bias:r?ps(t.rank,r,"channelsLast"):null,activation:n})}{const a=t.shape.slice(),s=a.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(l).reshape([u,-1]);const d=[...a,...c],h=!1,p=!1;return f.fused.matMul({a:t,b:e,transposeA:h,transposeB:p,bias:r?ps(t.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function ds(t,e,n){return Object(f.tidy)((()=>(e=Array.isArray(e)?Object(f.tensor1d)(e,"int32"):e.toInt(),f.gather(t,e,n))))}function hs(t){return f.mul(t,t)}function ps(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new ra(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new ra(`Unsupported input rank by biasAdd: ${e.rank}`)}function fs(t,e,n){return Object(f.tidy)((()=>(null==n&&(n="channelsLast"),Ba(n),t.add(ps(t.rank,e,n)))))}function ms(t,e,n,r){return Object(f.tidy)((()=>f.dropout(t,e,n,r)))}function bs(t,e,n=!1){return n?t():e()}const gs=["fanIn","fanOut","fanAvg"],ys=["normal","uniform","truncatedNormal"];class xs extends f.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Os extends xs{apply(t,e){return Object(f.zeros)(t,e)}}Os.className="Zeros",f.serialization.registerClass(Os);class vs extends xs{apply(t,e){return Object(f.ones)(t,e)}}vs.className="Ones",f.serialization.registerClass(vs);class ws extends xs{constructor(t){if(super(),"object"!==typeof t)throw new ra(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new ra(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return Object(f.tidy)((()=>Object(f.mul)(Object(f.scalar)(this.value),Object(f.ones)(t,e))))}getConfig(){return{value:this.value}}}ws.className="Constant",f.serialization.registerClass(ws);class ks extends xs{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(f.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ks.className="RandomUniform",f.serialization.registerClass(ks);class Is extends xs{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new aa(`randomNormal does not support dType ${e}.`);return cs(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Is.className="RandomNormal",f.serialization.registerClass(Is);class Ns extends xs{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new aa(`truncatedNormal does not support dType ${e}.`);return Object(f.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ns.className="TruncatedNormal",f.serialization.registerClass(Ns);class js extends xs{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(f.tidy)((()=>{if(2!==t.length||t[0]!==t[1])throw new ra("Identity matrix initializer can only be used for 2D square matrices.");return Object(f.mul)(this.gain,Object(f.eye)(t[0]))}))}getConfig(){return{gain:this.gain}}}js.className="Identity",f.serialization.registerClass(js);class Ss extends xs{constructor(t){if(super(),t.scale<0)throw new ra(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,Oa(gs,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){Oa(ys,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,r;if(Ba(e),2===t.length)n=t[0],r=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=Ya(t,2);n=t[1]*e,r=t[0]*e}else if("channelsLast"===e){const e=Ya(t,0,t.length-2);n=t[t.length-2]*e,r=t[t.length-1]*e}}else{const e=Ya(t);n=Math.sqrt(e),r=Math.sqrt(e)}return[n,r]}(t),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new aa(`${this.getClassName()} does not support dType ${e}.`);return Object(f.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(f.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ss.className="VarianceScaling",f.serialization.registerClass(Ss);class Ts extends Ss{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}Ts.className="GlorotUniform",f.serialization.registerClass(Ts);class Cs extends Ss{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}Cs.className="GlorotNormal",f.serialization.registerClass(Cs);class $s extends Ss{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}$s.className="HeNormal",f.serialization.registerClass($s);class Es extends Ss{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}Es.className="HeUniform",f.serialization.registerClass(Es);class As extends Ss{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}As.className="LeCunNormal",f.serialization.registerClass(As);class Fs extends Ss{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Ss.className}}Fs.className="LeCunNormal",f.serialization.registerClass(Fs);class Rs extends xs{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new aa("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(f.tidy)((()=>{if(t.length<2)throw new aa("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=cs(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=f.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(f.mul)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Rs.className="Orthogonal",f.serialization.registerClass(Rs);const _s={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ds(t,e={}){return ba(t,f.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Ms(t){return fa(t)}function zs(t){if("string"===typeof t){const e=t in _s?_s[t]:t;if("GlorotNormal"===e)return new Cs;if("GlorotUniform"===e)return new Ts;if("HeNormal"===e)return new $s;if("HeUniform"===e)return new Es;if("LeCunNormal"===e)return new As;if("LeCunUniform"===e)return new Fs;{const t={};return t.className=e,t.config={},Ds(t)}}return t instanceof xs?t:Ds(t)}let Ls=0;function Ps(){return Ls++}const Bs={};function Vs(t=""){return t in Bs||(Bs[t]=0),Bs[t]+=1,t+Bs[t].toString()}function Ws(t){return Array.isArray(t)&&Array.isArray(t[0])}function Us(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Ks(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new ra(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Gs(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new ra(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Hs(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}const qs="Variable";class Xs{constructor(t,e="float32",n="Variable",r=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Ps(),n=null==n?qs:n,this.originalName=Ga(n),this.name=Ha(this.originalName),this.trainable_=r,this.constraint=a,this.val=f.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Ys(t){return t.map((t=>t.read()))}function Js(t){t.forEach((t=>{t[0].write(t[1])}))}class Zs{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Qs{constructor(t,e,n,r,a,s,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Ps(),null!=s&&(this.originalName=Ga(s),this.name=Ha(this.originalName)),this.rank=e.length}}let ti=0;class ei{constructor(t,e){this.callArgs=e,this.id=ti++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ni=0;class ri extends f.serialization.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ni++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=da(t)+"_"+Vs(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new na(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new ra(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ca(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ca(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ea(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ea(`Layer ${this.name} is not connected, no input to return.`);return ca(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ea(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ea(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ca(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=la(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=la(this.inputSpec);if(t.length!==e.length)throw new ra(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ra(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ra(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ra(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ra(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),s=a.axes[e],i=r>=0?t[r]:t[t.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ra(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${t}.`)}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],s=r.shape[t];if(null!=e&&null!=s&&e!==s)throw new ra(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=la(t);let r=!0;for(const s of n)if(!(s instanceof Qs)){r=!1;break}let a=!0;for(const s of n)if(s instanceof Qs){a=!1;break}if(r===a)throw new ra("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ka(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of la(t))e.push(n.shape);this.build(ca(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=la(r),s=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),s.push(t);if(r=ca(s),null!=this.activityRegularizer)throw new aa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=la(t);const e=[];for(const n of t)e.push(n.shape);return ca(e)}(t),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Qs(s,n,this,la(t),e,this.name,r))):new Qs(s,r,this,la(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new aa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ea(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new ea(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new na(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Hs(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Ys(t?this.trainableWeights:this.weights)}setWeights(t){Object(f.tidy)((()=>{const e=this.weights;if(e.length!==t.length)throw new ra(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],r=Ys(e);for(let a=0;a<r.length;++a){const s=r[a],i=e[a],o=t[a];if(!f.util.arraysEqual(s.shape,o.shape))throw new ra(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Js(n)}))}addWeight(t,e,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(t))throw new ra(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=zs("zeros"));const o=r.apply(e,n),u=new Xs(o,n,t,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=la(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,r,a,s,i=null){const o=la(t);e=la(e),n=la(n),r=la(r),a=Us(a),s=Us(s);const u=[],c=[],l=[];for(const d of o)u.push(d.sourceLayer),c.push(d.nodeIndex),l.push(d.tensorIndex);new ei({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function ai(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const r=ai(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of r)-1===e.indexOf(t)&&e.push(t)}return e}}}class si extends ri{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Vs("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new ra("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new ra("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new ra("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new Qs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ei({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new ra(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function ii(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new ra("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new si({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function oi(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const s=t[a];if("number"!==typeof s){const t=s;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];Object(f.dispose)(r)}}function ui(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var ci;si.className="InputLayer",f.serialization.registerClass(si),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(ci||(ci={}));class li{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class di{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class hi extends li{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const a=Object(f.tidy)((()=>Object(f.add)(this.totals[r],Object(f.mul)(t,n))));this.totals[r]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(f.tidy)((()=>{const t=Object(f.mul)(Object(f.div)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(f.keep)(e[n])})))}}class pi extends li{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let s=0;s<r.length;++s)if("number"!==typeof r[s]){const i=r[s];t.push(i.data()),e.push(a),n.push(s)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){this.history[e[a]][n[a]].dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class fi extends li{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");f.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=f.util.now();return(...a)=>{const s=f.util.now();return s-r<e||(r=s,n=t(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await oi(n),r.push(this.yield(t,e,n))),r.push(Object(f.nextFrame)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await oi(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await oi(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(f.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await oi(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await oi(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(f.nextFrame)()):f.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await oi(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await oi(t),await this.trainEnd(t))}}function mi(t,e){if(null==t&&(t={}),t instanceof li)return[t];if(Array.isArray(t)&&t[0]instanceof li)return t;return la(t).map((t=>new fi(t,e)))}class bi{constructor(){}static registerCallbackConstructor(t,e){f.util.assert(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),bi.checkForDuplicate(e),null==bi.constructors[t]&&(bi.constructors[t]=[]),bi.constructors[t].push(e)}static checkForDuplicate(t){for(const e in bi.constructors){bi.constructors[+e].forEach((e=>{if(e===t)throw new ra("Duplicate callback constructor.")}))}}static clear(){bi.constructors={}}static createCallbacks(t){const e=[];for(const n in bi.constructors){const r=+n;t>=r&&e.push(...bi.constructors[r])}return e.map((t=>new t))}}function gi(t,e,n,r,a,s,i,o,u){const c=new pi,l=[new hi,...bi.createCallbacks(e)];null!=t&&l.push(...t),l.push(c);const d=new di(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:e,doValidation:o,metrics:u}),{callbackList:d,history:c}}function yi(t,e={},n=!1){return ba(t,f.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}function xi(t,e){return Object(f.tidy)((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=f.sum(hs(t),e,!0),r=f.fill(n.shape,ta()),a=f.sqrt(f.maximum(n,r));return f.div(t,a)}))}function Oi(t,e){return Object(f.tidy)((()=>f.mean(hs(f.sub(e,t)),-1)))}function vi(t,e){return Object(f.tidy)((()=>f.mean(f.abs(f.sub(e,t)),-1)))}function wi(t,e){return Object(f.tidy)((()=>{const n=f.sub(t,e),r=f.clipByValue(f.abs(t),ta(),Number.MAX_VALUE),a=f.abs(f.div(n,r));return f.mul(100,f.mean(a,-1))}))}function ki(t,e){return Object(f.tidy)((()=>{const n=f.clipByValue(e,ta(),Number.MAX_VALUE),r=f.log(f.add(1,n)),a=f.clipByValue(t,ta(),Number.MAX_VALUE),s=f.log(f.add(1,a));return f.mean(hs(f.sub(r,s)),-1)}))}function Ii(t,e,n=!1){return Object(f.tidy)((()=>{if(n)e=f.softmax(e);else{const t=f.sum(e,e.shape.length-1,!0);e=f.div(e,t)}return e=f.clipByValue(e,ta(),1-ta()),f.neg(f.sum(f.mul(t.toFloat(),f.log(e)),e.shape.length-1))}))}function Ni(t,e,n=!1){return Object(f.tidy)((()=>{const r=f.floor(function(t){const e=[Ya(t.shape)];return t.reshape(e)}(t)).toInt(),a=(e=f.clipByValue(e,ta(),1-ta())).shape;return Ii(f.oneHot(r,a[a.length-1]).reshape(a),e,n)}))}function ji(t,e){return Object(f.tidy)((()=>{let n;return n=f.clipByValue(e,ta(),1-ta()),n=f.log(f.div(n,f.sub(1,n))),f.mean(function(t,e){if(!f.util.arraysEqual(t.shape,e.shape))throw new ra(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return Object(f.tidy)((()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())}))}(t,n),-1)}))}function Si(t,e){return Object(f.tidy)((()=>{const n=f.clipByValue(t,ta(),1),r=f.clipByValue(e,ta(),1);return f.sum(f.mul(t,f.log(f.div(n,r))),-1)}))}function Ti(t,e){return Object(f.tidy)((()=>{const n=xi(t,-1),r=xi(e,-1),a=f.mul(n,r);return f.neg(f.sum(a,-1))}))}bi.constructors={};const Ci={meanSquaredError:Oi,meanAbsoluteError:vi,meanAbsolutePercentageError:wi,meanSquaredLogarithmicError:ki,squaredHinge:function(t,e){return Object(f.tidy)((()=>{const n=f.maximum(0,f.sub(1,f.mul(t,e)));return f.mean(hs(n),-1)}))},hinge:function(t,e){return Object(f.tidy)((()=>{const n=f.maximum(0,f.sub(1,f.mul(t,e)));return f.mean(n,-1)}))},categoricalHinge:function(t,e){return Object(f.tidy)((()=>{const n=f.sum(f.mul(t,e),-1),r=f.max(f.mul(f.sub(1,t),e),-1);return f.maximum(0,f.add(1,f.sub(r,n)))}))},logcosh:function(t,e){return Object(f.tidy)((()=>{const n=Math.log(2),r=f.sub(e,t),a=f.sub(f.add(r,f.softplus(f.mul(-2,r))),n);return f.mean(a,-1)}))},categoricalCrossentropy:Ii,sparseCategoricalCrossentropy:Ni,binaryCrossentropy:ji,kullbackLeiblerDivergence:Si,poisson:function(t,e){return Object(f.tidy)((()=>{const n=f.log(f.add(ta(),e));return f.mean(f.sub(e,f.mul(t,n)),-1)}))},cosineProximity:Ti};function $i(t){if("string"===typeof t){if(t in Ci)return Ci[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ra(e)}return t}function Ei(t,e){return Object(f.tidy)((()=>{const n=f.mul(.5,f.onesLike(e)),r=es(f.greater(e,n),t.dtype);return f.mean(f.equal(t,r),-1)}))}function Ai(t,e){return Object(f.tidy)((()=>es(f.equal(f.argMax(t,-1),f.argMax(e,-1)),"float32")))}function Fi(t,e){return Object(f.tidy)((()=>f.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32")))}function Ri(t,e){return Object(f.tidy)((()=>{const n=Fi(t,e),r=function(t,e){return Object(f.tidy)((()=>f.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),a=n.add(r);return f.where(f.greater(a,0),n.div(a),0).cast("float32")}))}function _i(t,e){return ji(t,e)}function Di(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),f.equal(t,e).asType("float32")}const Mi=Ii,zi=Ni,Li={binaryAccuracy:Ei,categoricalAccuracy:Ai,precision:Ri,categoricalCrossentropy:Mi,sparseCategoricalCrossentropy:zi,mse:Oi,MSE:Oi,mae:vi,MAE:vi,mape:wi,MAPE:wi,cosine:Ti};function Pi(t){if("string"===typeof t&&t in Li)return Li[t];if("string"!==typeof t&&null!=t)return t;throw new ra(`Unknown metric ${t}`)}function Bi(t){if(oa(null!==t,`Unknown LossOrMetricFn ${t}`),"string"===typeof t)return t;{let e;for(const n of Object.keys(Ci))if(Ci[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Li))if(Li[n]===t){e=n;break}return void 0!==e?e:t.name}}const Vi=1048576;function Wi(t,e,n=!1){if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Ui(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>Vi&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Ui(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Ui(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Ui(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Ki(t,e,n,r=console.log){const a=function(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),s=["Layer (type)","Output shape","Param #"];let i;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!a){s.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}r("_".repeat(e)),Gi(s,n,r),r("=".repeat(e));const o=t.layers;for(let l=0;l<o.length;++l)a?Hi(o[l],n,r):qi(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const u=function(t){let e;e=null!=t.collectedTrainableWeights?Hs(t.collectedTrainableWeights):Hs(t.trainableWeights);return e}(t),c=Hs(t.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(e))}function Gi(t,e,n=console.log){let r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function Hi(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(a){r="multiple"}Gi([`${t.name} (${t.getClassName()})`,r,t.countParams().toString()],e,n)}function qi(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(c){a="multiple"}const s=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],r=l.tensorIndices[t];s.push(`${e}[${n}][${r}]`)}const i=t.name,o=t.getClassName(),u=0===s.length?"":s[0];Gi([`${i} (${o})`,a,t.countParams().toString(),u],e,r);for(let l=1;l<s.length;++l)Gi(["","","",s[l]],e,r)}function Xi(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function Yi(t,e){if(null===t)return null;if("string"===typeof t)return ha(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];Xi(e,a,r)?n.push(r):n.push(Yi(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=ha(n);e[t]=Yi(r,t)}}return e}}function Ji(t,e){if(null===t||void 0===t)return null;if("string"===typeof t)return da(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];Xi(e,a,r)?n.push(r):n.push(Ji(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n],a=da(n);e[a]="name"!==n&&"className"!==n||"string"!==typeof r?Ji(r,n):r}return e}}class Zi{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Zi)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new ra(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(f.cast)(e,t.dtype)}catch(n){throw new ra(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Qs){if(null==this.id2Value[t.id])throw new ra(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new ra(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Qs){if(null==this.id2Value[t.id])throw new ra(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new ra(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(f.dispose)(this.id2Mask)}}const Qi={},to={};function eo(t,e,n,r){const a=null!=n&&n.training,s=Array.isArray(t),i=s?t:[t],o=i.map((t=>t.name)),u=[],c=e.names();for(const f of o)-1!==c.indexOf(f)?u.push(e.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+e.names().join(",");let d,h;if(null==Qi[l]){const t=function(t,e){f.util.assert(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===t.length){const a=ro(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of t){const{sorted:t,recipientMap:i}=ro(s,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:no(r)}}(i,e);d=t.sorted,h=t.recipientCounts,Qi[l]=d,to[l]=h}d=Qi[l],h={},a||Object.assign(h,to[l]);const p=new Zi(e);for(let m=0;m<d.length;++m){if(null!=r){const t=Object(f.memory)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=d[m],s=t.sourceLayer;if(s instanceof si)continue;const i=[],c=[],l=[];let b=!1;for(const n of t.inputs){const t=p.getValue(n),r=p.getMask(n);i.push(t),c.push(r),null!=r&&(b=!0),a||(h[n.name]--,0!==h[n.name]||e.hasKey(n)||-1!==o.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||l.push(t))}b&&((n=n||{}).mask=c[0]);const g=la(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,c));const x=ao(t),O=Array.isArray(x)?x:[x];for(let e=0;e<O.length;++e){p.hasKey(O[e])||p.add(O[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(O[e].name);-1!==t&&(u[t]=g[e])}a||Object(f.dispose)(l)}return p.disposeMasks(),s?u:u[0]}function no(t){const e={};for(const n in t)e[n]=t[n].size;return e}function ro(t,e){const n=new Set,r=[],a={};for(const o of e.names())n.add(o);const s=[],i=[];for(s.push(t);s.length>0;){const t=s[s.length-1];if(n.has(t.name)){s.pop();continue}const e=i[i.length-1]===s.length-1;if(0===t.inputs.length||e)s.pop(),r.push(t),n.add(t.name),e&&i.pop();else{i.push(s.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||s.push(e)}}return{sorted:r,recipientMap:a}}function ao(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class so extends ri{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Vs(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],ya(this.inputs).length!==this.inputs.length)throw new ra(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);ya(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const g of this.outputs){const t=g.sourceLayer,e=g.nodeIndex,n=g.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const g of this.inputs){const t=g.sourceLayer,e=g.nodeIndex,n=g.tensorIndex;oa(0===e,"input layer has >1 nodes"),oa(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let g=0;g<this.inputLayers.length;g++){const e=this.inputLayers[g];if(!(e instanceof si))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${g} (0-based) originates from layer type ${e.getClassName()}.`);this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const g of this.outputLayers)this.outputNames.push(g.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},r={},a={},s={},i=[],o=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new na(`The tensor ${t.name} at layer "${r.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(so.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let s=0;s<l;s++){const t=c.inputTensors[s],r=c.inboundLayers[s],a=c.nodeIndices[s],i=c.tensorIndices[s];o(t,e,n,r,a,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const g of this.outputs)o(g,u,c);const l=i.slice().reverse();for(const g of l){n[g.id]=g,g.id in e||(e[g.id]=0);let t=e[g.id];const s=null==r[g.outboundLayer.id]?0:r[g.outboundLayer.id];t=Math.max(t,s),r[g.outboundLayer.id]=t,a[g.outboundLayer.id]=g.outboundLayer,e[g.id]=t;for(let r=0;r<g.inboundLayers.length;r++){const a=g.inboundLayers[r],s=g.nodeIndices[r],i=a.inboundNodes[s],o=null==e[i.id]?0:e[i.id];e[i.id]=Math.max(t+1,o),n[i.id]=i}}const d={};for(const g in e){const t=e[g];t in d||(d[t]=[]),d[t].push(n[g])}const h={};for(const g in r){const t=r[g];t in h||(h[t]=[]),h[t].push(a[g])}let p=Object.keys(h).map((t=>parseInt(t,10))).sort(ga);this.layers=[];for(const g of p){const t=h[g];t.sort(((t,e)=>{const n=s[t.id],r=s[e.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof so&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((t=>parseInt(t,10))).sort(ga);const f=this.inputs.slice(),m=[];for(const g of p)for(const t of d[g]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new na(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const b=this.layers.map((t=>t.name));for(const g of b){const t=b.filter((t=>t===g)).length;if(1!==t)throw new na(`The name "${g}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new ei({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new ra("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let r=0;for(const s of this.layers)for(const t of s.weights){if(null!=n[t.originalName])throw new ra(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const s in t){let r=s;if(null==n[s]){const t=s.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])a.push([n[r],t[s]]);else if(e)throw new ra(`Provided weight data has no target variable: ${s}`);delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new ra(`${t.length} of ${r} weights are not set: ${t}`)}Js(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.5.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Ji(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(f.tidy)((()=>{t=la(t);const n=new Zi;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return eo(this.outputs,n,e)}))}computeMask(t,e){return Object(f.tidy)((()=>{let n;return t=la(t),n=null==e?ia(null,t.length):la(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Us(t);if(e.length!==this.inputLayers.length)throw new ra(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<e.length;i++){const t=this.inputLayers[i],r=e[i];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(ga);if(r.length>1)for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(t.id))continue;const r=[];for(let i=0;i<e.inboundLayers.length;i++){const t=e.inboundLayers[i],a=e.nodeIndices[i],s=e.tensorIndices[i],o=n[`${t.name}_${a}_${s}`];r.push(o)}const a=Us(t.computeOutputShape(ca(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],e=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],r=`${t.name}_${e}_${n}`;s.push(r)}for(let i=0;i<s.length;i++){const t=s[i];oa(t in n),a.push(n[t])}return ca(a)}runInternalGraph(t,e){null==e&&(e=ia(null,t.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],a=t[o],s=e[o];n[r.id]=[a,s]}const r=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(ga);for(const o of r){const t=this.nodesByDepth[o];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c.mask&&(c.mask=n),o=la(t.call(e,c)),u=la(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((t=>t[0])),i=s.map((t=>t[1])),null==c.mask&&(c.mask=i),o=la(t.call(r,c)),u=la(t.computeMask(r,i));if(t.activityRegularizer)throw new aa("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=o[t],s=u[t];n[e.id]=[r,s]}}}}const a=[],s=[],i=[];for(const o of this.outputs){oa(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[t,e]=n[o.id];i.push(t.shape),a.push(t),s.push(e)}return[a,s,i]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof so?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=so.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new ra(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new ra("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new ra(`No such layer: ${t}`)}calculateLosses(){return Object(f.tidy)((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=so.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const t=i.getClassName(),r=i.getConfig(),a=[];for(let n=0;n<i.inboundNodes.length;n++){const t=i.inboundNodes[n],r=so.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),o=t.callArgs}catch(s){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${t.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],s=t.nodeIndices[r],i=t.tensorIndices[r];let u=e[so.nodeKey(a,s)];null==u&&(u=0),n.push([a.name,u,i,o])}a.push(n)}}}const o={};o.name=i.name,o.className=t,o.config=r,o.inboundNodes=a,n.push(o)}t.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const t=this.inputLayers[i],n=this.inputLayersNodeIndices[i],a=so.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let s=e[a];null!==s&&void 0!==s||(s=0);const o=this.inputLayersTensorIndices[i];r.push([t.name,s,o])}t.inputLayers=r;const a=[];for(let i=0;i<this.outputLayers.length;i++){const t=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=so.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let s=e[r];null!==s&&void 0!==s||(s=0);const o=this.outputLayersTensorIndices[i];a.push([t.name,s,o])}return t.outputLayers=a,t}static fromConfig(t,e,n={},r=!1){const a={},s={};function i(t,e){t.name in s?s[t.name].push(e):s[t.name]=[e]}function o(t,e){const n=[];let r;for(const s of e){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(t,e);const l=a[o];if(l.inboundNodes.length<=u)return void i(t,e);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&t.apply(ca(n),r)}function u(t){const n=t.name,s=yi(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new ra(`Corrupted configuration, expected array for nodeData: ${t}`);i(s,t)}))}const c=e.name,l=e.layers;for(const m of l)u(m);for(;!xa(s);)for(const t of l){const e=a[t.name];if(e.name in s){const t=s[e.name];delete s[e.name];for(const n of t)o(e,n)}}const d=[],h=[],p=e.inputLayers;for(const m of p){const t=m[0],e=m[1],n=m[2];oa(t in a);const r=a[t].inboundNodes[e].outputTensors;d.push(r[n])}const f=e.outputLayers;for(const m of f){const t=m[0],e=m[1],n=m[2];oa(t in a);const r=a[t].inboundNodes[e].outputTensors;h.push(r[n])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new ra("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(f.tidy)((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function io(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}function oo(t,e){return io(t,e,"classWeight")}async function uo(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(f.tidy)((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await e.data());Object(f.dispose)(e);const a=[];return r.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])})),Object(f.tensor1d)(a,"float32")}return null}function co(t,e){return Object(f.mul)(t,e)}function lo(t,e){let n,r;const a=e;n=a.xs,r=a.ys,f.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const s=ho("input",t.inputNames,n),i=ho("output",t.outputNames,r),o=s[0].shape[0];f.util.assert(s.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),f.util.assert(i.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let u=0;u<s.length;u++)f.util.assert(s[u].shape[0]===o,(()=>`Batch size mismatch: input ${t.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));for(let u=0;u<i.length;u++)f.util.assert(i[u].shape[0]===o,(()=>`Batch size mismatch: output ${t.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${t.inputNames[0]}.`));return{xs:s,ys:i}}function ho(t,e,n){if(n instanceof f.Tensor)return[n];if(Array.isArray(n))return f.util.assert(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const r=[];for(const a of e){if(null==n[a])throw new ra(`The feature data generated by the dataset lacks the required ${t} key '${a}'.`);r.push(n[a])}return r}}async function po(t,e,n){const r=null!=n.batchesPerEpoch;if(f.util.assert(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),f.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),f.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),f.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),f.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(fo(n.validationData))f.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new aa("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,i=t.ys}const o=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const l=mi(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=gi(l,d,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,a,c);h.setModel(t),t.history=p,await h.onTrainBegin(),t.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,b=await e.iterator();for(;m<n.epochs;){const c={};await h.onEpochBegin(m);let l=0,d=0;for(r||(b=await e.iterator());!r||l<n.batchesPerEpoch;){const e=await b.next();if(r&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${l} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:a}=lo(t,e.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const e=oo(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await uo(a[t],null,e[t]))}const c=r.concat(a).concat(i),p=o(c);f.dispose(c);for(let t=0;t<u.length;++t){const e=u[t],n=p[t];s[e]=n,f.keep(n)}await h.onBatchEnd(d,s),ui(s),d++,l++}if(r?l>=n.batchesPerEpoch:e.done){if(a){let e;e=fo(n.validationData)?la(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):la(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await h.onEpochEnd(m,c),m++,t.stopTraining_)break}return await h.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function fo(t){return"function"===typeof t.iterator}function mo(t){f.util.assert(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function bo(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>rs(t,e,n-e))):rs(t,e,n-e)}function go(t,e){return f.tidy((()=>null==t?null:Array.isArray(t)?t.map((t=>go(t,e))):ds(t,"int32"===e.dtype?e:e.toInt())))}function yo(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function xo(t,e,n,r={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l;t.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;mo(d);const h=!1,p=await t.standardizeUserData(e,n,r.sampleWeight,r.classWeight,h,d);a=p[0],s=p[1],l=p[2];let m,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new aa("validationData including sample weights is not supported yet."):new ra(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const e=!0,n=await t.standardizeUserData(i,o,null,null,e,d);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const t=Math.floor(a[0].shape[0]*(1-r.validationSplit)),e=a[0].shape[0];u=bo(a,t,e),a=bo(a,0,t),c=bo(s,t,e),s=bo(s,0,t),m=u.concat(c)}else null!=r.validationSteps&&(b=!0);const g=a.concat(s).concat(l);t.checkTrainableWeightsConsistency();const y=t.makeTrainFunction(),x=t.getDedupedMetricsNames();let O,v;b?(t.makeTestFunction(),O=t.testFunction,v=x.slice().concat(x.map((t=>"val_"+t)))):(O=null,m=[],v=x.slice());const w=mi(r.callbacks,r.yieldEvery);return await async function(t,e,n,r,a,s,i,o,u,c,l,d,h,p,m){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let b=!1;if(null!=u&&null!=c&&(b=!0),null!=m&&(b=!0,null==p))throw new ra("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=t.checkNumSamples(n,a,p,"steps_per_epoch");let y;null!=g&&(y=ts(0,g)),null==i&&(i=1);const{callbackList:x,history:O}=gi(o,i,s,h,g,p,a,b,d);x.setModel(t),t.history=O,await x.onTrainBegin(),t.stopTraining_=!1;for(let v=h;v<s;++v){await x.onEpochBegin(v);const s={};if(null!=p)throw new aa("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new aa("batch shuffling is not implemneted yet");l&&f.util.shuffle(y);const i=Object(f.tensor1d)(y),o=yo(g,a);for(let l=0;l<o.length;++l){const d={};if(await x.onBatchBegin(l,d),f.tidy((()=>{const h=o[l][0],p=o[l][1],m=rs(i,h,p-h);d.batch=l,d.size=p-h;const g=go(n,m),y=e(g);for(let t=0;t<r.length;++t){const e=r[t],n=y[t];d[e]=n,f.keep(n)}if(l===o.length-1&&b){const e=t.testLoop(u,c,a);for(let t=0;t<r.length;++t){const n=r[t],a=e[t];f.keep(a),s["val_"+n]=a}}})),await x.onBatchEnd(l,d),ui(d),t.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(v,s),t.stopTraining_)break}return await x.onTrainEnd(),await t.history.syncData(),t.history}(t,y,g,x,d,r.epochs,r.verbose,w,O,m,r.shuffle,v,r.initialEpoch,null,null)}finally{t.isTraining=!1,vo(a,e),vo(s,n),vo(u,i),vo(c,o),null!=l&&f.dispose(l)}}function Oo(t){const e=[];t instanceof f.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(ns(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function vo(t,e){if(null==t)return;const n=[];if(e instanceof f.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof f.Tensor)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&r.push(t)}));else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach((t=>{t.isDisposed||t.dispose()}))}function wo(t){return Array.isArray(t)}function ko(t){return!function(t){return t instanceof f.Tensor}(t)&&!wo(t)}function Io(t,e,n,r=!0,a=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(wo(t)&&t.length>0)e=!0;else if(ko(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new ra(`Error when checking model ${a} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let s;if(ko(t)){t=t,s=[];for(const n of e){if(null==t[n])throw new ra(`No data provided for "${n}". Need data for each key in: ${e}`);s.push(t[n])}}else if(wo(t)){if((t=t).length!==e.length)throw new ra(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);s=t}else{if(t=t,e.length>1)throw new ra(`The model ${a} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);s=[t]}if(s=Oo(s),null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new ra(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s). but got array with shape ${t.shape}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u>=0&&o!==u)throw new ra(`Error when checking ${a}: expected ${e[i]} to have shape [${n[i]}], but got array with shape [${t.shape}].`)}}return s}function No(t,e,n,r=!0,a=""){let s;if(Array.isArray(t)){if(t.length!==e.length)throw new ra(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);s=t}else{if(e.length>1)throw new ra(`The model expects ${e.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);s=[t]}if(null!=n)for(let i=0;i<e.length;++i){if(null==n[i])continue;const t=s[i];if(t.shape.length!==n[i].length)throw new ra(`Error when checking ${a}: expected ${e[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(t.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!r)continue;const o=t.shape[s],u=n[i][s];if(null!=u&&u!==o)throw new ra(`Error when checking ${a}: expected ${e[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(t.shape)}.`)}}}class jo extends so{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new ra("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Ki(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>f.train.adagrad(.01),Adadelta:()=>f.train.adadelta(1,.95,ta()),Adam:()=>f.train.adam(.001,.9,.999,ta()),Adamax:()=>f.train.adamax(.002,.9,.999,ta(),0),RMSProp:()=>f.train.rmsprop(.001,.9,0,ta()),SGD:()=>f.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new ra(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof f.Optimizer))throw new ra("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new ra(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>$i(t)))}else{const n=$i(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new ra(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push($i(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const t=this.internalOutputShapes[s],e=this.outputNames[s];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ka("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Ka("metric",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,s;for(const i of e){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===ji?-1!==["accuracy","acc"].indexOf(i)?r=Ei:-1!==["crossentropy","ce"].indexOf(i)&&(r=_i):this.lossFunctions[t]===Ni?-1!==["accuracy","acc"].indexOf(i)?r=Di:-1!==["crossentropy","ce"].indexOf(i)&&(r=zi):-1!==["accuracy","acc"].indexOf(i)?r=Ai:-1!==["crossentropy","ce"].indexOf(i)&&(r=Mi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const t=Pi(i);s=t,n=""+Bi(i)}let e;Ka(n,(()=>{e=s})),a(t,n,e)}})(r[t])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const r=null==n.batchSize?32:n.batchSize;mo(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return ca(this.testLoop(i,s,r,n.verbose,n.steps))}finally{vo(a[0],t),vo(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,a=t.testFunction;let s=[];if(n.verbose>0)throw new aa("Verbose mode is not implemented yet.");f.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof e.next?e:await e.iterator();let o=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(s=f.tidy((()=>{if(e.value){const{xs:n,ys:r}=lo(t,e.value),i=n.concat(r),c=f.tidy((()=>a(i)));if(f.dispose(i),0===u)for(let t=0;t<c.length;++t)s.push(Object(f.scalar)(0));const l=i[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=s[t];s[t]=f.tidy((()=>f.add(s[t],f.mul(l,e)))),u>0&&f.dispose(n)}f.dispose(c),o+=l,++u}return s})),e.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<s.length;++c){const t=s[c];s[c]=f.div(s[c],o),f.dispose(t)}return ca(s)}(this,t,e)}checkNumSamples(t,e,n,r="steps"){let a;if(null!=n){if(a=null,null!=e)throw new ra(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new ra(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new ra("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],a=this.retrieveSymbolicTensors(r),s=new Zi;if(t instanceof f.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new ra(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const o of this.inputs){const e=t[o.name];if(null==e)throw new ra(`No value is provided for the model's input ${o.name}`);s.add(o,e)}const i=eo(a,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=ia(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((t=>t.name));for(let r=0;r<t.length;++r){const i=s.indexOf(t[r]);if(-1!==i&&(e[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,r)=>{null==e&&n.push(t[r])})),new ra(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return f.tidy((()=>{const r=this.checkNumSamples(t);if(n)throw new aa("Verbose predictLoop() is not implemented yet.");const a=yo(r,e),s=this.outputs.map((t=>[]));for(let e=0;e<a.length;++e){f.tidy((()=>{const n=a[e][0],r=a[e][1],s=bo(t,n,r),i=[];if(Array.isArray(s))for(let t=0;t<s.length;++t)i.push({key:this.inputs[t],value:s[t]});else i.push({key:this.inputs[0],value:s});const o=new Zi(i);return eo(this.outputs,o)})).forEach(((t,e)=>s[e].push(t)))}return ca(s.map((t=>f.concat(t,0))))}))}predict(t,e={}){const n=Oo(t);No(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return mo(r),this.predictLoop(n,r)}finally{vo(n,t)}}predictOnBatch(t){No(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,r){if(null==this.optimizer_)throw new na("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let s=0;s<this.feedOutputShapes.length;++s){const t=this.feedOutputShapes[s];this.feedLossFns[s]===Ni?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(t,e,n){const r=ya(t.map((t=>t.shape[0])));r.sort();const a=ya(e.map((t=>t.shape[0])));if(a.sort(),r.length>1)throw new ra(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(a.length>1)throw new ra(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(r.length>0&&a.length>0&&!f.util.arraysEqual(r,a))throw new ra(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(t=Io(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Io(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const r=[Oi,ji,Ii];for(let a=0;a<t.length;++a){const s=t[a],i=e[a],o=n[a];if(null!=i){if(i===Ii&&1===s.shape[s.shape.length-1])throw new ra(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const t=s.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new ra(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&t[0].shape[0]%r!==0)throw new ra(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(t,e,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const t=oo(r,this.outputNames);u=[];for(let e=0;e<t.length;++e)u.push(await uo(o[e],null,t[e]))}return[i,o,u]}testLoop(t,e,n,r=0,a){return f.tidy((()=>{const s=this.checkNumSamples(e,n,a,"steps"),i=[];if(r>0)throw new aa("Verbose mode is not implemented yet.");if(null!=a)throw new aa("steps mode in testLoop() is not implemented yet");{const r=yo(s,n),a=Object(f.tensor1d)(ts(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=rs(a,s,o-s),c=go(e,u),l=t(c);if(0===n)for(let t=0;t<l.length;++t)i.push(Object(f.scalar)(0));for(let t=0;t<l.length;++t){const e=l[t];i[t]=f.add(i[t],f.mul(o-s,e))}}for(let t=0;t<i.length;++t)i[t]=f.div(i[t],s)}return i}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(ua(t,r)>1){a+=`_${ua(t.slice(0,n),r)}`}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new Zi(t),o=eo(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],o[n]);null!=a[n]&&(t=co(t,a[n]));const s=f.mean(t);e.push(s),u=0===n?t:f.add(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],a=this.metricsTensors[n][1];t=f.mean(e(r[a],o[a]))}f.keep(t),s.push(t)}return u=f.mean(u),this.calculateLosses().forEach((t=>{u=f.add(u,t)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=t=>f.tidy((()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new Zi(s),o=eo(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=f.mean(r(a[t],o[t]));n=0===t?s:f.add(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=f.mean(n(a[r],o[r]));e.push(s)}return e}))}async fit(t,e,n={}){return xo(this,t,e,n)}async fitDataset(t,e){return po(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const o of s){const t=await o.data();i.push(t[0])}return f.dispose(s),ca(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||e.push({name:r[s].originalName,tensor:a[s]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=f.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-f.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=da(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>da(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=da(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[da(Bi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>da(Bi(t))));{const t={};for(const e in this.metrics)t[e]=da(Bi(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=yi(Yi(t.optimizer_config));let n,r;if("string"===typeof t.loss)n=ha(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>ha(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=ha(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map((t=>ha(t)));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=ha(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"===typeof t){const e=f.io.getSaveHandlers(t);if(0===e.length)throw new ra(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new ra(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new ra("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await f.io.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.5.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:a}=await f.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...a),n.data=f.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Wi(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){Wi(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}jo.className="Model",f.serialization.registerClass(jo);class So extends jo{}So.className="Functional",f.serialization.registerClass(So);class To extends jo{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Vs("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new ra(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof To||t instanceof jo;let n;if(e){if(n=t,1!==n.outputs.length)throw new ra("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ra("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new ra("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=ii({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new ra(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new ra("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=ai(this.outputs[0])}this.inboundNodes=[],new ei({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ia(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Gs(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new jo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new na("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new na("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new na("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new na("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},r=!1){let a,s={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new ra("Legacy serialization format not supported yet.");a=e}else f.util.assert(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=e.layers,delete e.layers,s=e;const i=new t(s);if(!(i instanceof To))throw new aa(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of a){const t=yi(o,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(t){if(null==this.model)throw new ra("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new ra("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}To.className="Sequential",f.serialization.registerClass(To);class Co extends f.serialization.Serializable{getConfig(){return{}}}class $o extends Co{apply(t,e=1){return function(t,e=1){if(1!==e)throw new aa(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return f.elu(t)}(t,e)}}$o.className="elu",f.serialization.registerClass($o);class Eo extends Co{apply(t){return f.selu(t)}}Eo.className="selu",f.serialization.registerClass(Eo);class Ao extends Co{apply(t){return f.relu(t)}}Ao.className="relu",f.serialization.registerClass(Ao);class Fo extends Co{apply(t){return Object(f.tidy)((()=>f.minimum(6,f.relu(t))))}}Fo.className="relu6",f.serialization.registerClass(Fo);class Ro extends Co{apply(t){return t}}Ro.className="linear",f.serialization.registerClass(Ro);class _o extends Co{apply(t){return f.sigmoid(t)}}_o.className="sigmoid",f.serialization.registerClass(_o);class Do extends Co{apply(t){return function(t){return Object(f.tidy)((()=>{const e=f.add(.5,f.mul(.2,t));return f.clipByValue(e,0,1)}))}(t)}}Do.className="hardSigmoid",f.serialization.registerClass(Do);class Mo extends Co{apply(t){return f.softplus(t)}}Mo.className="softplus",f.serialization.registerClass(Mo);class zo extends Co{apply(t){return function(t){return Object(f.tidy)((()=>f.div(t,f.abs(t).add(1))))}(t)}}zo.className="softsign",f.serialization.registerClass(zo);class Lo extends Co{apply(t){return f.tanh(t)}}Lo.className="tanh",f.serialization.registerClass(Lo);class Po extends Co{apply(t,e=-1){return f.softmax(t,e)}}Po.className="softmax",f.serialization.registerClass(Po);class Bo extends Co{apply(t,e=-1){return f.logSoftmax(t,e)}}Bo.className="logSoftmax",f.serialization.registerClass(Bo);class Vo extends Co{apply(t,e=1){return Object(f.tidy)((()=>f.sigmoid(t.mul(e)).mul(t)))}}Vo.className="swish",f.serialization.registerClass(Vo);class Wo extends Co{apply(t){return Object(f.tidy)((()=>f.mul(t,f.tanh(f.softplus(t)))))}}function Uo(t){return t.getClassName()}function Ko(t,e={}){return ba(t,f.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function Go(t){if(null==t){const t={className:"linear",config:{}};return Ko(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Ko(e)}return t instanceof Co?t:Ko(t)}function Ho(t){if(null!=t&&"object"!==typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}Wo.className="mish",f.serialization.registerClass(Wo);class qo extends f.serialization.Serializable{}class Xo extends qo{constructor(t){super(),Ho(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(f.tidy)((()=>{let e=Object(f.zeros)([1]);return this.hasL1&&(e=Object(f.add)(e,Object(f.sum)(f.mul(this.l1,Object(f.abs)(t))))),this.hasL2&&(e=Object(f.add)(e,Object(f.sum)(f.mul(this.l2,hs(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Xo.className="L1L2",f.serialization.registerClass(Xo);const Yo={l1l2:"L1L2"};function Jo(t){return fa(t)}function Zo(t,e={}){return ba(t,f.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function Qo(t){if(null==t)return null;if("string"===typeof t){return Zo({className:t in Yo?Yo[t]:t,config:{}})}return t instanceof qo?t:Zo(t)}class tu extends ri{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Ks(t);let n=Object(f.relu)(t);return null!=this.maxValue&&(n=Object(f.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}tu.className="ReLU",f.serialization.registerClass(tu);class eu extends ri{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ks(t);return Object(f.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}eu.className="LeakyReLU",f.serialization.registerClass(eu);class nu extends ri{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=zs(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Qo(t.alphaRegularizer),this.alphaConstraint=Ra(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new ra(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Gs(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new Zs({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Ks(t),Object(f.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ms(this.alphaInitializer),alphaRegularizer:Jo(this.alphaRegularizer),alphaConstraint:Aa(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}nu.className="PReLU",f.serialization.registerClass(nu);class ru extends ri{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new aa(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Ks(t);return Object(f.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}ru.className="ELU",f.serialization.registerClass(ru);class au extends ri{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Ks(t);return n.mul(es(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}au.className="ThresholdedReLU",f.serialization.registerClass(au);class su extends ri{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Po).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Ks(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function iu(t,e,n){if("number"===typeof t)return ia(t,e);if(t.length!==e)throw new ra(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let a=0;a<e;++a){const s=t[a];if((r=s)!==parseInt(r.toString(),10))throw new ra(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${s}`)}return t;var r}function ou(t,e,n,r,a=1){if(null==t)return t;let s;return s="same"===n?t:t-(e+(e-1)*(a-1))+1,Math.floor((s+r-1)/r)}function uu(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+Qa([n-e,0]);else{if("same"!==r)throw new ra(`Unsupport padding mode: ${r}.`);t*=e}return t}function cu(t,e){return Object(f.tidy)((()=>(Ba(e),"channelsFirst"===e?f.transpose(t,[0,2,3,1]):t)))}function lu(t,e){return Object(f.tidy)((()=>(Ba(e),"channelsFirst"===e?f.transpose(t,[0,2,3,4,1]):t)))}function du(t,e,n,r=1,a="valid",s,i=1){return Object(f.tidy)((()=>{if(null==s&&(s="channelsLast"),Ba(s),3!==t.shape.length)throw new ra(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new ra(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ra(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===s&&(t=f.transpose(t,[0,2,1])),"causal"===a)throw new aa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=f.conv1d(t,e,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=fs(o,n)),o}))}function hu(t,e,n,r=[1,1],a="valid",s,i,o=null){return Object(f.tidy)((()=>{if(null==s&&(s="channelsLast"),Ba(s),3!==t.rank&&4!==t.rank)throw new ra(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new ra(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let u=cu(t,s);if("causal"===a)throw new aa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=f.fused.conv2d({x:u,filter:e,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=f.transpose(u,[0,3,1,2])),u}))}function pu(t,e,n,r=[1,1,1],a="valid",s,i){return Object(f.tidy)((()=>{if(null==s&&(s="channelsLast"),Ba(s),4!==t.rank&&5!==t.rank)throw new ra(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new ra(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let o=lu(t,s);if("causal"===a)throw new aa("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=f.conv3d(o,e,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=fs(o,n)),"channelsFirst"===s&&(o=f.transpose(o,[0,4,1,2,3])),o}))}su.className="Softmax",f.serialization.registerClass(su);class fu extends ri{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fu.verifyArgs(e),this.rank=t,wa(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new aa(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=iu(e.kernelSize,t,"kernelSize"),this.strides=iu(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,Va(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ba(this.dataFormat),this.activation=Go(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ra(e.biasConstraint),this.biasRegularizer=Qo(e.biasRegularizer),this.activityRegularizer=Qo(e.activityRegularizer),this.dilationRate=iu(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ra(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ra(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ra(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(oa("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!va(t.kernelSize,"number",1,3))throw new ra(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Uo(this.activation),useBias:this.useBias,biasInitializer:Ms(this.biasInitializer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),biasConstraint:Aa(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class mu extends fu{constructor(t,e){super(t,e),this.kernel=null,mu.verifyArgs(e),this.filters=e.filters,wa(this.filters,"filters"),this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ra(e.kernelConstraint),this.kernelRegularizer=Qo(e.kernelRegularizer)}build(t){t=Gs(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new ra(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(f.tidy)((()=>{let e;t=Ks(t);const n=null==this.bias?null:this.bias.read(),r=Ia(this.activation.getClassName());if(null!=r&&2===this.rank)e=hu(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=du(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=hu(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new aa("convolutions greater than 3D are not implemented yet.");e=pu(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Gs(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=ou(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ms(this.kernelInitializer),kernelRegularizer:Jo(this.kernelRegularizer),kernelConstraint:Aa(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new ra(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class bu extends mu{constructor(t){super(2,t),bu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!va(t.kernelSize,"number",1,2))throw new ra(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}bu.className="Conv2D",f.serialization.registerClass(bu);class gu extends mu{constructor(t){super(3,t),gu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new ra(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}gu.className="Conv3D",f.serialization.registerClass(gu);class yu extends bu{constructor(t){if(super(t),this.inputSpec=[new Zs({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ra(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Gs(t)).length)throw new ra("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new ra("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zs({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return f.tidy((()=>{let e=Ks(t);if(4!==e.shape.length)throw new ra(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],d=this.strides[1],h=[r,uu(i,l,u,this.padding),uu(o,d,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=f.transpose(e,[0,2,3,1]));let p=f.conv2dTranspose(e,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=f.transpose(p,[0,3,1,2])),null!=this.bias&&(p=fs(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(t){const e=(t=Gs(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return e[n]=this.filters,e[r]=uu(e[r],o,s,this.padding),e[a]=uu(e[a],u,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}yu.className="Conv2DTranspose",f.serialization.registerClass(yu);class xu extends gu{constructor(t){if(super(t),this.inputSpec=[new Zs({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ra(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Gs(t)).length)throw new ra("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new ra("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Zs({ndim:5,axes:{[e]:n}})],this.built=!0}call(t,e){return f.tidy((()=>{let e=Ks(t);if(5!==e.shape.length)throw new ra(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],c=n[s],l=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],m=this.strides[1],b=this.strides[2],g=[r,uu(o,p,l,this.padding),uu(u,m,d,this.padding),uu(c,b,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=f.transpose(e,[0,2,3,4,1]));let y=f.conv3dTranspose(e,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=f.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=fs(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(t){const e=(t=Gs(t)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],c=this.strides[0],l=this.strides[1],d=this.strides[2];return e[n]=this.filters,e[r]=uu(e[r],c,i,this.padding),e[a]=uu(e[a],l,o,this.padding),e[s]=uu(e[s],d,u,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}xu.className="Conv3DTranspose",f.serialization.registerClass(xu);class Ou extends mu{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new ra("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new ra("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new ra(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=zs(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Qo(e.depthwiseRegularizer),this.depthwiseConstraint=Ra(e.depthwiseConstraint),this.pointwiseInitializer=zs(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Qo(e.pointwiseRegularizer),this.pointwiseConstraint=Ra(e.pointwiseConstraint)}build(t){if((t=Gs(t)).length<this.rank+2)throw new ra(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new ra(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Zs({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(f.tidy)((()=>{let e;if(t=Ks(t),1===this.rank)throw new aa("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=f.transpose(t,[0,2,3,1])),e=f.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=fs(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=f.transpose(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ms(this.depthwiseInitializer),t.pointwiseInitializer=Ms(this.pointwiseInitializer),t.depthwiseRegularizer=Jo(this.depthwiseRegularizer),t.pointwiseRegularizer=Jo(this.pointwiseRegularizer),t.depthwiseConstraint=Aa(this.depthwiseConstraint),t.pointwiseConstraint=Aa(this.pointwiseConstraint),t}}Ou.className="SeparableConv";class vu extends Ou{constructor(t){super(2,t)}}vu.className="SeparableConv2D",f.serialization.registerClass(vu);class wu extends mu{constructor(t){super(1,t),wu.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!va(t.kernelSize,"number",1,1))throw new ra(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}wu.className="Conv1D",f.serialization.registerClass(wu);class ku extends ri{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(f.tidy)((()=>{if(t=Ks(t),"channelsLast"===this.dataFormat){const e=ss(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ss(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ss(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ss(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ku.className="Cropping2D",f.serialization.registerClass(ku);class Iu extends ri{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ba(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,Oa(Da,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return f.tidy((()=>{let e=Ks(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=f.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return f.transpose(a,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Iu.className="UpSampling2D",f.serialization.registerClass(Iu);class Nu extends fu{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ra(t.depthwiseConstraint),this.depthwiseRegularizer=Qo(t.depthwiseRegularizer)}build(t){if((t=Gs(t)).length<4)throw new ra(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new ra(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.tidy)((()=>{let e=function(t,e,n=[1,1],r="valid",a,s){return Object(f.tidy)((()=>{null==a&&(a="channelsLast"),Ba(a);let i=cu(t,a);if(4!==t.rank)throw new ra(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new ra(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=f.depthwiseConv2d(i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=f.transpose(i,[0,3,1,2])),i}))}(t=Ks(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=fs(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Gs(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=ou(e,this.kernelSize[0],this.padding,this.strides[0]),s=ou(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,s]:[t[0],a,s,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ms(this.depthwiseInitializer),t.depthwiseRegularizer=Jo(this.depthwiseRegularizer),t.depthwiseConstraint=Aa(this.depthwiseRegularizer),t}}function ju(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new ra("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function Su(t,e,n,r=!1,a,s,i=!1,o=!1){return f.tidy((()=>{const u=e.shape.length;if(u<3)throw new ra(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ts(2,u));if(e=f.transpose(e,c),null!=s)throw new aa("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=f.expandDims(a,-1)),a=f.transpose(a,c)),r&&(e=f.reverse(e,0),null!=a&&(a=f.reverse(a,0)));const l=[];let d,h=n;const p=e.shape[0],m=f.unstack(e);let b,g;null!=a&&(b=f.unstack(a));for(let e=0;e<p;++e){const n=m[e],r=f.tidy((()=>t(n,h)));if(null==a)d=r[0],h=r[1];else{const t=f.tidy((()=>{const t=b[e],n=f.onesLike(t).sub(t);return{output:r[0].mul(t).add(h[0].mul(n)),newStates:h.map(((e,a)=>r[1][a].mul(t).add(e.mul(n))))}}));d=t.output,h=t.newStates}o&&l.push(d)}if(o){const t=1;g=f.stack(l,t)}return[d,g,h]}))}Nu.className="DepthwiseConv2D",f.serialization.registerClass(Nu);class Tu extends ri{constructor(t){let e;if(super(t),null==t.cell)throw new ra("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new Du({cells:t.cell}):t.cell,null==e.stateSize)throw new ra("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new Zs({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ts(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null))}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Ws(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return f.tidy((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new aa("Constants support is not implemented in RNN yet.");Ws(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new Zs({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!f.util.arraysEqual(this.stateSpec.map((t=>t.shape[t.shape.length-1])),a))throw new ra(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((t=>new Zs({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){Object(f.tidy)((()=>{if(!this.stateful)throw new ea("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ra("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>f.zeros([n,t]))):this.states_=[f.zeros([n,this.cell.stateSize])];else if(null==t)f.dispose(this.states_),null!=this.keptStates&&(f.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>f.zeros([n,t]))):this.states_[0]=f.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new ra(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):f.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,a];if(!f.util.arraysEqual(r.shape,s))throw new ra(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[e]=r}}this.states_=this.states_.map((t=>f.keep(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ju(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){e.initialState=n,s=s.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new Zs({shape:t.shape}));i=i.concat(this.stateSpec)}null!=r&&(e.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof Qs){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(f.tidy)((()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=Ks(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ra(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Su(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d}))}getInitialState(t){return Object(f.tidy)((()=>{let e=f.zeros(t.shape);return e=f.sum(e,[1,2]),e=ns(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?us(e,[1,t]):e)):this.cell.stateSize>1?[us(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Tu.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const r=yi(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Tu.className="RNN",f.serialization.registerClass(Tu);class Cu extends ri{}class $u extends Cu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,wa(this.units,"units"),this.activation=Go(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qo(t.kernelRegularizer),this.recurrentRegularizer=Qo(t.recurrentRegularizer),this.biasRegularizer=Qo(t.biasRegularizer),this.kernelConstraint=Ra(t.kernelConstraint),this.recurrentConstraint=Ra(t.recurrentConstraint),this.biasConstraint=Ra(t.biasConstraint),this.dropout=Za([1,Qa([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Za([1,Qa([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Gs(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.tidy)((()=>{if(2!==(t=t).length)throw new ra(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const r=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mu({ones:()=>f.onesLike(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mu({ones:()=>f.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=ls(null!=s?f.mul(t,s):t,this.kernel.read()),null!=this.bias&&(a=fs(a,this.bias.read())),null!=i&&(n=f.mul(n,i));let o=f.add(a,ls(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Aa(this.kernelConstraint),recurrentConstraint:Aa(this.recurrentConstraint),biasConstraint:Aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}$u.className="SimpleRNNCell",f.serialization.registerClass($u);class Eu extends Tu{constructor(t){t.cell=new $u(t),super(t)}call(t,e){return Object(f.tidy)((()=>{null!=this.cell.dropoutMask&&(f.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})}))}static fromConfig(t,e){return new t(e)}}Eu.className="SimpleRNN",f.serialization.registerClass(Eu);class Au extends Cu{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new ra("GRUCell does not support reset_after parameter set to true.");this.units=t.units,wa(this.units,"units"),this.activation=Go(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Go(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Qo(t.kernelRegularizer),this.recurrentRegularizer=Qo(t.recurrentRegularizer),this.biasRegularizer=Qo(t.biasRegularizer),this.kernelConstraint=Ra(t.kernelConstraint),this.recurrentConstraint=Ra(t.recurrentConstraint),this.biasConstraint=Ra(t.biasConstraint),this.dropout=Za([1,Qa([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Za([1,Qa([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Gs(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(f.tidy)((()=>{if(2!==(t=t).length)throw new ra(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mu({ones:()=>f.onesLike(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mu({ones:()=>f.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(t=f.mul(t,a[0]));let c=ls(t,this.kernel.read());this.useBias&&(c=fs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=f.mul(r,s[0]));const l=this.recurrentKernel.read(),[d,h]=f.split(l,[2*this.units,this.units],l.rank-1),p=ls(r,d),[m,b,g]=f.split(c,3,c.rank-1),[y,x]=f.split(p,2,p.rank-1);i=this.recurrentActivation.apply(f.add(m,y)),o=this.recurrentActivation.apply(f.add(b,x));const O=ls(f.mul(o,r),h);u=this.activation.apply(f.add(g,O));const v=f.add(f.mul(i,r),f.mul(f.add(1,f.neg(i)),u));return[v,v]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Aa(this.kernelConstraint),recurrentConstraint:Aa(this.recurrentConstraint),biasConstraint:Aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Au.className="GRUCell",f.serialization.registerClass(Au);class Fu extends Tu{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Au(t),super(t)}call(t,e){return Object(f.tidy)((()=>{null!=this.cell.dropoutMask&&(f.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Fu.className="GRU",f.serialization.registerClass(Fu);class Ru extends Cu{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,wa(this.units,"units"),this.activation=Go(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Go(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Qo(t.kernelRegularizer),this.recurrentRegularizer=Qo(t.recurrentRegularizer),this.biasRegularizer=Qo(t.biasRegularizer),this.kernelConstraint=Ra(t.kernelConstraint),this.recurrentConstraint=Ra(t.recurrentConstraint),this.biasConstraint=Ra(t.biasConstraint),this.dropout=Za([1,Qa([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=Za([1,Qa([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Gs(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends xs{apply(e,r){const a=t.apply([n]),s=(new vs).apply([n]),i=t.apply([2*n]);return os(os(a,s),i)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(f.tidy)((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new ra(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let r=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mu({ones:()=>f.onesLike(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mu({ones:()=>f.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(t=f.mul(t,s[0]));let d=ls(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=f.mul(r,i[0])),d=f.add(d,ls(r,this.recurrentKernel.read())),this.useBias&&(d=fs(d,this.bias.read()));const[h,p,m,b]=f.split(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),c=f.add(f.mul(u,a),f.mul(o,this.activation.apply(m))),l=this.recurrentActivation.apply(b);const g=f.mul(l,this.activation.apply(c));return[g,g,c]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Uo(this.activation),recurrentActivation:Uo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),recurrentInitializer:Ms(this.recurrentInitializer),biasInitializer:Ms(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Jo(this.kernelRegularizer),recurrentRegularizer:Jo(this.recurrentRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Aa(this.kernelConstraint),recurrentConstraint:Aa(this.recurrentConstraint),biasConstraint:Aa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Ru.className="LSTMCell",f.serialization.registerClass(Ru);class _u extends Tu{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ru(t),super(t)}call(t,e){return Object(f.tidy)((()=>{null!=this.cell.dropoutMask&&(f.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}_u.className="LSTM",f.serialization.registerClass(_u);class Du extends Cu{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(f.tidy)((()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[t[0]].concat(n):[s[0]].concat(n),s=o.call(s,e),a.push(s.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[s[0]].concat(n)}))}build(t){let e;Ws(t)&&(t=t[0]),t=t,this.cells.forEach(((n,r)=>{Ka(`RNNCell_${r}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const r=[];for(const a of e.cells)r.push(yi(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return Ys(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}Js(e)}}function Mu(t){const{ones:e,rate:n,training:r=!1,count:a=1}=t,s=()=>ms(e(),n),i=()=>bs(s,e,r);if(!a||a<=1)return f.keep(i().clone());return Array(a).fill(void 0).map(i).map((t=>f.keep(t.clone())))}Du.className="StackedRNNCells",f.serialization.registerClass(Du);var zu=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class Lu extends Tu{constructor(t){if(t.unroll)throw new aa("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new aa("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new Zs({ndim:5})]}call(t,e){return f.tidy((()=>{if(null!=this.cell.dropoutMask&&(f.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(f.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new ra("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:a})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return f.tidy((()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=f.zeros(a);return Array.isArray(e)?Array(e.length).fill(s):[s]}))}resetStates(t,e=!1){f.tidy((()=>{if(!this.stateful)throw new ea("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ra("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>f.zeros(a))):this.states_=[f.zeros(a)];else if(null==t)f.dispose(this.states_),null!=this.keptStates&&(f.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>f.zeros(a))):this.states_[0]=f.zeros(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new ra(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):f.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=a;if(!f.util.arraysEqual(n.shape,r))throw new ra(`State ${e} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>f.keep(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===e,u=t[o?3:2],c=t[o?4:3],l=ou(u,r[0],a,s[0],i[0]),d=ou(c,r[1],a,s[1],i[1]);return[...t.slice(0,2),...o?[n,l,d]:[l,d,n]]}}Lu.className="ConvRNN2D";class Pu extends Ru{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,wa(this.filters,"filters"),this.kernelSize=iu(n,2,"kernelSize"),this.kernelSize.forEach((t=>wa(t,"kernelSize"))),this.strides=iu(r||1,2,"strides"),this.strides.forEach((t=>wa(t,"strides"))),this.padding=a||"valid",Va(this.padding),this.dataFormat=s||"channelsLast",Ba(this.dataFormat),this.dilationRate=iu(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>wa(t,"dilationRate")))}build(t){var e;t=Gs(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new ra(`The channel dimension of the input should be defined. Found ${t[n]}`);const r=t[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends xs{apply(t,e){return is([n.apply([r]),f.ones([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return f.tidy((()=>{if(3!==t.length)throw new ra(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,r=t[0],a=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Mu({ones:()=>f.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(t,e,n)=>e&&e[n]?f.mul(e[n],t):t;let u=o(r,i,0),c=o(r,i,1),l=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Mu({ones:()=>f.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let p=o(a,h,0),m=o(a,h,1),b=o(a,h,2),g=o(a,h,3);const[y,x,O,v]=f.split(this.kernel.read(),4,3),[w,k,I,N]=this.useBias?f.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,w,this.padding),c=this.inputConv(c,x,k,this.padding),l=this.inputConv(l,O,I,this.padding),d=this.inputConv(d,v,N,this.padding);const[j,S,T,C]=f.split(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,j),m=this.recurrentConv(m,S),b=this.recurrentConv(b,T),g=this.recurrentConv(g,C);const $=this.recurrentActivation.apply(f.add(u,p)),E=this.recurrentActivation.apply(f.add(c,m)),A=f.add(f.mul(E,s),f.mul($,this.activation.apply(f.add(l,b)))),F=f.mul(this.recurrentActivation.apply(f.add(d,g)),this.activation.apply(A));return[F,F,A]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=zu(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const a=f.conv2d(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?fs(a,n,this.dataFormat):a}recurrentConv(t,e){return f.conv2d(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Pu.className="ConvLSTM2DCell",f.serialization.registerClass(Pu);class Bu extends Lu{constructor(t){const e=new Pu(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Bu.className="ConvLSTM2D",f.serialization.registerClass(Bu);class Vu extends ri{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return bs((()=>ms(n,this.rate,r,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Vu.className="Dropout",f.serialization.registerClass(Vu);class Wu extends Vu{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Wu.className="SpatialDropout1D",f.serialization.registerClass(Wu);class Uu extends ri{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,wa(this.units,"units"),this.activation=Go(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ra(t.kernelConstraint),this.biasConstraint=Ra(t.biasConstraint),this.kernelRegularizer=Qo(t.kernelRegularizer),this.biasRegularizer=Qo(t.biasRegularizer),this.activityRegularizer=Qo(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Gs(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Gs(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t),r=Ia(this.activation.getClassName());let a;return null!=r?a=ls(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=ls(n,this.kernel.read()),null!=this.bias&&(a=fs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const t={units:this.units,activation:Uo(this.activation),useBias:this.useBias,kernelInitializer:Ms(this.kernelInitializer),biasInitializer:Ms(this.biasInitializer),kernelRegularizer:Jo(this.kernelRegularizer),biasRegularizer:Jo(this.biasRegularizer),activityRegularizer:Jo(this.activityRegularizer),kernelConstraint:Aa(this.kernelConstraint),biasConstraint:Aa(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Uu.className="Dense",f.serialization.registerClass(Uu);class Ku extends ri{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Gs(t);for(const e of t.slice(1))if(null==e)throw new ra(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],Ya(t,1)]}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);let n=Ks(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new ra(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],Ya(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Ku.className="Flatten",f.serialization.registerClass(Ku);class Gu extends ri{constructor(t){super(t),this.supportsMasking=!0,this.activation=Go(t.activation)}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Uo(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Gu.className="Activation",f.serialization.registerClass(Gu);class Hu extends ri{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(f.tidy)((()=>{return t=Ks(t),e=t,n=this.n,Object(f.tidy)((()=>{if(2!==e.shape.length)throw new ra(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return us(ns(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Hu.className="RepeatVector",f.serialization.registerClass(Hu);class qu extends ri{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,s=null;for(let o=0;o<r.length;++o){const t=r[o];if(this.isUnknown(t)){if(null!==s)throw new ra("Can only specifiy one unknown dimension.");s=o}else a*=t}const i=Ya(t);if(null!==s){if(0===a||i%a!==0)throw new ra(n);r[s]=i/a}else if(i!==a)throw new ra(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}qu.className="Reshape",f.serialization.registerClass(qu);class Xu extends ri{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=ts(1,t.dims.length+1);if(!f.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Zs({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Gs(t)).slice();return this.dims.forEach(((n,r)=>{e[r+1]=t[n]})),e}call(t,e){return Object(f.transpose)(Ks(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Xu.className="Permute",f.serialization.registerClass(Xu);class Yu extends ri{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Ks(t);return Object(f.any)(Object(f.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t),r=Object(f.any)(Object(f.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Yu.className="Masking",f.serialization.registerClass(Yu);class Ju extends ri{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(la(t.inputLength))}this.inputDim=t.inputDim,wa(this.inputDim,"inputDim"),this.outputDim=t.outputDim,wa(this.outputDim,"outputDim"),this.embeddingsInitializer=zs(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Qo(t.embeddingsRegularizer),this.activityRegularizer=Qo(t.activityRegularizer),this.embeddingsConstraint=Ra(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(f.tidy)((()=>this.maskZero?(t=Ks(t),Object(f.notEqual)(t,Object(f.zerosLike)(t))):null))}computeOutputShape(t){if(t=Gs(t),null==this.inputLength)return[...t,this.outputDim];const e=la(this.inputLength);if(e.length!==t.length-1)throw new ra(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let r=0;r<e.length;++r){const a=e[r],s=t[r+1];if(null!=a&&null!=s&&a!==s)throw new ra(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==a&&(e[n]=s),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);let n=Ks(t);"int32"!==n.dtype&&(n=es(n,"int32"));return ds(this.embeddings.read(),n.as1D()).reshape(Gs(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ms(this.embeddingsInitializer),embeddingsRegularizer:Jo(this.embeddingsRegularizer),activityRegularizer:Jo(this.activityRegularizer),embeddingsConstraint:Aa(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Ju.className="Embedding",f.serialization.registerClass(Ju);class Zu extends ri{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new aa}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],s=e[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ra("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Gs(t)]),(t=t).length<2)throw new ra(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=ya(e),e.length>1)throw new ra(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map((t=>t.length));-1===t.indexOf(null)&&1===ya(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(f.tidy)((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const r=Qa(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=ns(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],a=t.slice(1).concat([r]);let i=s.reshape([r].concat(Ya(t.slice(1))));i=f.transpose(i,[1,0]),i=i.reshape(a),e.push(i),n=!0}else if(t>1){const r=ts(1,t).concat([0]);e.push(f.transpose(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const a=r.rank;if(n)if(null==a){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=f.transpose(r.reshape([-1,e]),[1,0]).reshape(n)}else if(a>1){const t=[a-1].concat(ts(0,a-1));r=f.transpose(r,t)}return r}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=ya(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return f.tidy((()=>{if(null==e)return null;if(!Array.isArray(e))throw new ra("`mask` should be an Array");if(!Array.isArray(t))throw new ra("`inputs` should be an Array");if(e.length!==t.length)throw new ra(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:f.expandDims(t,0))))[0];for(let t=1;t<e.length-1;++t)n=f.logicalAnd(n,e[t]);return n}))}}class Qu extends Zu{constructor(t){super(t)}mergeFunction(t){return Object(f.tidy)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=f.add(e,t[n]);return e}))}}Qu.className="Add",f.serialization.registerClass(Qu);class tc extends Zu{constructor(t){super(t)}mergeFunction(t){return Object(f.tidy)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=f.mul(e,t[n]);return e}))}}tc.className="Multiply",f.serialization.registerClass(tc);class ec extends Zu{constructor(t){super(t)}mergeFunction(t){return Object(f.tidy)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=f.add(e,t[n]);return f.mul(1/t.length,e)}))}}ec.className="Average",f.serialization.registerClass(ec);class nc extends Zu{constructor(t){super(t)}mergeFunction(t){return Object(f.tidy)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=f.maximum(e,t[n]);return e}))}}nc.className="Maximum",f.serialization.registerClass(nc);class rc extends Zu{constructor(t){super(t)}mergeFunction(t){return Object(f.tidy)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=f.minimum(e,t[n]);return e}))}}rc.className="Minimum",f.serialization.registerClass(rc);class ac extends Zu{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new ra("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let a=!1;for(const t of n)if(f.util.arraysEqual(t,e)){a=!0;break}a||n.push(e)}if(n.length>1)throw new ra("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(f.tidy)((()=>is(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new ra("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new ra("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new ra("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new ra(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return f.tidy((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(f.onesLike(t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(f.expandDims(e[s],-1)):r.push(e[s]);const a=f.concat(r,this.axis);return f.all(a,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function sc(t,e){for(;t<0;)t+=e;return t}ac.className="Concatenate",f.serialization.registerClass(ac);class ic extends Zu{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){f.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new aa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new ra(`Dimension incompatibility: ${e[r[0]]} !== ${n[r[1]]}`)}mergeFunction(t){if(2!==t.length)throw new ra(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>sc(e,t[n].shape.length))):[sc(this.axes,n.shape.length),sc(this.axes,r.shape.length)],this.normalize&&(n=xi(n,e[0]),r=xi(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new aa("batchDot is not implemented for tensors of 4D or higher rank yet");if(f.util.assert(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),f.util.assert(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new aa("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,a=e.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return f.tidy((()=>{let n,i;if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)i=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;i=t.matMul(e,n,r)}if(n>0){let t;t=r>a?r+a-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);i=i.squeeze(e)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[sc(this.axes,t.length),sc(this.axes,e.length)],n}computeOutputShape(t){f.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new aa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ic.className="Dot",f.serialization.registerClass(ic);class oc extends ri{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t);return bs((()=>cs(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}oc.className="GaussianNoise",f.serialization.registerClass(oc);class uc extends ri{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e);const n=Ks(t);if(this.rate>0&&this.rate<1){return bs((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(cs(n.shape,1,t))}),(()=>n),e.training||!1)}return n}))}}uc.className="GaussianDropout",f.serialization.registerClass(uc);class cc extends ri{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Ks(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(f.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return bs((()=>{const e=Ks(t),r=-1.7580993408473766;let a=Object(f.greaterEqual)(Object(f.randomUniform)(n),this.rate);a=es(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return e.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>Ks(t)),e.training||!1)}return t}))}}function lc(t,e,n,r,a,s=.001){let i;if(2===t.rank)i=f.batchNorm2d(t,e,n,r,a,s);else if(3===t.rank)i=f.batchNorm3d(t,e,n,r,a,s);else{if(4!==t.rank)throw new aa(`batchNormalization is not implemented for array of rank ${t.rank} yet`);i=f.batchNorm4d(t,e,n,r,a,s)}return i}function dc(t,e,n,r,a=.001){return f.util.arraysEqual(r.slice().sort(),ts(0,t.rank-1))?function(t,e,n,r,a=.001){return Object(f.tidy)((()=>{const s=f.moments(t,r),i=s.mean,o=s.variance;return[lc(t,i,o,n,e,a),i,o]}))}(t,e,n,r,a):function(t,e,n,r,a=.001){return Object(f.tidy)((()=>{const s=f.moments(t,r),i=s.mean,o=s.variance,u=[];for(const e of ts(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const c=i.reshape(u),l=o.reshape(u),d=null==e?null:e.reshape(u),h=null==n?null:n.reshape(u);return[lc(t,c,l,h,d,a),i,o]}))}(t,e,n,r,a)}cc.className="AlphaDropout",f.serialization.registerClass(cc);class hc extends ri{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=zs(t.betaInitializer||"zeros"),this.gammaInitializer=zs(t.gammaInitializer||"ones"),this.movingMeanInitializer=zs(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=zs(t.movingVarianceInitializer||"ones"),this.betaConstraint=Ra(t.betaConstraint),this.gammaConstraint=Ra(t.gammaConstraint),this.betaRegularizer=Qo(t.betaRegularizer),this.gammaRegularizer=Qo(t.gammaRegularizer)}build(t){t=Gs(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new ra(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new Zs({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(f.tidy)((()=>{const n=null!=e.training&&e.training,r=Ks(t),a=r.shape,s=a.length,i=ts(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=ia(1,s);u[o]=a[o];const c=i.slice();c.sort();const l=!f.util.arraysEqual(c,ts(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return lc(r,t,e,n,a,this.epsilon)}return lc(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=dc(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(t,e,n)=>{f.tidy((()=>{const r=1-n,a=t.read(),s=a.sub(e).mul(r);t.write(a.sub(s))}))};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ms(this.betaInitializer),gammaInitializer:Ms(this.gammaInitializer),movingMeanInitializer:Ms(this.movingMeanInitializer),movingVarianceInitializer:Ms(this.movingVarianceInitializer),betaRegularizer:Jo(this.betaRegularizer),gammaRegularizer:Jo(this.gammaRegularizer),betaConstraint:Aa(this.betaConstraint),gammaConstraint:Aa(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}hc.className="BatchNormalization",f.serialization.registerClass(hc);class pc extends ri{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=zs(t.betaInitializer||"zeros"),this.gammaInitializer=zs(t.gammaInitializer||"ones"),this.betaRegularizer=Qo(t.betaRegularizer),this.gammaRegularizer=Qo(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Gs(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ya(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(t,e){const n=Ks(t),r=n.shape,a=r.length;return Object(f.tidy)((()=>{let{mean:t,variance:e}=Object(f.moments)(n,this.axis,!0);const s=ia(1,a);for(const n of this.axis)s[n]=r[n];const i=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(s):t;let o=i(this.gamma.read()),u=i(this.beta.read());const c=[],l=[];for(let n=0;n<a;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),l.push(1)):(c.push(1),l.push(r[n]));return t=t.tile(c),e=e.tile(c),o=o.tile(l),u=u.tile(l),lc(n,t,e,u,o,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ms(this.betaInitializer),gammaInitializer:Ms(this.gammaInitializer),betaRegularizer:Jo(this.betaRegularizer),gammaRegularizer:Jo(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}pc.className="LayerNormalization",f.serialization.registerClass(pc);class fc extends ri{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new ra(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new ra(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new ra(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new Zs({ndim:4})]}computeOutputShape(t){let e,n;return t=Gs(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(f.tidy)((()=>{return e=Ks(t),n=this.padding,r=this.dataFormat,Object(f.tidy)((()=>{if(4!==e.rank)throw new ra(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ra("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ra(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],f.pad(e,t)}));var e,n,r}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function mc(t,e,n,r,a,s){return Object(f.tidy)((()=>{let i;Ba(a),Wa(s),Va(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=cu(t,a);const o="same"===r?"same":"valid";return i="max"===s?f.maxPool(t,e,n,o):f.avgPool(t,e,n,o),"channelsFirst"===a&&(i=f.transpose(i,[0,3,1,2])),i}))}function bc(t,e,n,r,a,s){return Object(f.tidy)((()=>{let i;Ba(a),Wa(s),Va(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),t=lu(t,a);const o="same"===r?"same":"valid";return i="max"===s?f.maxPool3d(t,e,n,o):f.avgPool3d(t,e,n,o),"channelsFirst"===a&&(i=f.transpose(i,[0,4,1,2,3])),i}))}fc.className="ZeroPadding2D",f.serialization.registerClass(fc);class gc extends ri{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new ra(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(wa(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new ra(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}wa(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,Va(this.padding),this.inputSpec=[new Zs({ndim:3})]}computeOutputShape(t){const e=ou((t=Gs(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(f.tidy)((()=>{this.invokeCallHook(t,e),t=ns(Ks(t),2);const n=this.poolingFunction(Ks(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return f.squeeze(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class yc extends gc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),mc(t,e,n,r,a,"max")}}yc.className="MaxPooling1D",f.serialization.registerClass(yc);class xc extends gc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),mc(t,e,n,r,a,"avg")}}xc.className="AveragePooling1D",f.serialization.registerClass(xc);class Oc extends ri{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new ra(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];wa(this.poolSize,"poolSize"),wa(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ba(this.dataFormat),Va(this.padding),this.inputSpec=[new Zs({ndim:4})]}computeOutputShape(t){t=Gs(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=ou(e,this.poolSize[0],this.padding,this.strides[0]),n=ou(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(f.tidy)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ks(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class vc extends Oc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),mc(t,e,n,r,a,"max")}}vc.className="MaxPooling2D",f.serialization.registerClass(vc);class wc extends Oc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),mc(t,e,n,r,a,"avg")}}wc.className="AveragePooling2D",f.serialization.registerClass(wc);class kc extends ri{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new ra(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];wa(this.poolSize,"poolSize"),wa(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ba(this.dataFormat),Va(this.padding),this.inputSpec=[new Zs({ndim:5})]}computeOutputShape(t){t=Gs(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=ou(e,this.poolSize[0],this.padding,this.strides[0]),n=ou(n,this.poolSize[1],this.padding,this.strides[1]),r=ou(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(f.tidy)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Ks(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Ic extends kc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),bc(t,e,n,r,a,"max")}}Ic.className="MaxPooling3D",f.serialization.registerClass(Ic);class Nc extends kc{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return Ba(a),Va(r),bc(t,e,n,r,a,"avg")}}Nc.className="AveragePooling3D",f.serialization.registerClass(Nc);class jc extends ri{constructor(t){super(t),this.inputSpec=[new Zs({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new aa}}class Sc extends jc{constructor(t){super(t||{})}call(t,e){return Object(f.tidy)((()=>{const e=Ks(t);return f.mean(e,1)}))}}Sc.className="GlobalAveragePooling1D",f.serialization.registerClass(Sc);class Tc extends jc{constructor(t){super(t||{})}call(t,e){return Object(f.tidy)((()=>{const e=Ks(t);return f.max(e,1)}))}}Tc.className="GlobalMaxPooling1D",f.serialization.registerClass(Tc);class Cc extends ri{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ba(this.dataFormat),this.inputSpec=[new Zs({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new aa}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $c extends Cc{call(t,e){return Object(f.tidy)((()=>{const e=Ks(t);return"channelsLast"===this.dataFormat?f.mean(e,[1,2]):f.mean(e,[2,3])}))}}$c.className="GlobalAveragePooling2D",f.serialization.registerClass($c);class Ec extends Cc{call(t,e){return Object(f.tidy)((()=>{const e=Ks(t);return"channelsLast"===this.dataFormat?f.max(e,[1,2]):f.max(e,[2,3])}))}}Ec.className="GlobalMaxPooling2D",f.serialization.registerClass(Ec);class Ac extends ri{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const r=yi(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class Fc extends Ac{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Gs(t)).length<3)throw new ra(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Gs(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(f.tidy)((()=>Su(((t,n)=>[Ks(this.layer.call(t,e)),[]]),t=Ks(t),[],!1,null,null,!1,!0)[1]))}}Fc.className="TimeDistributed",f.serialization.registerClass(Fc);class Rc extends Ac{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=yi(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=yi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,Oa(La,"BidirectionalMergeMode",a),t.weights)throw new aa("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):ca(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=ju(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const s=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new ra("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,s.push(...n);const r=n.map((t=>new Zs({shape:t.shape})));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),i.push(...r)}if(null!=r)throw new aa("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Qs;for(const u of s)if(u instanceof Qs!==o)throw new ra("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,e);return this.inputSpec=a,o}return super.apply(t,e)}call(t,e){return Object(f.tidy)((()=>{const n=e.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:s})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=f.reverse(a,1)),"concat"===this.mergeMode?i=is([r,a]):"sum"===this.mergeMode?i=f.add(r,a):"ave"===this.mergeMode?i=f.mul(.5,f.add(r,a)):"mul"===this.mergeMode?i=f.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Ka(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Ka(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=yi(e.layer);if(delete e.layer,null!=e.numConstants)throw new aa("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}Rc.className="Bidirectional",f.serialization.registerClass(Rc);var _c=n("+Luo"),Dc=n("Umw7");class Mc{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return Object(Dc.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(Dc.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(_c.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(_c.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(_c.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(_c.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(_c.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(_c.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(_c.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(_c.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(_c.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(_c.d)(this.node.rawAttrs,t,e)}return e}}var zc=n("0wNd"),Lc=n("SFB9");var Pc=n("B3db"),Bc=n("JLAb"),Vc=n("17CO");function Wc(t,e,n=""){if("number"!==typeof t&&"number"!==typeof e){f.util.assert(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let r=0;r<t.length;r++){const a=t[r],s=e[r];f.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${t} and ${e} must match`))}}}function Uc(t){return"number"!==typeof t&&!t.some((t=>t<0))}function Kc(t,e,n){let r=Gc(t,n);const a=!Uc(r);if(a&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&e.forEach((t=>{r=Gc(t.shape,r)})),!Uc(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Gc(t,e){if("number"===typeof t)return e;if("number"===typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const a=t[r],s=e[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=a>=0?a:s}return n}class Hc{constructor(t,e,n,r,a,s,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(f.scalar)(0),Object(f.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Wc(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Object(f.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(f.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return Wc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(f.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Object(f.tensor)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return Wc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(f.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,Object(f.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:e.size/n,s=[];Object(f.tidy)((()=>{e=Object(f.reshape)(e,[1,n,a]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,t[n],a];s[n]=Object(f.reshape)(Object(f.slice)(e,i,o),this.elementShape)}return s}));const i=[];for(let o=0;o<t.length;o++)i[o]=o;this.writeMany(i,s)}}class qc{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);Wc(e,t.shape,"TensorList shape mismatch: "),Object(f.keep)(t)})),this.idTensor=Object(f.scalar)(0),this.maxNumElements=r,Object(f.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new qc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Wc(t,this.elementShape,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,t);return Object(f.tidy)((()=>{const t=this.tensors.map((t=>Object(f.reshape)(t,r)));return Object(f.stack)(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Kc(this.elementShape,this.tensors,t),r=this.tensors.pop();return Wc(r.shape,t,"TensorList shape mismatch: "),Object(f.reshape)(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Wc(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(f.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Wc(this.tensors[t].shape,e,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,e);return Object(f.reshape)(this.tensors[t],r)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Wc(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(f.keep)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Wc(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const r=Kc(this.elementShape,this.tensors,n);return 0===t.length?Object(f.tensor)([],[0].concat(r)):Object(f.tidy)((()=>{const e=t.map((t=>Object(f.reshape)(this.tensors[t],r)));return Object(f.stack)(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Wc(this.elementShape,e,"TensorList shape mismatch: ");const n=Kc(this.elementShape,this.tensors,e);return 0===this.size()?Object(f.tensor)([],[0].concat(n)):Object(f.tidy)((()=>{const t=this.tensors.map((t=>Object(f.reshape)(t,n)));return Object(f.concat)(t,0)}))}}const Xc=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(Dc.d)("thenBranch",t,e,n),a=Object(Dc.d)("elseBranch",t,e,n),s=Object(Dc.d)("cond",t,e,n),i=Object(Dc.d)("args",t,e,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Dc.d)("body",t,e,n),a=Object(Dc.d)("cond",t,e,n),s=Object(Dc.d)("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((t=>t.id));let u=await i[0].data();i.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||t.dispose()}));let c=s;for(;u[0];){const t=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const e=c.map((t=>t.id));t.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((t=>{t.kept||-1!==o.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return c}case"LoopCond":{const r=Object(Dc.d)("pred",t,e,n);return[Object(Dc.a)(r)]}case"Switch":{const r=Object(Dc.d)("pred",t,e,n);let a=Object(Dc.d)("data",t,e,n);return a.kept||(a=Object(Dc.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==Object(Dc.e)(t,e,n)));if(r){const t=Object(Dc.e)(r,e,n);return[Object(Dc.a)(t)]}return}case"Enter":{const r=Object(Dc.d)("frameName",t,e,n),a=Object(Dc.d)("tensor",t,e,n);return n.enterFrame(r),[Object(Dc.a)(a)]}case"Exit":{const r=Object(Dc.d)("tensor",t,e,n);return n.exitFrame(),[Object(Dc.a)(r)]}case"NextIteration":{const r=Object(Dc.d)("tensor",t,e,n);return n.nextIteration(),[Object(Dc.a)(r)]}case"TensorArrayV3":{const r=Object(Dc.d)("size",t,e,n),a=Object(Dc.d)("dtype",t,e,n),s=Object(Dc.d)("elementShape",t,e,n),i=Object(Dc.d)("dynamicSize",t,e,n),o=Object(Dc.d)("clearAfterRead",t,e,n),u=Object(Dc.d)("identicalElementShapes",t,e,n),c=Object(Dc.d)("name",t,e,n),l=new Hc(c,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,Object(f.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=Object(Dc.d)("index",t,e,n),s=Object(Dc.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=Object(Dc.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=Object(Dc.d)("indices",t,e,n),s=Object(Dc.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=Object(Dc.d)("indices",t,e,n),s=Object(Dc.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),s=Object(Dc.d)("dtype",t,e,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=Object(Dc.d)("tensor",t,e,n),s=Object(Dc.d)("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return[Object(f.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Dc.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("index",t,e,n),s=Object(Dc.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("index",t,e,n),s=Object(Dc.d)("elementShape",t,e,n),i=Object(Dc.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Dc.d)("indices",t,e,n),a=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const a=Math.max(...e);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new qc([],n,t.dtype,r),i=Object(f.unstack)(t,0);return e.forEach(((t,e)=>{s.setItem(t,i[e])})),s}(Object(Dc.d)("tensor",t,e,n),r,Object(Dc.d)("elementShape",t,e,n),Object(Dc.d)("numElements",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(Dc.d)("elementShape",t,e,n),a=Object(Dc.d)("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=function(t,e,n){return new qc([],t,e,n)}(r,a,Object(Dc.d)(s,t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("indices",t,e,n),s=Object(Dc.d)("elementShape",t,e,n),i=Object(Dc.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("elementShape",t,e,n),s=Object(Dc.d)("elementDType",t,e,n),i=Object(Dc.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);Wc(t.shape.slice(1),e,"TensorList shape mismatch: ");const a=Object(f.unstack)(t);return new qc(a,e,r)}(Object(Dc.d)("tensor",t,e,n),Object(Dc.d)("elementShape",t,e,n),Object(Dc.d)("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(Dc.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),s=Object(Dc.d)("dtype",t,e,n),i=Object(Dc.d)("elementShape",t,e,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("tensor",t,e,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(Dc.d)("tensorListId",t,e,n),a=Object(Dc.d)("elementShape",t,e,n),s=Object(Dc.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Object(Dc.d)("tensor",t,e,n),a=Object(Dc.d)("elementShape",t,e,n),s=function(t,e,n){let r=0;const a=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const s=Gc(t.shape.slice(1),n),i=0===r?0:t.size/r,o=Object(f.tidy)((()=>{const n=[];t=Object(f.reshape)(t,[1,r,i]);for(let r=0;r<e.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,e[r],i];n[r]=Object(f.reshape)(Object(f.slice)(t,o,u),s)}return t.dispose(),n})),u=new qc([],n,t.dtype,e.length);for(let c=0;c<o.length;c++)u.setItem(c,o[c]);return u}(r,Object(Dc.d)("lengths",t,e,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};var Yc=n("EysY"),Jc=n("FZCF"),Zc=n("i8k8"),Qc=n("ulO0"),tl=n("U/2n");function el(t,e,n){const[r,a]=Object(Dc.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=Object(Dc.d)("numArgs",t,e,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Object(Dc.d)("strides",t,e,n),l=Object(Dc.c)(t,e,n),d=Object(Dc.d)("dataFormat",t,e,n).toUpperCase(),h=Object(Dc.d)("dilations",t,e,n),[p,f]=Object(Dc.d)("args",t,e,n);return{stride:c,pad:l,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:a,leakyreluAlpha:Object(Dc.d)("leakyreluAlpha",t,e,n)}}var nl=n("RrjA"),rl=n("WJRb"),al=n("Pvz5"),sl=n("hinG"),il=n("hNYx"),ol=n("fmoR");var ul=n("p4Cv"),cl=n("90yW");function ll(t,e,n){return{boxes:Object(Dc.d)("boxes",t,e,n),scores:Object(Dc.d)("scores",t,e,n),maxOutputSize:Object(Dc.d)("maxOutputSize",t,e,n),iouThreshold:Object(Dc.d)("iouThreshold",t,e,n),scoreThreshold:Object(Dc.d)("scoreThreshold",t,e,n),softNmsSigma:Object(Dc.d)("softNmsSigma",t,e,n)}}var dl=n("lg8H");class hl{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(f.scalar)(0),this.tensorMap=new Map,Object(f.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return w.a(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),Object(f.tidy)((()=>{const t=Object(f.unstack)(e),r=n.length,a=t.length;f.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let e=0;e<r;e++){const r=n[e],a=t[e];Object(f.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(f.tidy)((()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,e);t.push(s)}return Object(f.stack)(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}var pl=n("dauL");var fl=n("vGLV");var ml=n("BMSg"),bl=n("LyxI");var gl=n("i/oj"),yl=n("ukBL");function xl(t,e,n,r){const a=((t,e,n)=>{switch(t.category){case"arithmetic":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[M.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"AddN":return[Lc.a(Object(Dc.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[jr.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Mul":return[g.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"RealDiv":case"Div":return[O.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"DivNoNan":return[tr.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"FloorDiv":return[ir.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Sub":return[N.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Minimum":return[Ir.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Maximum":return[jn.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Pow":return[Ee.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"SquaredDifference":return[Gr.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[En.a(Object(Dc.d)("x",t,e,n))];case"Acos":return[Fn.a(Object(Dc.d)("x",t,e,n))];case"Acosh":return[Rn.a(Object(Dc.d)("x",t,e,n))];case"Asin":return[Ln.a(Object(Dc.d)("x",t,e,n))];case"Asinh":return[Pn.a(Object(Dc.d)("x",t,e,n))];case"Atan":return[Bn.a(Object(Dc.d)("x",t,e,n))];case"Atan2":return[Vn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("y",t,e,n))];case"Atanh":return[Wn.a(Object(Dc.d)("x",t,e,n))];case"Ceil":return[Hn.a(Object(Dc.d)("x",t,e,n))];case"Complex":return[Pc.a(Object(Dc.d)("real",t,e,n),Object(Dc.d)("imag",t,e,n))];case"Cos":return[Je.a(Object(Dc.d)("x",t,e,n))];case"Cosh":return[Qe.a(Object(Dc.d)("x",t,e,n))];case"Elu":return[nr.a(Object(Dc.d)("x",t,e,n))];case"Erf":return[rr.a(Object(Dc.d)("x",t,e,n))];case"Exp":return[Ft.a(Object(Dc.d)("x",t,e,n))];case"Expm1":return[ar.a(Object(Dc.d)("x",t,e,n))];case"Floor":return[Oe.a(Object(Dc.d)("x",t,e,n))];case"Log":return[$e.a(Object(Dc.d)("x",t,e,n))];case"Log1p":return[gr.a(Object(Dc.d)("x",t,e,n))];case"Imag":return[Bc.a(Object(Dc.d)("x",t,e,n))];case"Neg":return[v.a(Object(Dc.d)("x",t,e,n))];case"Reciprocal":return[Rr.a(Object(Dc.d)("x",t,e,n))];case"Real":return[Vc.a(Object(Dc.d)("x",t,e,n))];case"Relu":return[_r.a(Object(Dc.d)("x",t,e,n))];case"Round":return[Pr.a(Object(Dc.d)("x",t,e,n))];case"Selu":return[Br.a(Object(Dc.d)("x",t,e,n))];case"Sigmoid":return[sn.a(Object(Dc.d)("x",t,e,n))];case"Sin":return[Ot.a(Object(Dc.d)("x",t,e,n))];case"Sign":return[Wr.a(Object(Dc.d)("x",t,e,n))];case"Sinh":return[wt.a(Object(Dc.d)("x",t,e,n))];case"Softplus":return[Kr.a(Object(Dc.d)("x",t,e,n))];case"Sqrt":return[k.a(Object(Dc.d)("x",t,e,n))];case"Square":return[I.a(Object(Dc.d)("x",t,e,n))];case"Tanh":return[Yr.a(Object(Dc.d)("x",t,e,n))];case"Tan":return[Xr.a(Object(Dc.d)("x",t,e,n))];case"ClipByValue":return[qn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("clipValueMin",t,e,n),Object(Dc.d)("clipValueMax",t,e,n))];case"Relu6":return[Dr.a(Object(Dc.d)("x",t,e,n))];case"Rsqrt":return[Pt.a(Object(Dc.e)(t.inputNames[0],e,n))];case"Prod":return[Fr.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("axes",t,e,n))];case"LeakyRelu":return[hr.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("alpha",t,e,n))];case"Prelu":return[Ar.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("alpha",t,e,n))];case"IsNan":return[dr.a(Object(Dc.e)(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return Xc(t,e,n);case"convolution":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(Dc.d)("stride",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("dataFormat",t,e,n).toUpperCase(),i=Object(Dc.d)("dilation",t,e,n);return[Xn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("filter",t,e,n),r,a,s,i)]}case"Conv2D":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.c)(t,e,n),s=Object(Dc.d)("dataFormat",t,e,n).toUpperCase(),i=Object(Dc.d)("dilations",t,e,n);return[mt.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("filter",t,e,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=el(t,e,n);return[Yc.qb.conv2d({x:Object(Dc.d)("x",t,e,n),filter:Object(Dc.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=el(t,e,n);return[Yc.qb.depthwiseConv2d({x:Object(Dc.d)("x",t,e,n),filter:Object(Dc.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Dc.d)("outputShape",t,e,n),a=Object(Dc.d)("strides",t,e,n),s=Object(Dc.c)(t,e,n);return[Yn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("filter",t,e,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.c)(t,e,n),s=Object(Dc.d)("dilations",t,e,n),i=Object(Dc.d)("dataFormat",t,e,n).toUpperCase();return[Zn.a(Object(Dc.d)("input",t,e,n),Object(Dc.d)("filter",t,e,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("dataFormat",t,e,n).toUpperCase(),i=Object(Dc.d)("dilations",t,e,n);return[Jc.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("filter",t,e,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("kernelSize",t,e,n);return[Un.a(Object(Dc.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("kernelSize",t,e,n);return[Or.a(Object(Dc.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("kernelSize",t,e,n),i=Object(Dc.d)("includeBatchInIndex",t,e,n),{result:o,indexes:u}=Zc.a(Object(Dc.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("kernelSize",t,e,n);return[Qc.a(Object(Dc.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("kernelSize",t,e,n);return[tl.a(Object(Dc.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(Dc.d)("strides",t,e,n),a=Object(Dc.d)("pad",t,e,n),s=Object(Dc.d)("dilations",t,e,n),i=r[1],o=r[2],u=s[1],c=s[2];return[Qn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("filter",t,e,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(Dc.d)("shape",t,e,n),a=Object(Dc.d)("dtype",t,e,n),s=Object(Dc.d)("value",t,e,n);return[nl.a(r,s,a)]}case"LinSpace":{const r=Object(Dc.d)("start",t,e,n),a=Object(Dc.d)("stop",t,e,n),s=Object(Dc.d)("num",t,e,n);return[rl.a(r,a,s)]}case"Multinomial":{const r=Object(Dc.d)("logits",t,e,n),a=Object(Dc.d)("numSamples",t,e,n),s=Object(Dc.d)("seed",t,e,n);return[al.a(r,a,s)]}case"OneHot":{const r=Object(Dc.d)("indices",t,e,n),a=Object(Dc.d)("depth",t,e,n),s=Object(Dc.d)("onValue",t,e,n),i=Object(Dc.d)("offValue",t,e,n);return[Cr.a(r,a,s,i)]}case"Ones":return[fe.a(Object(Dc.d)("shape",t,e,n),Object(Dc.d)("dtype",t,e,n))];case"OnesLike":return[$r.a(Object(Dc.d)("x",t,e,n))];case"RandomUniform":return[sl.a(Object(Dc.d)("shape",t,e,n),Object(Dc.d)("minval",t,e,n),Object(Dc.d)("maxval",t,e,n),Object(Dc.d)("dtype",t,e,n))];case"Range":{const r=Object(Dc.d)("start",t,e,n),a=Object(Dc.d)("stop",t,e,n),s=Object(Dc.d)("step",t,e,n);return[il.a(r,a,s,Object(Dc.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(Dc.d)("shape",t,e,n),a=Object(Dc.d)("mean",t,e,n),s=Object(Dc.d)("stdDev",t,e,n),i=Object(Dc.d)("seed",t,e,n);return[ol.a(r,a,s,Object(Dc.d)("dtype",t,e,n),i)]}case"Zeros":return[Ie.a(Object(Dc.d)("shape",t,e,n),Object(Dc.d)("dtype",t,e,n))];case"ZerosLike":return[F.a(Object(Dc.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=ll(t,e,n),c=await Yc.xb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=ll(t,e,n),u=Object(Dc.d)("padToMaxOutputSize",t,e,n),c=await Yc.xb.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=ll(t,e,n);return[await Yc.xb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=b.a(Object(Dc.d)("condition",t,e,n),"bool"),a=[await ul.a(r)];return r.dispose(),a}case"ListDiff":return cl.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("k",t,e,n),s=Object(Dc.d)("sorted",t,e,n),i=Jr.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(Dc.d)("x",t,e,n),a=Zr.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("axis",t,e,n),s=Zr.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(Dc.d)("images",t,e,n),a=Object(Dc.d)("size",t,e,n),s=Object(Dc.d)("alignCorners",t,e,n),i=Object(Dc.d)("halfPixelCenters",t,e,n);return[Yc.xb.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Object(Dc.d)("images",t,e,n),a=Object(Dc.d)("size",t,e,n),s=Object(Dc.d)("alignCorners",t,e,n),i=Object(Dc.d)("halfPixelCenters",t,e,n);return[Yc.xb.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Object(Dc.d)("image",t,e,n),a=Object(Dc.d)("boxes",t,e,n),s=Object(Dc.d)("boxInd",t,e,n),i=Object(Dc.d)("cropSize",t,e,n),o=Object(Dc.d)("method",t,e,n),u=Object(Dc.d)("extrapolationValue",t,e,n);return[Yc.xb.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(Dc.d)("default",t,e,n);return[Object(Dc.e)(t.name,e,n)||r];case"Placeholder":return[Object(Dc.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(Dc.d)("x",t,e,n);return[Object(Dc.a)(r)]}case"IdentityN":return Object(Dc.d)("x",t,e,n).map((t=>Object(Dc.a)(t)));case"Snapshot":const a=Object(Dc.d)("x",t,e,n);return[Object(Dc.a)(a)];case"Shape":return[dl.a(Object(Dc.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(Dc.d)("x",t,e,n).map((t=>dl.a(t.shape)));case"Size":return[w.a(Object(Dc.d)("x",t,e,n).size,"int32")];case"Rank":return[w.a(Object(Dc.d)("x",t,e,n).rank,"int32")];case"NoOp":return[w.a(1)];case"Print":const s=Object(Dc.d)("x",t,e,n),i=Object(Dc.d)("data",t,e,n),o=Object(Dc.d)("message",t,e,n),u=Object(Dc.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Equal":return[se.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"NotEqual":return[Tr.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Greater":return[Zt.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"GreaterEqual":return[rt.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Less":return[ue.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"LessEqual":return[at.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"LogicalAnd":return[st.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"LogicalNot":return[Ke.a(Object(Dc.d)("a",t,e,n))];case"LogicalOr":return[yr.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];case"Select":case"SelectV2":return[it.a(Object(Dc.d)("condition",t,e,n),Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Y.a(Object(Dc.d)("a",t,e,n),Object(Dc.d)("b",t,e,n),Object(Dc.d)("transposeA",t,e,n),Object(Dc.d)("transposeB",t,e,n))];case"Einsum":return[pl.a(Object(Dc.d)("equation",t,e,n),...Object(Dc.d)("tensors",t,e,n))];case"Transpose":return[jt.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("perm",t,e,n))];case"_FusedMatMul":const[r,a]=Object(Dc.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,o=Object(Dc.d)("numArgs",t,e,n),u=Object(Dc.d)("leakyreluAlpha",t,e,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(Dc.d)("args",t,e,n);return[Yc.qb.matMul({a:Object(Dc.d)("a",t,e,n),b:Object(Dc.d)("b",t,e,n),transposeA:Object(Dc.d)("transposeA",t,e,n),transposeB:Object(Dc.d)("transposeB",t,e,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Kn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("mean",t,e,n),Object(Dc.d)("variance",t,e,n),Object(Dc.d)("offset",t,e,n),Object(Dc.d)("scale",t,e,n),Object(Dc.d)("epsilon",t,e,n))];case"LRN":return[pr.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("radius",t,e,n),Object(Dc.d)("bias",t,e,n),Object(Dc.d)("alpha",t,e,n),Object(Dc.d)("beta",t,e,n))];case"Softmax":return[Ur.a(Object(Dc.d)("x",t,e,n))];case"LogSoftmax":return[mr.a(Object(Dc.d)("x",t,e,n))];case"SparseToDense":return[fl.a(Object(Dc.d)("sparseIndices",t,e,n),Object(Dc.d)("outputShape",t,e,n),Object(Dc.d)("sparseValues",t,e,n),Object(Dc.d)("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[vr.a(Object(Dc.d)("x",t,e,n),r,a)]}case"Mean":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[wr.a(Object(Dc.d)("x",t,e,n),r,a)]}case"Min":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[kr.a(Object(Dc.d)("x",t,e,n),r,a)]}case"Sum":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[$.a(Object(Dc.d)("x",t,e,n),r,a)]}case"All":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[_n.a(Object(Dc.d)("x",t,e,n),r,a)]}case"Any":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[Dn.a(Object(Dc.d)("x",t,e,n),r,a)]}case"ArgMax":{const r=Object(Dc.d)("axis",t,e,n);return[Mn.a(Object(Dc.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(Dc.d)("axis",t,e,n);return[zn.a(Object(Dc.d)("x",t,e,n),r)]}case"Prod":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("keepDims",t,e,n);return[Fr.a(Object(Dc.d)("x",t,e,n),r,a)]}case"Cumsum":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("exclusive",t,e,n),s=Object(Dc.d)("reverse",t,e,n);return[Nt.a(Object(Dc.d)("x",t,e,n),r,a,s)]}case"Bincount":const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("weights",t,e,n),s=Object(Dc.d)("size",t,e,n);return[ml.a(r,a,s)];case"DenseBincount":{const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("weights",t,e,n),s=Object(Dc.d)("size",t,e,n),i=Object(Dc.d)("binaryOutput",t,e,n);return[bl.a(r,a,s,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(Dc.d)("n",t,e,n),a=Object(Dc.d)("axis",t,e,n);let s=Object(Dc.d)("tensors",t,e,n);return s=s.slice(0,r),[ln.a(s,a)]}case"Gather":{const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("indices",t,e,n);return[Nn.a(r,b.a(a,"int32"),0)]}case"GatherV2":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("batchDims",t,e,n),s=Object(Dc.d)("x",t,e,n),i=Object(Dc.d)("indices",t,e,n);return[Nn.a(s,b.a(i,"int32"),r,a)]}case"Reverse":{const r=Object(Dc.d)("dims",t,e,n),a=[];for(let t=0;t<r.length;t++)r[t]&&a.push(t);const s=Object(Dc.d)("x",t,e,n);return[Be.a(s,a)]}case"ReverseV2":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("x",t,e,n);return[Be.a(a,r)]}case"Slice":{const r=Object(Dc.d)("begin",t,e,n),a=Object(Dc.d)("size",t,e,n);return[ye.a(Object(Dc.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(Dc.d)("begin",t,e,n),a=Object(Dc.d)("end",t,e,n),s=Object(Dc.d)("strides",t,e,n),i=Object(Dc.d)("beginMask",t,e,n),o=Object(Dc.d)("endMask",t,e,n),u=Object(Dc.d)("ellipsisMask",t,e,n),c=Object(Dc.d)("newAxisMask",t,e,n),l=Object(Dc.d)("shrinkAxisMask",t,e,n),d=Object(Dc.d)("x",t,e,n);return[qr.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(f.tidy)((()=>{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("tensors",t,e,n),s=a[0].shape,i=Hr.a(a[0]).shape,o=a.map((t=>{const e=f.util.arraysEqual(t.shape,s);if(!e&&!f.util.arraysEqual(Hr.a(t).shape,i))throw new Error("the input tensors shape does not match");return e?t:C.a(t,s)}));return[wn.a(o,r)]}));case"Unpack":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("tensor",t,e,n);return Se.a(a,r)}case"Tile":{const r=Object(Dc.d)("reps",t,e,n);return[Bt.a(Object(Dc.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(Dc.d)("axis",t,e,n),a=Object(Dc.d)("numOrSizeSplits",t,e,n),s=Object(Dc.d)("x",t,e,n);return ct.a(s,a,r)}case"ScatterNd":{const r=Object(Dc.d)("indices",t,e,n),a=Object(Dc.d)("values",t,e,n),s=Object(Dc.d)("shape",t,e,n);return[gl.a(r,a,s)]}case"GatherNd":{const r=Object(Dc.d)("x",t,e,n),a=Object(Dc.d)("indices",t,e,n);return[yl.a(r,a)]}case"SparseToDense":{const r=Object(Dc.d)("sparseIndices",t,e,n),a=Object(Dc.d)("outputShape",t,e,n),s=Object(Dc.d)("sparseValues",t,e,n),i=Object(Dc.d)("defaultValue",t,e,n);return[fl.a(r,s,a,s.dtype===i.dtype?i:b.a(i,s.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"sparse":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"SparseReshape":{const{outputIndices:r,outputShape:a}=Yc.md.sparseReshape(Object(Dc.d)("inputIndices",t,e,n),Object(Dc.d)("inputShape",t,e,n),Object(Dc.d)("newShape",t,e,n));return[r,a]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"FFT":return[sr.a(Object(Dc.d)("x",t,e,n))];case"IFFT":return[or.a(Object(Dc.d)("x",t,e,n))];case"RFFT":return[Lr.a(Object(Dc.d)("x",t,e,n))];case"IRFFT":return[ur.a(Object(Dc.d)("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return f.tidy((()=>((t,e,n)=>{switch(t.op){case"Cast":return[b.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(Dc.d)("axis",t,e,n);return[In.a(Object(Dc.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(Dc.d)("axis",t,e,n);return[Hr.a(Object(Dc.d)("x",t,e,n),r)]}case"Reshape":return[C.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("shape",t,e,n))];case"MirrorPad":return[Nr.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("padding",t,e,n),Object(Dc.d)("mode",t,e,n))];case"PadV2":case"Pad":return[en.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("padding",t,e,n),Object(Dc.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(Dc.d)("blockShape",t,e,n),a=Object(Dc.d)("paddings",t,e,n);return[Z.a(Object(Dc.d)("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=Object(Dc.d)("blockShape",t,e,n),a=Object(Dc.d)("crops",t,e,n);return[un.a(Object(Dc.d)("x",t,e,n),r,a)]}case"DepthToSpace":{const r=Object(Dc.d)("blockSize",t,e,n),a=Object(Dc.d)("dataFormat",t,e,n).toUpperCase();return[Jn.a(Object(Dc.d)("x",t,e,n),r,a)]}case"BroadcastTo":return[Gn.a(Object(Dc.d)("x",t,e,n),Object(Dc.d)("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(Dc.d)("keyDType",t,e,n),s=Object(Dc.d)("valueDType",t,e,n),i=new hl(a,s);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(Dc.d)("tableHandle",t,e,n,r),s=Object(Dc.d)("keys",t,e,n),i=Object(Dc.d)("values",t,e,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(Dc.d)("tableHandle",t,e,n,r),s=Object(Dc.d)("keys",t,e,n),i=Object(Dc.d)("defaultValue",t,e,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(Dc.d)("tableHandle",t,e,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const a=Object(zc.a)(t.op);if(a&&a.customExecutor)return a.customExecutor(new Mc(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return f.util.isPromise(a)?a.then((t=>[].concat(t))):[].concat(a)}class Ol{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function vl(t,e,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(t).map((t=>Object(Dc.g)(t)[0]));let l=[];null!=r&&(l=r.map((t=>Object(Dc.g)(t.name)[0])));const d=[...e];for(;d.length>0;){const t=d.pop();(Nl(t)||jl(t)||Sl(t))&&null==i&&(i=t,o=i.children.map((t=>t.name)).filter((t=>a.has(t)))),a.add(t.name),null==n[t.name]&&(-1===c.indexOf(t.name)&&-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),d.push(t))})):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const wl=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],kl=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Il=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Nl(t){return wl.indexOf(t.op)>=0}function jl(t){return kl.indexOf(t.op)>=0}function Sl(t){return Il.indexOf(t.op)>=0}class Tl{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new Tl(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=vl(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=e.map((t=>t.name)),a=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((t=>Object(Dc.g)(t)[0])).map((e=>t.nodes[e])),o=t.initNodes;i.forEach((t=>{r.has(t.name)&&s.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&s.push(t)})),null!=o&&o.forEach((t=>{r.has(t.name)&&s.push(t)}));const u=new Set,c=[];for(;s.length>0;){const t=s.pop();u.add(t.name),e[t.name]||c.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&s.push(t)}))}return c}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[Object(Dc.g)(t)[0]])),a=e.map((t=>Object(Dc.g)(t)[0]));let s=a.map((t=>this.graph.nodes[t]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(t,s),this.compiledMap.set(i,o));const u={},c={};return Object(f.tidy)((()=>{const n=new Ol(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,a]=Object(Dc.g)(e),s=[];s[a]=t[e],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let t=0;t<o.length;t++){const e=o[t];if(!r[e.name]){const t=xl(e,r,n,this._resourceManager);if(f.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),e.map((t=>Object(Dc.e)(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,s,i){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=Object(Dc.f)(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!t.kept&&!a.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},a={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const s=new Ol(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(t,s,e,n),o=e.map((t=>Object(Dc.e)(t,i,s))),u=o.map((t=>t.id)),c=Object.keys(t).map((e=>t[e].id)),l=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach((t=>{i[t].forEach((t=>{!t||t.kept||t.isDisposed||l.has(t.id)||t.dispose()}))})),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),s=a.map((t=>this.graph.nodes[Object(Dc.g)(t)[0]])),i=n.map((t=>Object(Dc.g)(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=vl(t,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=Object(Dc.g)(e),a=[];a[r]=t[e],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),b={};for(;h.length>0;){const t=this.processStack(s,h,e,p,b,m,i,f,u);await Promise.all(t)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=o.filter((t=>!Nl(t)&&!Object(Dc.e)(t.name,p,e))).map((t=>t.name));if(g.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${t}`)}return p}processStack(t,e,n,r,a,s,i,o,u){const c=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let l="";if("Enter"===t.node.op&&Object(Dc.d)("isConstant",t.node,r,n)&&([l]=Object(Dc.b)(t.node.name,n)),null==r[t.node.name]){const d=xl(t.node,r,n,this._resourceManager);l||([l]=Object(Dc.b)(t.node.name,n));const h=n.currentContext;f.util.isPromise(d)?c.push(d.then((c=>(r[l]=c,n.currentContext=h,this.checkTensorForDisposal(l,t.node,r,n,s,i,o),this.processChildNodes(t.node,e,n,r,a,u),c)))):(r[l]=d,this.checkTensorForDisposal(l,t.node,r,n,s,i,o),this.processChildNodes(t.node,e,n,r,a,u))}else this.processChildNodes(t.node,e,n,r,a,u)}return c}processChildNodes(t,e,n,r,a,s){t.children.forEach((t=>{const[i]=Object(Dc.b)(t.name,n);!a[i]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!Object(Dc.e)(t,r,n)))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!Object(Dc.e)(t,r,n)))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=Object(Dc.g)(e),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const t=a.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e));f.util.assert(e,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&f.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=Object(Dc.g)(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t}),{})}checkOutputs(t){t.forEach((t=>{const[e]=Object(Dc.g)(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class Cl{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class $l{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new Cl}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=f.io.browserHTTPRequest(t,this.loadOptions);else{const e=f.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(f.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=f.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Tl(_c.a.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=_c.a.Instance.transformGraph(t.modelInitializer);this.initializer=new Tl(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=f.io.getSaveHandlers(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof f.Tensor)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function El(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new $l(t,e);return await n.load(),n}var Al=n("YSVl"),Fl=n("w4jT"),Rl=n("vc8R");class _l{constructor(){this.size=null}batch(t,e=!0){const n=this;let r;return f.util.assert(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Dl((async()=>(await n.iterator()).columnMajorBatch(t,e,Ml)),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Dl((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Dl((async()=>(await e.iterator()).filter((e=>f.tidy((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Dl((async()=>(await e.iterator()).map((e=>f.tidy((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Dl((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Dl((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Dl((async()=>{const n=Object(Fl.e)((async()=>({value:await e.iterator(),done:!1})));return Object(Fl.d)(n.take(t))}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Dl((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Al.alea(e||f.util.now().toString());return Dl((async()=>{let e=a.int32();return n&&(e+=a.int32()),(await r.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Dl((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Dl(t,e=null){return new class extends _l{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Ml(t){if(null===t)return null;const e=t[0];if(Object(Rl.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof f.Tensor?f.stack(t):f.tensor(t)}(t),recurse:!1}}return{value:null,recurse:!0}}_l.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");Fl.a;Fl.a;var zl=n("3BSK");zl.a;function Ll(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&f.util.assert("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}const Pl=f.kernel_impls.whereImpl;class Bl extends f.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new f.DataStorage(this,Object(f.engine)())}nextDataId(){return Bl.nextDataId++}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(f.env)().get("IS_NODE")&&f.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&f.util.isString(n[0])){const a=n.map((t=>f.util.encodeString(t)));r=this.write(a,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}refCount(t){if(this.data.has(t)){return this.data.get(t).refCount}return 0}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r,a){this.data.set(t,{values:e,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return f.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>f.util.decodeString(t)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(f.buffer)(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(f.engine)().makeTensorFromDataId(r,e,n,this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(t);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=f.util.now();t();return{kernelMs:f.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ll([t],"where");const e=this.readSync(t.dataId);return Pl(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Bl.nextDataId=0;function Vl(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Ll(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=f.util.sizeFromShape(i.shape),l=n||i.dtype,d=f.util.getArrayFromDType(l,c);for(let t=0;t<c;++t)d[t]=e(u[t],a);return o.makeTensorInfo(i.shape,l,d)}}function Wl(t,e,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Ll(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=e(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}Object(f.registerBackend)("cpu",(()=>new Bl),1);const Ul=Vl(f.Elu,(t=>t>=0?t:Math.exp(t)-1)),Kl={kernelName:f.Elu,backendName:"cpu",kernelFunc:Ul};function Gl(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Hl={kernelName:f.Identity,backendName:"cpu",kernelFunc:Gl};function ql(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{alpha:s}=r;Ll([a],"leakyRelu");const i=f.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=f.util.getTypedArrayFromDType("float32",i);for(let c=0;c<o.length;c++)u[c]=o[c]<0?s*o[c]:o[c];return n.makeTensorInfo(a.shape,"float32",u)}const Xl={kernelName:f.LeakyRelu,backendName:"cpu",kernelFunc:ql};function Yl(t){return(e,n,r,a,s)=>{const i=f.backend_util.assertAndGetBroadcastShape(e,n),o=i.length,u=f.util.computeStrides(i),c=f.util.sizeFromShape(i),l=f.util.getTypedArrayFromDType(s,c),d=e.length,h=n.length,p=f.util.computeStrides(e),m=f.util.computeStrides(n),b=f.backend_util.getBroadcastDims(e,i),g=f.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let f=0;f<l.length;++f)l[f]=t(r[f%r.length],a[f%a.length]);else for(let y=0;y<l.length;++y){const e=f.util.indexToLoc(y,o,u),n=e.slice(-d);b.forEach((t=>n[t]=0));const s=f.util.locToIndex(n,d,p),i=e.slice(-h);g.forEach((t=>i[t]=0));const c=f.util.locToIndex(i,h,m);l[y]=t(r[s],a[c])}return[l,i]}}const Jl=Yl(((t,e)=>t<0?e*t:t));function Zl(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;Ll([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Jl(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Ql={kernelName:f.Prelu,backendName:"cpu",kernelFunc:Zl},td=Vl(f.Relu,(t=>Math.max(0,t))),ed={kernelName:f.Relu,backendName:"cpu",kernelFunc:td},nd=Vl(f.Relu6,(t=>Math.min(Math.max(0,t),6))),rd={kernelName:f.Relu6,backendName:"cpu",kernelFunc:nd},ad=Vl(f.Sigmoid,(t=>1/(1+Math.exp(-t)))),sd={kernelName:f.Sigmoid,backendName:"cpu",kernelFunc:ad};function id(t,e,n,r,a){if("linear"===n)return Gl({inputs:{x:e},backend:t});if("relu"===n)return td({inputs:{x:e},backend:t});if("elu"===n)return Ul({inputs:{x:e},backend:t});if("relu6"===n)return nd({inputs:{x:e},backend:t});if("prelu"===n)return Zl({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return ql({inputs:{x:e},backend:t,attrs:{alpha:a}});if("sigmoid"===n)return ad({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function od(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const ud={kernelName:f.Complex,backendName:"cpu",kernelFunc:od};function cd(t,e,n="float32"){if("complex64"===n){return od({inputs:{real:cd(t,e,"float32"),imag:cd(t,e,"float32")},backend:t})}const r=f.util.makeZerosTypedArray(f.util.sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}function ld(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const dd={kernelName:f.Real,backendName:"cpu",kernelFunc:ld};function hd(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Gl({inputs:{x:a},backend:n});const t=cd(n,a.shape,a.dtype),e=hd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=od({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===a.dtype){const t=ld({inputs:{input:a},backend:n}),e=hd({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!f.util.hasEncodingLoss(a.dtype,s)){const t=Gl({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===s){const t=n.data.get(a.dataId).values,e=f.util.toTypedArray([0],a.dtype),[r,s]=Yl(((t,e)=>t!==e?1:0))(a.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const pd={kernelName:f.Cast,backendName:"cpu",kernelFunc:hd};function fd(t,e,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;Ll([s,i],t);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=e(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:t,backend:a})=>{const{a:s,b:i}=t,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const t=hd({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=hd({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),x=o.makeTensorInfo(y,"float32",b),O=o.makeTensorInfo(y,"float32",g),v=od({inputs:{real:x,imag:O},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(O),v}{const t=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=e(s.shape,i.shape,t,n,a);return o.makeTensorInfo(c,a,u)}}}function md(t){return(e,n,r,a,s,i)=>{const o=f.backend_util.assertAndGetBroadcastShape(e,n),u=f.util.sizeFromShape(o),c=o.length,l=f.util.computeStrides(o),d=f.util.getTypedArrayFromDType("float32",u),h=f.util.getTypedArrayFromDType("float32",u),p=f.backend_util.getBroadcastDims(e,o),m=f.backend_util.getBroadcastDims(n,o),b=f.backend_util.mergeRealAndImagArrays(r,a),g=f.backend_util.mergeRealAndImagArrays(s,i),y=e.length,x=f.util.computeStrides(e),O=n.length,v=f.util.computeStrides(n);if(p.length+m.length===0)for(let f=0;f<d.length;f++){const e=f%b.length,n=f%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);d[f]=r.real,h[f]=r.imag}else for(let w=0;w<d.length;w++){const e=f.util.indexToLoc(w,c,l),n=e.slice(-y);p.forEach((t=>n[t]=0));const r=f.util.locToIndex(n,y,x),a=e.slice(-O);m.forEach((t=>a[t]=0));const s=f.util.locToIndex(a,O,v),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);d[w]=i.real,h[w]=i.imag}return[d,h,o]}}const bd=Yl(((t,e)=>t+e)),gd=md(((t,e,n,r)=>({real:t+n,imag:e+r}))),yd=fd(f.Add,bd,gd),xd={kernelName:f.Add,backendName:"cpu",kernelFunc:yd};function Od(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=f.util.sizeFromShape(a.shape),o=f.util.inferFromImplicitShape(s,i),u=f.util.sizeFromShape(o);f.util.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=o,e.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const vd={kernelName:f.Reshape,backendName:"cpu",kernelFunc:Od};function wd(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;Ll([a,s],"matMul");const u=a.shape.length,c=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[c-2]:s.shape[c-1],m=a.shape.slice(0,-2),b=s.shape.slice(0,-2),g=f.util.sizeFromShape(m),y=f.util.sizeFromShape(b),x=g===y||1===g||1===y;f.util.assert(u>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const O=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);f.util.assert(l===d,(()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[y,p,d]:[y,d,p],w=Od({inputs:{x:a},backend:n,attrs:{shape:i?[g,l,h]:[g,h,l]}}),k=Od({inputs:{x:s},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],j=o?k.shape[1]:k.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(k.dataId).values,$=f.util.computeStrides(w.shape),E=f.util.computeStrides(k.shape),[A,F,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[_,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],z=N*j,L=Object(f.buffer)([S,N,j],w.dtype),P=L.values,B=n.blockSize;for(let f=0;f<S;f++)for(let t=0;t<N;t+=B)for(let e=0;e<j;e+=B)for(let n=0;n<I;n+=B){const r=Math.min(t+B,N),a=Math.min(e+B,j),s=Math.min(n+B,I);for(let i=t;i<r;i++)for(let t=e;t<a;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(f,g-1)*A,a=Math.min(f,y-1)*M;e+=T[n+i*F+r*R]*C[r*_+t*D+a]}P[f*z+(i*j+t)]+=e}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(O,L.dtype,L.values)}const kd={kernelName:f.BatchMatMul,backendName:"cpu",kernelFunc:wd};const Id={kernelName:f._FusedMatMul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=wd({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=yd({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=id(n,h,l,o,d),m.push(h),h=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return h}};function Nd(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const jd={kernelName:f.Abs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ll(e,"abs");let r=new Float32Array(f.util.sizeFromShape(e.shape));return r=Nd(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},Sd=Vl(f.Acos,(t=>Math.acos(t))),Td={kernelName:f.Acos,backendName:"cpu",kernelFunc:Sd},Cd=Vl(f.Acosh,(t=>Math.acosh(t))),$d={kernelName:f.Acosh,backendName:"cpu",kernelFunc:Cd};const Ed={kernelName:f.AddN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;Ll(e,"addN");const a=r.map((t=>n.data.get(t.dataId).values)),s=Object(f.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){const t=a[o];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Ad(t,e,n,r,a){const s=e.length,i=f.util.sizeFromShape(e),o=f.util.computeStrides(e),u=f.util.computeStrides(a),c=f.util.getTypedArrayFromDType(n,f.util.sizeFromShape(a));for(let l=0;l<i;++l){const e=f.util.indexToLoc(l,s,o),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];c[f.util.locToIndex(n,s,u)]=t[l]}return c}function Fd(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:s}=n;Ll(a,"transpose");const i=a.shape.length,o=new Array(i);for(let c=0;c<o.length;c++)o[c]=a.shape[s[c]];const u=Ad(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const Rd={kernelName:f.Transpose,backendName:"cpu",kernelFunc:Fd};const _d={kernelName:f.All,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;Ll(a,"all");const o=f.util.parseAxisParam(s,a.shape);let u=o;const c=f.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Fd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=f.backend_util.getInnerMostAxes(u.length,a.shape.length)),f.backend_util.assertAxesAreInnerMostDims("all",u,l.shape.length);const[d,h]=f.backend_util.computeOutAndReduceShapes(l.shape,u),p=f.util.sizeFromShape(h),m=f.util.makeZerosTypedArray(f.util.sizeFromShape(d),l.dtype),b=n.data.get(l.dataId).values;for(let f=0;f<m.length;++f){const t=f*p;let e=b[t];for(let n=0;n<p;++n){const r=b[t+n];e=e&&r}m[f]=e}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,m);if(i){const t=Od({inputs:{x:g},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Dd={kernelName:f.Any,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;Ll(a,"any");const o=f.util.parseAxisParam(s,a.shape);let u=o;const c=f.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Fd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=f.backend_util.getInnerMostAxes(u.length,a.shape.length)),f.backend_util.assertAxesAreInnerMostDims("any",u,l.shape.length);const[d,h]=f.backend_util.computeOutAndReduceShapes(l.shape,u),p=f.util.sizeFromShape(h),m=f.util.makeZerosTypedArray(f.util.sizeFromShape(d),l.dtype),b=n.data.get(l.dataId).values;for(let f=0;f<m.length;++f){const t=f*p;let e=b[t];for(let n=0;n<p;++n){const r=b[t+n];e=e||r}m[f]=e}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,m);if(i){const t=Od({inputs:{x:g},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Md={kernelName:f.ArgMax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;Ll(a,"argMax");let i=f.util.parseAxisParam(s,a.shape);const o=f.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Fd({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=f.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],f.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[l,d]=f.backend_util.computeOutAndReduceShapes(u.shape,i),h=f.util.sizeFromShape(l),p=f.util.makeZerosTypedArray(h,"int32"),m=f.util.sizeFromShape(d),b=n.data.get(u.dataId).values;for(let f=0;f<p.length;++f){const t=f*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a>e&&(e=a,n=r)}p[f]=n}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l,"int32",p)}};const zd={kernelName:f.ArgMin,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;Ll(a,"argMin");let i=f.util.parseAxisParam(s,a.shape);const o=f.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Fd({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=f.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],f.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[l,d]=f.backend_util.computeOutAndReduceShapes(u.shape,i),h=f.util.sizeFromShape(l),p=f.util.makeZerosTypedArray(h,"int32"),m=f.util.sizeFromShape(d),b=n.data.get(u.dataId).values;for(let f=0;f<p.length;++f){const t=f*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a<e&&(e=a,n=r)}p[f]=n}return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(l,"int32",p)}},Ld=Vl(f.Asin,(t=>Math.asin(t))),Pd={kernelName:f.Asin,backendName:"cpu",kernelFunc:Ld},Bd=Vl(f.Asinh,(t=>Math.asinh(t))),Vd={kernelName:f.Asinh,backendName:"cpu",kernelFunc:Bd},Wd=Vl(f.Atan,(t=>Math.atan(t))),Ud={kernelName:f.Atan,backendName:"cpu",kernelFunc:Wd},Kd=Yl(((t,e)=>Math.atan2(t,e))),Gd=fd(f.Atan2,Kd),Hd={kernelName:f.Atan2,backendName:"cpu",kernelFunc:Gd},qd=Vl(f.Atanh,(t=>Math.atanh(t))),Xd={kernelName:f.Atanh,backendName:"cpu",kernelFunc:qd};function Yd(t,e,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(f.buffer)(a.outShape,n),g=b.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],O=a.outShape[3];for(let f=0;f<a.batchSize;++f){const e=f*y,n=f*r[0];for(let f=0;f<a.inChannels;++f)for(let b=0;b<a.outHeight;++b){const y=b*i-h,v=Math.max(0,y),w=Math.min(a.inHeight,l+y),k=e+b*x;for(let e=0;e<a.outWidth;++e){const i=e*o-p,l=Math.max(0,i),h=Math.min(a.inWidth,d+i);let b=m,y=0,x=0;for(let e=v;e<w;e+=u){const a=n+e*r[1];for(let e=l;e<h;e+=c){const n=t[a+e*r[2]+f];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,x++)}if(isNaN(b))break}g[k+e*O+f]="avg"===s?y/x:b}}}return b}function Jd(t,e,n,r,a=!1,s=!1){const i=Object(f.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,m=r.padInfo.left,b=Object(f.buffer)(e,n,t);for(let f=0;f<r.batchSize;++f)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*o-p;let g=n;for(;g<0;)g+=c;const y=Math.min(r.inHeight,d+n);for(let o=0;o<r.outWidth;++o){const d=o*u-m;let p=d;for(;p<0;)p+=l;const x=Math.min(r.inWidth,h+d);let O=Number.NEGATIVE_INFINITY,v=-1;for(let e=g;e<y;e+=c){const i=e-n;for(let n=p;n<x;n+=l){const o=n-d,u=b.get(f,e,n,t);u>O&&(O=u,v=a?s?((f*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*h+o)}}i.set(v,f,e,o,t)}}return i}function Zd(t,e,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,m=a.effectiveFilterWidth,b=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,O=Object(f.buffer)(a.outShape,n),v=O.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let f=0;f<a.batchSize;++f){const e=f*w,n=f*r[0];for(let f=0;f<a.inChannels;++f)for(let O=0;O<a.outDepth;++O){const w=O*i-b;let j=w;for(;j<0;)j+=c;const S=Math.min(a.inDepth,h+w),T=e+O*k;for(let e=0;e<a.outHeight;++e){const i=e*o-g;let h=i;for(;h<0;)h+=l;const b=Math.min(a.inHeight,p+i),O=T+e*I;for(let e=0;e<a.outWidth;++e){const i=e*u-y;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,m+i),g=O+e*N;let w=x,k=0,I=0;for(let e=j;e<S;e+=c){const a=n+e*r[1];for(let e=h;e<b;e+=l){const n=a+e*r[2];for(let e=o;e<p;e+=d){const a=t[n+e*r[3]+f];if("max"===s&&a>w?w=a:"avg"===s&&(k+=a,I++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}v[g+f]="avg"===s?k/I:w}}}}return O}const Qd={kernelName:f.AvgPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Ll(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=f.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&f.util.arraysEqual(c.inShape,c.outShape))l=Gl({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=f.util.computeStrides(a.shape),r=Yd(t,a.shape,a.dtype,e,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const th={kernelName:f.AvgPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Ll(a,"avgPool3d");const l=f.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=Zd(n.data.get(a.dataId).values,a.shape,a.dtype,f.util.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const eh={kernelName:f.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Ll([a,s],"avgPool3DGrad");const l=f.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,m=l.filterDepth,b=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,x=l.dilationHeight,O=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,k=l.effectiveFilterWidth,I=v-1-l.padInfo.front,N=k-1-l.padInfo.left,j=w-1-l.padInfo.top,S=Object(f.buffer)(s.shape,"float32"),T=1/(m*b*g),C=n.bufferSync(a);for(let f=0;f<l.batchSize;++f)for(let t=0;t<l.inChannels;++t)for(let e=0;e<l.inDepth;++e)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=e-I,s=n-j,i=r-N;let o=0;for(let e=0;e<v;e+=y){const n=(a+e)/d;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let e=0;e<w;e+=x){const r=(s+e)/h;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let e=0;e<k;e+=O){const a=(i+e)/p;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;o+=C.get(f,n,r,a,t)}}}S.set(o*T,f,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const nh={kernelName:f.AvgPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;Ll([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=f.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,m=l.filterWidth,b=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,x=l.effectiveFilterWidth,O=x-1-l.padInfo.left,v=y-1-l.padInfo.top,w=Object(f.buffer)(i.shape,"float32"),k=1/(p*m),I=n.data.get(a.dataId).values,N=Object(f.buffer)(a.shape,"float32",I);for(let f=0;f<l.batchSize;++f)for(let t=0;t<l.inChannels;++t)for(let e=0;e<l.inHeight;++e)for(let n=0;n<l.inWidth;++n){const r=e-v,a=n-O;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/d;if(!(n<0||n>=l.outHeight||Math.floor(n)!==n))for(let e=0;e<x;e+=g){const r=(a+e)/h;if(r<0||r>=l.outWidth||Math.floor(r)!==r)continue;s+=N.get(f,n,r,t)}}w.set(s*k,f,e,n,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const rh={kernelName:f.FusedBatchNorm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,scale:s,offset:i,mean:o,variance:u}=e;f.util.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f.util.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f.util.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Ll([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(l.length),g=m.length,y=p.length,x=h.length,O=d.length;let v=0,w=0,k=0,I=0;for(let f=0;f<l.length;++f)b[f]=m[v++]+(l[f]-d[w++])*p[k++]/Math.sqrt(h[I++]+c),v>=g&&(v=0),w>=O&&(w=0),k>=y&&(k=0),I>=x&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,b)}};function ah(t,e,n,r,a){const s=f.slice_util.isSliceContinous(r,e,n),i=f.util.sizeFromShape(n),o=f.util.computeStrides(r);if(s){const n=f.slice_util.computeFlatOffset(e,o);return"string"===a?t.slice(n,n+i):t.subarray(n,n+i)}const u="string"===a?f.backend_util.fromUint8ToStringArray(t):t,c=Object(f.buffer)(r,a,u),l=Object(f.buffer)(n,a);for(let d=0;d<l.size;++d){const t=l.indexToLoc(d),n=t.map(((t,n)=>t+e[n]));l.set(c.get(...n),...t)}return"string"===a?f.backend_util.fromStringArrayToUint8(l.values):l.values}function sh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r;Ll(a,"slice");const[o,u]=f.slice_util.parseSliceParams(a,s,i);f.slice_util.assertParamsValid(a,o,u);const c=ah(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const ih={kernelName:f.Slice,backendName:"cpu",kernelFunc:sh};const oh={kernelName:f.BatchToSpaceND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,crops:i}=r;Ll([a],"batchToSpaceND");const o=s.reduce(((t,e)=>t*e)),u=f.backend_util.getReshaped(a.shape,s,o),c=f.backend_util.getPermuted(u.length,s.length),l=f.backend_util.getReshapedPermuted(a.shape,s,o),d=f.backend_util.getSliceBeginCoords(i,s.length),h=f.backend_util.getSliceSize(l,i,s.length),p=Od({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Fd({inputs:{x:p},backend:n,attrs:{perm:c}}),b=Od({inputs:{x:m},backend:n,attrs:{shape:l}}),g=sh({inputs:{x:b},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};function uh(t,e,n,r,a){const s=f.util.sizeFromShape(r),i=f.util.makeZerosTypedArray(a,n);for(let o=0;o<t.length;o++){const n=t[o];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(i[n]+=s>0?e[o]:1)}return i}function ch(t,e,n,r=!1){const a=t.shape[0],s=t.shape[1],i=Object(f.buffer)([a,n],e.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=t.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):e.size>0?i.set(i.get(o,s)+e.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const lh={kernelName:f.Bincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=uh(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};function dh(t){return(e,n,r)=>{const a=f.util.getTypedArrayFromDType(n,e.length);for(let s=0;s<e.length;++s)a[s]=t(e[s],r);return a}}const hh=dh((t=>Math.ceil(t))),ph=Wl(f.Ceil,hh),fh={kernelName:f.Ceil,backendName:"cpu",kernelFunc:ph},mh=Vl(f.ClipByValue,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),bh={kernelName:f.ClipByValue,backendName:"cpu",kernelFunc:mh},gh={kernelName:f.ComplexAbs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(f.util.sizeFromShape(e.shape)),a=n.data.get(e.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let c=0;c<o.length;c++){const t=o[c],e=u[c];r[c]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}};function yh(t,e,n,r){const a=f.util.getArrayFromDType(n,f.util.sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach((t=>{const n=f.util.sizeFromShape(t.shape);a.set(t.vals,e),e+=n}))}else{let r=0;t.forEach((t=>{const s="string"===n?f.backend_util.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const o=n*e[1]+r;for(let e=0;e<t.shape[1];++e)a[o+e]=s[i++]}r+=t.shape[1]}))}return a}function xh(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Oh={kernelName:f.Imag,backendName:"cpu",kernelFunc:xh};function vh(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=f.util.parseAxisParam(a,e[0].shape)[0];let i=f.backend_util.computeOutShape(e.map((t=>t.shape)),s);if(0===f.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>f.util.sizeFromShape(t.shape)>0));if(1===o.length)return Gl({inputs:{x:o[0]},backend:n});const u=o.map((t=>t.shape));if(f.backend_util.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const t=o.map((t=>ld({inputs:{input:t},backend:n}))),e=o.map((t=>xh({inputs:{input:t},backend:n}))),r=vh({inputs:t,backend:n,attrs:{axis:s}}),a=vh({inputs:e,backend:n,attrs:{axis:s}}),i=od({inputs:{real:r,imag:a},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map((t=>{const e=f.util.sizeFromShape(t.shape.slice(s));return Od({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})})),l=c.map((t=>({vals:n.data.get(t.dataId).values,shape:t.shape})));i=f.backend_util.computeOutShape(c.map((t=>t.shape)),1);const d=1===c[0].shape[0],h=yh(l,i,e[0].dtype,d),p=f.backend_util.computeOutShape(o.map((t=>t.shape)),s),m=n.makeTensorInfo(p,e[0].dtype,h);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}const wh={kernelName:f.Concat,backendName:"cpu",kernelFunc:vh};function kh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;Ll([a,s],"conv2d");const d=f.backend_util.convertConv2DDataFormat(u),h=f.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d),p=h.filterHeight,m=h.filterWidth,b=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,x=h.padInfo.top,O="channelsLast"===h.dataFormat,v=new f.TensorBuffer(h.outShape,a.dtype),w=f.util.computeStrides(a.shape),k=f.util.computeStrides(s.shape),I=w[0],N=O?w[1]:w[2],j=O?w[2]:1,S=O?1:w[1],T=v.strides[0],C=O?v.strides[1]:v.strides[2],$=O?v.strides[2]:1,E=O?1:v.strides[1],A=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,R=v.values;for(let f=0;f<h.batchSize;++f){const t=f*I,e=f*T;for(let n=0;n<h.outHeight;++n){const r=e+n*C,a=n*h.strideHeight-x;for(let e=0;e<p;++e){const n=a+e*b;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*N;for(let t=0;t<h.outWidth;++t){const e=r+t*$,n=t*h.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=h.inWidth)continue;const a=i+r*j;let o=s+t*k[1];for(let t=0;t<h.inChannels;++t){const n=A[a+t*S];for(let t=0;t<h.outChannels;++t)R[e+t*E]+=n*F[o+t];o+=h.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,R)}const Ih={kernelName:f.Conv2D,backendName:"cpu",kernelFunc:kh};const Nh={kernelName:f.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;Ll([a,s],"conv2dBackpropFilter");const d=f.backend_util.convertConv2DDataFormat(u),h=f.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),{strideHeight:p,strideWidth:m,filterHeight:b,filterWidth:g}=h,y="channelsLast"===h.dataFormat,x=new f.TensorBuffer(h.filterShape,"float32"),O=h.padInfo.left,v=h.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new f.TensorBuffer(a.shape,a.dtype,w),N=new f.TensorBuffer(s.shape,s.dtype,k);for(let f=0;f<b;++f){const t=Math.max(0,Math.ceil((v-f)/p)),e=Math.min(h.outHeight,(h.inHeight+v-f)/p);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((O-n)/m)),a=Math.min(h.outWidth,(h.inWidth+O-n)/m);for(let s=0;s<h.inChannels;++s)for(let i=0;i<h.outChannels;++i){let o=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<e;++c){const t=f+c*p-v;for(let e=r;e<a;++e){const r=n+e*m-O;o+=y?I.get(u,t,r,s)*N.get(u,c,e,i):I.get(u,s,t,r)*N.get(u,i,c,e)}}x.set(o,f,n,s,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const jh={kernelName:f.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;Ll([a,s],"conv2dBackpropInput");const d=f.util.computeStrides(s.shape),h=f.util.computeStrides(a.shape);let p=f.backend_util.convertConv2DDataFormat(c);const m=f.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p),b=new f.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,[O,v,w]=d,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:j,inHeight:S,inWidth:T,outChannels:C,outHeight:$,outWidth:E,strideHeight:A,strideWidth:F}=m;p=m.dataFormat;const R=I-1-m.padInfo.top,_=N-1-m.padInfo.left,D="channelsLast"===p,M=b.strides[0],z=D?b.strides[1]:b.strides[2],L=D?b.strides[2]:1,P=D?1:b.strides[1],B=h[0],V=D?h[1]:h[2],W=D?h[2]:1,U=D?1:h[1];for(let f=0;f<k;++f)for(let t=0;t<j;++t)for(let e=0;e<S;++e){const n=e-R,r=Math.max(0,Math.ceil(n/A)),a=Math.min($,(I+n)/A);for(let s=0;s<T;++s){const i=s-_,o=Math.max(0,Math.ceil(i/F)),u=Math.min(E,(N+i)/F);let c=0;for(let e=r;e<a;++e){const r=e*A-n;for(let n=o;n<u;++n){const a=B*f+V*e+W*n,s=O*(I-1-r)+v*(N-1-(n*F-i))+w*t;for(let t=0;t<C;++t){c+=y[a+U*t]*x[s+t]}}}g[M*f+z*e+L*s+P*t]=c}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Sh={kernelName:f.Conv3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=r;Ll([a,s],"conv3d");const c=f.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:m,dilationWidth:b,padInfo:g}=c,y=g.front,x=g.left,O=g.top,v=new f.TensorBuffer(c.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=v.values,N=f.util.computeStrides(a.shape),j=f.util.computeStrides(s.shape);for(let f=0;f<c.batchSize;++f){const t=f*N[0],e=f*v.strides[0];for(let n=0;n<c.outDepth;++n){const r=e+n*v.strides[1],a=n*c.strideDepth-y;for(let e=0;e<l;++e){const n=a+e*p;if(n<0||n>=c.inDepth)continue;const s=e*j[0],i=t+n*N[1];for(let t=0;t<c.outHeight;++t){const e=r+t*v.strides[2],n=t*c.strideHeight-O;for(let t=0;t<d;++t){const r=n+t*m;if(r<0||r>=c.inHeight)continue;const a=s+t*j[1],o=i+r*N[2];for(let t=0;t<c.outWidth;++t){const n=e+t*c.outChannels,r=t*c.strideWidth-x;for(let t=0;t<h;++t){const e=r+t*b;if(e<0||e>=c.inWidth)continue;const s=a+t*j[2],i=o+e*c.inChannels;let u=s;for(let t=0;t<c.inChannels;++t){const e=w[i+t];for(let t=0;t<c.outChannels;++t)I[n+t]+=e*k[u+t];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Th={kernelName:f.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,filterShape:u}=r;Ll([a,s],"conv3dBackpropFilterV2");const c=f.util.computeStrides(a.shape),l=f.util.computeStrides(s.shape),d=f.backend_util.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,m=d.strideWidth,b=d.filterDepth,g=d.filterHeight,y=d.filterWidth,x=new f.TensorBuffer(d.filterShape,"float32"),O=x.values,[v,w,k,I]=x.strides,N=n.data.get(s.dataId).values,[j,S,T,C]=l,$=n.data.get(a.dataId).values,[E,A,F,R]=c,_=d.padInfo.front,D=d.padInfo.left,M=d.padInfo.top;for(let f=0;f<b;++f){const t=Math.max(0,Math.ceil((_-f)/h)),e=Math.min(d.outDepth,(d.inDepth+_-f)/h),n=f*v;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/p)),s=Math.min(d.outHeight,(d.inHeight+M-r)/p),i=r*w+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((D-n)/m)),u=Math.min(d.outWidth,(d.inWidth+D-n)/m),c=n*k+i;for(let i=0;i<d.inChannels;++i){const l=i*I+c;for(let c=0;c<d.outChannels;++c){let b=0;for(let l=0;l<d.batchSize;++l){const d=l*E,g=l*j;for(let l=t;l<e;++l){const t=(f+l*h-_)*A+d,e=l*S+g;for(let l=a;l<s;++l){const a=(r+l*p-M)*F+t,s=l*T+e;for(let t=o;t<u;++t){const e=t*C+s;b+=$[(n+t*m-D)*R+a+i]*N[e+c]}}}}O[l+c]=b}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Ch={kernelName:f.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:o,inputShape:u}=r;Ll([a],"conv3dBackpropInputV2");const c=f.util.computeStrides(a.shape),l=f.util.computeStrides(s.shape),d=f.backend_util.computeConv3DInfo(u,s.shape,o,1,i),h=new f.TensorBuffer(d.inShape,"float32"),p=h.values,[m,b,g,y]=h.strides,x=n.data.get(a.dataId).values,[O,v,w,k]=c,I=n.data.get(s.dataId).values,[N,j,S,T]=l,{batchSize:C,filterDepth:$,filterHeight:E,filterWidth:A,inChannels:F,inDepth:R,inHeight:_,inWidth:D,outChannels:M,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:V,strideWidth:W}=d,U=$-1-d.padInfo.front,K=E-1-d.padInfo.top,G=A-1-d.padInfo.left;for(let f=0;f<C;++f)for(let t=0;t<F;++t)for(let e=0;e<R;++e){const n=e-U,r=Math.max(0,Math.ceil(n/B)),a=Math.min(z,($+n)/B);for(let s=0;s<_;++s){const i=s-K,o=Math.max(0,Math.ceil(i/V)),u=Math.min(L,(E+i)/V);for(let c=0;c<D;++c){const l=c-G,d=Math.max(0,Math.ceil(l/W)),h=Math.min(P,(A+l)/W);let C=0;for(let e=r;e<a;++e){const r=e*B-n;for(let n=o;n<u;++n){const a=n*V-i;for(let s=d;s<h;++s){const i=O*f+v*e+w*n+k*s,o=N*($-1-r)+j*(E-1-a)+S*(A-1-(s*W-l))+T*t;for(let t=0;t<M;++t){C+=x[i+t]*I[o+t]}}}}p[m*f+b*e+g*s+y*c+t]=C}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},$h=Vl(f.Cos,(t=>Math.cos(t))),Eh={kernelName:f.Cos,backendName:"cpu",kernelFunc:$h},Ah=Vl(f.Cosh,(t=>Math.cosh(t))),Fh={kernelName:f.Cosh,backendName:"cpu",kernelFunc:Ah};const Rh={kernelName:f.CropAndResize,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:s,boxInd:i}=e,{cropSize:o,method:u,extrapolationValue:c}=r,[l,d,h,p]=a.shape,m=s.shape[0],[b,g]=o,y=Object(f.buffer)([m,b,g,p],"float32"),x=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=f.util.computeStrides(a.shape),k=f.util.computeStrides(y.shape);for(let f=0;f<m;f++){const t=4*f,e=x[t],n=x[t+1],r=x[t+2],a=x[t+3],s=O[f];if(s>=l)continue;const i=b>1?(r-e)*(d-1)/(b-1):0,o=g>1?(a-n)*(h-1)/(g-1):0;for(let l=0;l<b;l++){const t=b>1?e*(d-1)+l*i:.5*(e+r)*(d-1);if(t<0||t>d-1)for(let e=0;e<g;e++)for(let t=0;t<p;t++){const n=t+e*k[2]+l*k[1]+f*k[0];y.values[n]=c}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),i=t-e;for(let t=0;t<g;t++){const u=g>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(u<0||u>h-1){for(let e=0;e<p;e++){const n=e+t*k[2]+l*k[1]+f*k[0];y.values[n]=c}continue}const d=Math.floor(u),m=Math.ceil(u),b=u-d;for(let n=0;n<p;n++){let a=n+d*w[2]+e*w[1]+s*w[0];const o=v[a];a=n+m*w[2]+e*w[1]+s*w[0];const u=v[a];a=n+d*w[2]+r*w[1]+s*w[0];const c=v[a];a=n+m*w[2]+r*w[1]+s*w[0];const h=o+(u-o)*b,p=c+(v[a]-c)*b;a=n+t*k[2]+l*k[1]+f*k[0],y.values[a]=h+(p-h)*i}}}else for(let e=0;e<g;++e){const r=g>1?n*(h-1)+e*o:.5*(n+a)*(h-1);if(r<0||r>h-1){for(let t=0;t<p;t++){const n=t+e*k[2]+l*k[1]+f*k[0];y.values[n]=c}continue}const i=Math.round(r),u=Math.round(t);for(let t=0;t<p;t++){const n=t+i*w[2]+u*w[1]+s*w[0],r=t+e*k[2]+l*k[1]+f*k[0];y.values[r]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const _h={kernelName:f.Cumsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,exclusive:i,reverse:o}=r;Ll(a,"cumsum");const u=f.backend_util.getAxesPermutation([s],a.shape.length);let c=a;null!=u&&(c=Fd({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=f.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=Object(f.upcastType)(c.dtype,"int32"),h=f.util.makeZerosTypedArray(f.util.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,m=c.shape[c.shape.length-1],b=o?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let f=0;f<p.length;f+=m)for(let t=0;t<m;t++){const e=b(f,t);if(0===t)h[e]=i?0:p[e];else{const n=b(f,t-1);h[e]=i?p[n]+h[n]:p[e]+h[n]}}const g=n.makeTensorInfo(c.shape,d,h);if(null!=u){const t=Fd({inputs:{x:g},backend:n,attrs:{perm:f.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),t}return g}};const Dh={kernelName:f.DenseBincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=uh(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,t)}if(2===a.shape.length){const t=ch(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(t.shape,s.dtype,t.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Mh={kernelName:f.DepthToSpace,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockSize:s,dataFormat:i}=r;f.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),f.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],d=u*s,h=c*s,p=l/(s*s),m=n.data.get(a.dataId).values,b=new Float32Array(o*d*h*p);let g=0;for(let f=0;f<o;++f)for(let t=0;t<d;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<h;++t){const r=Math.floor(t/s),a=(n*s+t%s)*p;for(let t=0;t<p;++t){const n=t+a+l*(r+c*(e+u*f));b[g++]=m[n]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,b)}};function zh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Ll([a,s],"depthwiseConv2DNative");const l=f.util.computeStrides(a.shape),d=f.util.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=f.backend_util.computeConv2DInfo(a.shape,s.shape,i,h,o,c,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:x}=p,O=x.left,v=x.top,w=p.outChannels/p.inChannels,k=new f.TensorBuffer(p.outShape,a.dtype),I=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,j=k.values;for(let f=0;f<p.batchSize;++f){const t=f*l[0],e=f*k.strides[0];for(let n=0;n<p.outHeight;++n){const r=e+n*k.strides[1],a=n*p.strideHeight-v;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*l[1];for(let t=0;t<p.outWidth;++t){const e=r+t*k.strides[2],n=t*p.strideWidth-O;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=p.inWidth)continue;const a=s+t*d[1],o=i+r*p.inChannels;let u=e,c=a;for(let t=0;t<p.inChannels;++t){const e=I[o+t];for(let t=0;t<w;++t)j[u+t]+=e*N[c+t];u+=w,c+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Lh={kernelName:f.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:zh};const Ph={kernelName:f.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;Ll([a,s],"depthwiseConv2dNativeBackpropFilter");const d=f.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:m,filterWidth:b}=d,g=new f.TensorBuffer(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,O=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,w=new f.TensorBuffer(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,I=new f.TensorBuffer(s.shape,s.dtype,k);for(let f=0;f<m;++f){const t=Math.max(0,Math.ceil((x-f)/h)),e=Math.min(d.outHeight,(d.inHeight+x-f)/h);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/p)),a=Math.min(d.outWidth,(d.inWidth+y-n)/p);for(let s=0;s<d.outChannels;++s){const i=Math.trunc(s/O),o=s%O;let u=0;for(let c=0;c<d.batchSize;++c)for(let o=t;o<e;++o){const t=f+o*h-x;for(let e=r;e<a;++e){const r=n+e*p-y;u+=w.get(c,t,r,i)*I.get(c,o,e,s)}}g.set(u,f,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Bh={kernelName:f.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;Ll([a,s],"depthwiseConv2DNativeBackpropInput");const d=f.util.computeStrides(a.shape),h=f.util.computeStrides(s.shape),p=f.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),m=new f.TensorBuffer(p.inShape,"float32"),b=m.values,[g,y,x]=m.strides,O=n.data.get(a.dataId).values,[v,w,k]=d,I=n.data.get(s.dataId).values,[N,j,S]=h,{batchSize:T,filterHeight:C,filterWidth:$,inChannels:E,inHeight:A,inWidth:F,outChannels:R,outHeight:_,outWidth:D,strideHeight:M,strideWidth:z}=p,L=C-1-p.padInfo.top,P=$-1-p.padInfo.left,B=R/E;for(let f=0;f<T;++f)for(let t=0;t<E;++t)for(let e=0;e<A;++e){const n=e-L,r=Math.max(0,Math.ceil(n/M)),a=Math.min(_,(C+n)/M);for(let s=0;s<F;++s){const i=s-P,o=Math.max(0,Math.ceil(i/z)),u=Math.min(D,($+i)/z);let c=0;for(let e=r;e<a;++e){const r=e*M-n;for(let n=o;n<u;++n){const a=v*f+w*e+k*n,s=N*(C-1-r)+j*($-1-(n*z-i))+S*t;for(let e=0;e<B;++e){c+=O[a+(t*B+e)]*I[s+e]}}}b[g*f+y*e+x*s+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Vh={kernelName:f.Diag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=f.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(f.buffer)([a,a],r.dtype),o=i.values;for(let c=0;c<s.length;c++)o[c*a+c]=s[c];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Wh={kernelName:f.Dilation2D,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a}=t,{strides:s,pad:i,dilations:o}=n,u=e,c=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:x,padInfo:O,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:j,outShape:S}=f.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=f.util.sizeFromShape(S),C=S.length,$=f.util.getArrayFromDType(r.dtype,T);for(let E=0;E<p;++E)for(let t=0;t<y;++t){const e=t*v-O.top;for(let n=0;n<x;++n){const s=n*w-O.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const n=e+t*N;if(n>=0&&n<m)for(let e=0;e<I;++e){const u=s+e*j;if(u>=0&&u<b){const s=f.util.locToIndex([E,n,u,i],l,f.util.computeStrides(r.shape)),p=f.util.locToIndex([t,e,i],h,f.util.computeStrides(a.shape)),m=c[s]+d[p];m>o&&(o=m)}}}$[f.util.locToIndex([E,t,n,i],C,f.util.computeStrides(S))]=o}}}return{dataId:u.write(f.util.toTypedArray($,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},Uh={kernelName:f.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,l=f.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=f.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:O,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:j}=f.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);f.util.assert(s.rank===j.length,(()=>`Error in ${f.Dilation2DBackpropFilter}, dy must have the same rank as output ${j.length}, but got ${s.rank}`));const S=f.util.toNestedArray(j,c.data.get(s.dataId).values),T=f.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let f=0;f<h;++f)for(let t=0;t<g;++t){const e=t*O-x.top;for(let n=0;n<y;++n){const r=n*v-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let t=0;t<w;++t){const n=e+t*I;if(n>=0&&n<p)for(let e=0;e<k;++e){const u=r+e*N;if(u>=0&&u<m){const r=l[f][n][u][a]+d[t][e][a];r>s&&(s=r,i=t,o=e)}}}T[i][o][a]+=S[f][t][n][a]}}}return{dataId:c.write(f.util.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Kh={kernelName:f.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:a,dy:s}=t,{strides:i,pad:o,dilations:u}=n,c=e,l=f.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=f.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:x,strideHeight:O,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:j}=f.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);f.util.assert(s.rank===j.length,(()=>`Error in ${f.Dilation2DBackpropInput}, dy must have the same rank as output ${j.length}, but got ${s.rank}`));const S=f.util.toNestedArray(j,c.data.get(s.dataId).values),T=f.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let f=0;f<h;++f)for(let t=0;t<g;++t){const e=t*O-x.top;for(let n=0;n<y;++n){const r=n*v-x.left;for(let a=0;a<b;++a){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,o=r<0?0:r;for(let t=0;t<w;++t){const n=e+t*I;if(n>=0&&n<p)for(let e=0;e<k;++e){const u=r+e*N;if(u>=0&&u<m){const r=l[f][n][u][a]+d[t][e][a];r>s&&(s=r,i=n,o=u)}}}T[f][i][o][a]+=S[f][t][n][a]}}}return{dataId:c.write(f.util.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Gh=Yl(((t,e)=>t*e)),Hh=md(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),qh=fd(f.Multiply,Gh,Hh),Xh={kernelName:f.Multiply,backendName:"cpu",kernelFunc:qh};function Yh(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;let o;Ll(a,"sum"),o="bool"===a.dtype?hd({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Gl({inputs:{x:a},backend:n});const u=o.shape.length,c=f.util.parseAxisParam(s,o.shape),l=f.backend_util.getAxesPermutation(c,u);let d=c,h=o;null!=l&&(h=Fd({inputs:{x:o},backend:n,attrs:{perm:l}}),d=f.backend_util.getInnerMostAxes(d.length,u)),f.backend_util.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,m]=f.backend_util.computeOutAndReduceShapes(h.shape,d);let b=cd(n,p,f.backend_util.upcastType(h.dtype,"int32"));const g=f.util.sizeFromShape(m),y=n.data.get(b.dataId).values,x=n.data.get(h.dataId).values;for(let f=0;f<y.length;++f){const t=f*g;let e=0;for(let n=0;n<g;++n)e+=x[t+n];y[f]=e}if(i){const t=b;b=Od({inputs:{x:b},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(b.shape,c)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=l&&n.disposeIntermediateTensorInfo(h),b}const Jh={kernelName:f.Sum,backendName:"cpu",kernelFunc:Yh};const Zh={kernelName:f.Einsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:a}=r,s=e,{allDims:i,summedDims:o,idDims:u}=f.backend_util.decodeEinsumEquation(a,s.length);f.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=f.backend_util.getEinsumComputePath(o,u),d=l.length;let h=null,p=i.length;const m=[];for(let b=0;b<d;++b){for(const t of l[b]){const{permutationIndices:e,expandDims:r}=f.backend_util.getEinsumPermutation(p,u[t]);let a;f.backend_util.isIdentityPermutation(e)?a=s[t]:(a=Fd({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const i=a.shape.slice();for(let t=0;t<r.length;++t)i.splice(r[t],0,1);f.util.arraysEqual(a.shape,i)||(a=Od({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=qh({inputs:{a:a,b:h},backend:n}),m.push(h))}b<d-1&&(c[b]>=0&&(h=Yh({inputs:{x:h},backend:n,attrs:{axis:c[b]-(i.length-p),keepDims:!1}}),m.push(h)),p--)}for(const f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}};const Qh={kernelName:f.EluGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:a}=e;Ll([r,a],"eluGrad");const s=new Float32Array(f.util.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<i.length;++u){const t=i[u];s[u]=t>=1?o[u]:o[u]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},tp=Yl(((t,e)=>t===e?1:0)),ep=fd(f.Equal,tp,null,"bool"),np={kernelName:f.Equal,backendName:"cpu",kernelFunc:ep},rp=f.backend_util.ERF_P,ap=f.backend_util.ERF_A1,sp=f.backend_util.ERF_A2,ip=f.backend_util.ERF_A3,op=f.backend_util.ERF_A4,up=f.backend_util.ERF_A5,cp=Vl(f.Erf,(t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+rp*n);return e*(1-((((up*r+op)*r+ip)*r+sp)*r+ap)*r*Math.exp(-n*n))})),lp={kernelName:f.Erf,backendName:"cpu",kernelFunc:cp},dp=dh((t=>Math.exp(t))),hp=Wl(f.Exp,dp),pp={kernelName:f.Exp,backendName:"cpu",kernelFunc:hp};function fp(t){const{inputs:e,backend:n,attrs:r}=t,{input:a}=e,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(f.util.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),Od({inputs:{x:a},backend:n,attrs:{shape:o}})}const mp={kernelName:f.ExpandDims,backendName:"cpu",kernelFunc:fp},bp=dh((t=>Math.expm1(t))),gp=Wl(f.Expm1,bp),yp={kernelName:f.Expm1,backendName:"cpu",kernelFunc:gp},xp=Yl(((t,e)=>t/e)),Op=fd(f.RealDiv,xp),vp={kernelName:f.RealDiv,backendName:"cpu",kernelFunc:Op},wp=Yl(((t,e)=>t-e)),kp=md(((t,e,n,r)=>({real:t-n,imag:e-r}))),Ip=fd(f.Sub,wp,kp),Np={kernelName:f.Sub,backendName:"cpu",kernelFunc:Ip};function jp(t,e,n){const r=t.shape,a=r[0],s=r[1],i=n.data.get(t.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=f.util.sizeFromShape(c),d=f.util.getTypedArrayFromDType("float32",l),h=f.util.getTypedArrayFromDType("float32",l);for(let g=0;g<a;g++){const t=sh({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=sh({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=od({inputs:{real:t,imag:r},backend:n}),{real:i,imag:c}=Sp(a,e,n),l=f.backend_util.mergeRealAndImagArrays(i,c);for(let e=0;e<s;e++){const t=f.backend_util.getComplexWithIndex(l,e);d[g*s+e]=t.real,h[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(c,"float32",d),m=n.makeTensorInfo(c,"float32",h),b=od({inputs:{real:p,imag:m},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}function Sp(t,e,n){const r=f.util.sizeFromShape(t.shape),a=n.data.get(t.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const a=Tp(s,i,r,e,n),o=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(o,"float32",a.real),e=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",f.util.createScalarValue(r,"float32")),i=Gl({inputs:{x:s},backend:n}),u=vp.kernelFunc({inputs:{a:t,b:s},backend:n}),c=vp.kernelFunc({inputs:{a:e,b:i},backend:n}),l=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:d}}return a}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let a=0;a<e;a++){let s=0,i=0;for(let r=0;r<e;r++){const o=f.backend_util.exponent(a*r,e,n),u=f.backend_util.getComplexWithIndex(t,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=e,i/=e),f.backend_util.assignToTypedArray(r,s,i,a)}return r}(f.backend_util.mergeRealAndImagArrays(s,i),r,e);return f.backend_util.splitRealAndImagArrays(t)}var o}function Tp(t,e,n,r,a){if(1===n)return{real:t,imag:e};const s=f.backend_util.mergeRealAndImagArrays(t,e),i=n/2,o=f.backend_util.complexWithEvenIndex(s),u=o.real,c=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",c),p=od({inputs:{real:d,imag:h},backend:a}),m=f.backend_util.complexWithOddIndex(s),b=m.real,g=m.imag,y=[b.length],x=a.makeTensorInfo(y,"float32",b),O=a.makeTensorInfo(y,"float32",g),v=od({inputs:{real:x,imag:O},backend:a}),w=Tp(u,c,i,r,a),k=w.real,I=w.imag,N=[k.length],j=a.makeTensorInfo(N,"float32",k),S=a.makeTensorInfo(N,"float32",I),T=od({inputs:{real:j,imag:S},backend:a}),C=Tp(b,g,i,r,a),$=C.real,E=C.imag,A=[$.length],F=a.makeTensorInfo(A,"float32",$),R=a.makeTensorInfo(A,"float32",E),_=od({inputs:{real:F,imag:R},backend:a}),D=f.backend_util.exponents(n,r),M=[D.real.length],z=a.makeTensorInfo(M,"float32",D.real),L=a.makeTensorInfo(M,"float32",D.imag),P=od({inputs:{real:z,imag:L},backend:a}),B=qh({inputs:{a:P,b:_},backend:a}),V=yd({inputs:{a:T,b:B},backend:a}),W=Ip({inputs:{a:T,b:B},backend:a}),U=ld({inputs:{input:V},backend:a}),K=ld({inputs:{input:W},backend:a}),G=xh({inputs:{input:V},backend:a}),H=xh({inputs:{input:W},backend:a}),q=vh({inputs:[U,K],backend:a,attrs:{axis:0}}),X=vh({inputs:[G,H],backend:a,attrs:{axis:0}}),Y=a.data.get(q.dataId).values,J=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(X),{real:Y,imag:J}}const Cp={kernelName:f.FFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=f.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Od({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=jp(i,!1,n),u=Od({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function $p(t){const{backend:e,attrs:n}=t,{shape:r,value:a,dtype:s}=n,i=s||f.util.inferDtype(a),o=f.util.getArrayFromDType(i,f.util.sizeFromShape(r));return function(t,e,n){t.fill(e)}(o,a),e.makeTensorInfo(r,i,o)}const Ep={kernelName:f.Fill,backendName:"cpu",kernelFunc:$p};const Ap={kernelName:f.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,a=n,s=f.util.getTypedArrayFromDType(r.dtype,f.util.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let d=0;d<i;d++){const t=d*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const d=[i,e,r,o][2],h=Math.round(u-d),p=t+n+a+o;let f=l[p];if(h>=0&&h<u){f=l[t+n+h*c+o]}s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Fp=dh((t=>Math.floor(t))),Rp=Wl(f.Floor,Fp),_p={kernelName:f.Floor,backendName:"cpu",kernelFunc:Rp},Dp=Yl(((t,e)=>Math.floor(t/e))),Mp=fd(f.FloorDiv,Dp,null,"int32"),zp={kernelName:f.FloorDiv,backendName:"cpu",kernelFunc:Mp};const Lp={kernelName:f.FusedConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=kh({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=yd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=id(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};const Pp={kernelName:f.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=zh({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const t=m;m=yd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=id(n,m,p,o,f),n.disposeIntermediateTensorInfo(t)}return m}};const Bp={kernelName:f.GatherNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:a}=e,s=f.util.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,c,l,d]=f.backend_util.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=Object(f.buffer)([c,l],r.dtype),p=n.data.get(a.dataId).values,m=n.data.get(r.dataId).values;for(let f=0;f<c;f++){const t=[];let e=0;for(let n=0;n<o;n++){const r=p[f*o+n];e+=r*d[n],t.push(r)}if(e<0||e>=s/l)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let n=0;n<l;n++)h.values[f*l+n]=m[e*l+n]}return n.makeTensorInfo(u,h.dtype,h.values)}};function Vp(t,e,n){const r=Object(f.buffer)(n,t.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),s=n[0],i=n[2],o=e.locToIndex([s,i]);n[2]=e.values[o];const u=t.locToIndex(n);r.values[a]=t.values[u]}return r}const Wp={kernelName:f.GatherV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,indices:s}=e,{axis:i,batchDims:o}=r;Ll([a,s],"gatherV2");let u=o;null==o&&(u=0);const c=f.util.sizeFromShape(s.shape),l=f.util.parseAxisParam(i,a.shape)[0],d=f.backend_util.segment_util.collectGatherOpShapeInfo(a,s,l,u),h=Od({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),p=Od({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,c/d.batchSize]}}),m=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],b=n.bufferSync(p),g=Vp(n.bufferSync(h),b,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(d.outputShape,g.dtype,g.values)}},Up=Yl(((t,e)=>t>e?1:0)),Kp=fd(f.Greater,Up,null,"bool"),Gp={kernelName:f.Greater,backendName:"cpu",kernelFunc:Kp},Hp=Yl(((t,e)=>t>=e?1:0)),qp=fd(f.GreaterEqual,Hp,null,"bool"),Xp={kernelName:f.GreaterEqual,backendName:"cpu",kernelFunc:qp};const Yp={kernelName:f.IFFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,a=f.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Od({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=jp(i,!0,n),u=Od({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Jp=Vl(f.IsFinite,(t=>Number.isFinite(t)?1:0),"bool"),Zp={kernelName:f.IsFinite,backendName:"cpu",kernelFunc:Jp},Qp=Vl(f.IsInf,(t=>Math.abs(t)===1/0?1:0),"bool"),tf={kernelName:f.IsInf,backendName:"cpu",kernelFunc:Qp},ef=Vl(f.IsNan,(t=>Number.isNaN(t)?1:0),"bool"),nf={kernelName:f.IsNan,backendName:"cpu",kernelFunc:ef},rf=Yl(((t,e)=>t<e?1:0)),af=fd(f.Less,rf,null,"bool"),sf={kernelName:f.Less,backendName:"cpu",kernelFunc:af},of=Yl(((t,e)=>t<=e?1:0)),uf=fd(f.LessEqual,of,null,"bool"),cf={kernelName:f.LessEqual,backendName:"cpu",kernelFunc:uf};function lf(t,e,n){const r=(e-t)/(n-1),a=f.util.makeZerosTypedArray(n,"float32");a[0]=t;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}const df={kernelName:f.LinSpace,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=lf(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}},hf=dh((t=>Math.log(t))),pf=Wl(f.Log,hf),ff={kernelName:f.Log,backendName:"cpu",kernelFunc:pf},mf=Vl(f.Log1p,(t=>Math.log1p(t))),bf={kernelName:f.Log1p,backendName:"cpu",kernelFunc:mf},gf=Yl(((t,e)=>t&&e)),yf=fd(f.LogicalAnd,gf,null,"bool"),xf={kernelName:f.LogicalAnd,backendName:"cpu",kernelFunc:yf},Of=Vl(f.LogicalNot,(t=>t?0:1),"bool"),vf={kernelName:f.LogicalNot,backendName:"cpu",kernelFunc:Of},wf=Yl(((t,e)=>t||e)),kf=fd(f.LogicalOr,wf,null,"bool"),If={kernelName:f.LogicalOr,backendName:"cpu",kernelFunc:kf};const Nf={kernelName:f.LRN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{depthRadius:s,bias:i,alpha:o,beta:u}=r;Ll(a,"LRN");const c=a.shape[3],l=c-1,d=n.data.get(a.dataId).values,h=f.util.sizeFromShape(a.shape),p=new Float32Array(h);function m(t){const e=t%c;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,l);let a=0;for(;n<=r;n++){const t=d[n];a+=t*t}return a}for(let f=0;f<h;f++){const t=m(f),e=d[f]*Math.pow(i+o*t,-u);p[f]=e}return n.makeTensorInfo(a.shape,a.dtype,p)}};const jf={kernelName:f.LRNGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,y:s,dy:i}=e,{depthRadius:o,bias:u,alpha:c,beta:l}=r;Ll(i,"LRNGrad");const d=f.util.sizeFromShape(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let f=0;f<y;f++){const t=f%h,e=f-t+Math.max(0,t-o),n=f-t+Math.min(h,t+o+1);let r=0;for(let a=e;a<n;a++)r+=Math.pow(m[a],2);r=c*r+u;for(let a=e;a<n;a++){let t=-2*c*l*m[a]*b[f]/r;f===a&&(t+=Math.pow(r,-l)),t*=p[f],g[a]+=t}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function Sf(t,e,n,r){const a=f.util.getTypedArrayFromDType(r,f.util.sizeFromShape(n));for(let s=0;s<a.length;++s){const n=s*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}a[s]=r}return a}function Tf(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const c=u.length,l=f.util.parseAxisParam(s,u);let d=l;const h=f.backend_util.getAxesPermutation(d,c);let p=o.data.get(a.dataId).values;if(null!=h){const t=new Array(c);for(let e=0;e<t.length;e++)t[e]=u[h[e]];p=Ad(p,u,a.dtype,h,t),d=f.backend_util.getInnerMostAxes(d.length,c),u=t}Ll(a,"max"),f.backend_util.assertAxesAreInnerMostDims("max",d,c);const[m,b]=f.backend_util.computeOutAndReduceShapes(u,d),g=Sf(p,f.util.sizeFromShape(b),m,a.dtype),y=o.write(g,m,a.dtype);let x=m;if(i){x=f.backend_util.expandShapeToKeepDim(m,l)}return{dataId:y,shape:x,dtype:a.dtype}}const Cf={kernelName:f.Max,backendName:"cpu",kernelFunc:Tf},$f=Yl(((t,e)=>Math.max(t,e))),Ef=fd(f.Maximum,$f),Af={kernelName:f.Maximum,backendName:"cpu",kernelFunc:Ef};const Ff={kernelName:f.MaxPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;Ll(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=f.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&f.util.arraysEqual(c.inShape,c.outShape))l=Gl({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=f.util.computeStrides(a.shape),r=Yd(t,a.shape,a.dtype,e,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const Rf={kernelName:f.MaxPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Ll(a,"maxPool3d");const l=f.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=Zd(n.data.get(a.dataId).values,a.shape,a.dtype,f.util.computeStrides(a.shape),l,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const _f={kernelName:f.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Ll([a,s],"maxPool3DGrad");const l=f.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=function(t,e){const n=Object(f.buffer)(e.outShape,"int32"),r=e.strideDepth,a=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,m=e.padInfo.left;for(let f=0;f<e.batchSize;++f)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*r-h;let x=y;for(;x<0;)x+=i;const O=Math.min(e.inDepth,c+y);for(let r=0;r<e.outHeight;++r){const c=r*a-p;let h=c;for(;h<0;)h+=o;const v=Math.min(e.inHeight,l+c);for(let a=0;a<e.outWidth;++a){const p=a*s-m;let w=p;for(;w<0;)w+=u;const k=Math.min(e.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,N=-1;for(let e=x;e<O;e+=i){const n=e-y;for(let r=h;r<v;r+=o){const a=r-c;for(let s=w;s<k;s+=u){const i=s-p,o=t.get(f,e,r,s,b);o>=I&&(I=o,N=n*l*d+a*l+i)}}}n.set(N,f,g,r,a,b)}}}return n}(n.bufferSync(s),l),h=l.strideDepth,p=l.strideHeight,m=l.strideWidth,b=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,x=l.effectiveFilterDepth,O=l.effectiveFilterHeight,v=l.effectiveFilterWidth,w=x-1-l.padInfo.front,k=v-1-l.padInfo.left,I=O-1-l.padInfo.top,N=Object(f.buffer)(s.shape,"float32"),j=n.bufferSync(a);for(let f=0;f<l.batchSize;++f)for(let t=0;t<l.inChannels;++t)for(let e=0;e<l.inDepth;++e)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=e-w,s=n-I,i=r-k;let o=0;for(let e=0;e<x;e+=b){const n=(a+e)/h;if(!(n<0||n>=l.outDepth||Math.floor(n)!==n))for(let r=0;r<O;r+=g){const a=(s+r)/p;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let s=0;s<v;s+=y){const u=(i+s)/m;if(u<0||u>=l.outWidth||Math.floor(u)!==u)continue;const c=x*O*v-1-d.get(f,n,a,u,t)===e*O*v+r*v+s?1:0;if(0===c)continue;o+=j.get(f,n,a,u,t)*c}}}N.set(o,f,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Df={kernelName:f.MaxPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;Ll([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=f.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=n.data.get(o.dataId).values,m=Object(f.buffer)(h.outShape,o.dtype,Jd(p,o.shape,o.dtype,h).values),b=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,x=h.dilationWidth,O=h.effectiveFilterHeight,v=h.effectiveFilterWidth,w=v-1-h.padInfo.left,k=O-1-h.padInfo.top,I=Object(f.buffer)(o.shape,"float32"),N=n.data.get(a.dataId).values,j=Object(f.buffer)(a.shape,"float32",N);for(let f=0;f<h.batchSize;++f)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inHeight;++e)for(let n=0;n<h.inWidth;++n){const r=e-k,a=n-w;let s=0;for(let e=0;e<O;e+=y){const n=(r+e)/b;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=x){const i=(a+r)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const o=O*v-1-m.get(f,n,i,t)===e*v+r?1:0;if(0===o)continue;s+=j.get(f,n,i,t)*o}}I.set(s,f,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Mf={kernelName:f.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;Ll(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=f.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=function(t,e,n,r,a){const s=Yd(t,0,n,f.util.computeStrides(e),a,"max"),i=Jd(t,e,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,l),p=u.write(d,l.outShape,r.dtype),m=u.write(h,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:m,shape:l.outShape,dtype:"int32"}]}};const zf={kernelName:f.Mean,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,o=f.util.parseAxisParam(s,a.shape),u=f.backend_util.computeOutAndReduceShapes(a.shape,o)[1],c=f.util.sizeFromShape(u),l=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(d);const h=hd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=Op({inputs:{a:h,b:d},backend:n});l.push(p);const m=Yh({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((t=>n.disposeIntermediateTensorInfo(t))),m}};const Lf={kernelName:f.Min,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;Ll(a,"min");const o=f.util.parseAxisParam(s,a.shape);let u=o;const c=f.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Fd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=f.backend_util.getInnerMostAxes(u.length,a.shape.length)),f.backend_util.assertAxesAreInnerMostDims("min",u,l.shape.length);const[d,h]=f.backend_util.computeOutAndReduceShapes(l.shape,u),p=f.util.sizeFromShape(h),m=f.util.makeZerosTypedArray(f.util.sizeFromShape(d),l.dtype),b=n.data.get(l.dataId).values;for(let f=0;f<m.length;++f){const t=f*p;let e=b[t];for(let n=0;n<p;++n){const r=b[t+n];r<e&&(e=r)}m[f]=e}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,m);if(i){const t=Od({inputs:{x:g},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Pf=Yl(((t,e)=>Math.min(t,e))),Bf=fd(f.Minimum,Pf),Vf={kernelName:f.Minimum,backendName:"cpu",kernelFunc:Bf};const Wf={kernelName:f.MirrorPad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,mode:i}=r;Ll(a,"mirrorPad");const o=s.map(((t,e)=>t[0]+a.shape[e]+t[1])),u=s.map((t=>t[0])),c=s.map(((t,e)=>t[0]+a.shape[e])),l="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=f.util.computeStrides(a.shape),m=f.util.sizeFromShape(o),b=o.length,g=f.util.computeStrides(o),y=f.util.getTypedArrayFromDType(a.dtype,m);for(let x=0;x<m;x++){let t=f.util.indexToLoc(x,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-l:t[n]>=c[n]&&(t[n]=2*(c[n]-1)-t[n]+l);t=t.map(((t,e)=>t-u[e]));const e=f.util.locToIndex(t,h,p);y[x]=d[e]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},Uf=Yl(((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})),Kf=fd(f.Mod,Uf),Gf={kernelName:f.Mod,backendName:"cpu",kernelFunc:Kf};function Hf(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=f.util.parseAxisParam([o],a.shape),c=Tf({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=f.backend_util.expandShapeToKeepDim(c.shape,u),d=Od({inputs:{x:c},backend:n,attrs:{shape:l}}),h=Ip({inputs:{a:a,b:d},backend:n}),p=hp({inputs:{x:h},backend:n}),m=Yh({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),b=Od({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Op({inputs:{a:p,b:b},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const qf={kernelName:f.Softmax,backendName:"cpu",kernelFunc:Hf};const Xf={kernelName:f.Multinomial,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:s,seed:i,normalized:o}=r;Ll(a,"multinomial");const u=o?a:Hf({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,s],p=f.util.makeZerosTypedArray(f.util.sizeFromShape(h),"int32");for(let f=0;f<c;++f){const t=f*l,e=new Float32Array(l-1);e[0]=d[t];for(let a=1;a<e.length;++a)e[a]=e[a-1]+d[t+a];const n=Al.alea(i.toString()),r=f*s;for(let a=0;a<s;++a){const t=n();p[r+a]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){p[r+a]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}};function Yf(t,e,n){const r=f.util.createScalarValue(-1,n);return Gh([],e,r,t,n)}const Jf={kernelName:f.Neg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Ll(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Yf(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Zf=f.kernel_impls.nonMaxSuppressionV3Impl;const Qf={kernelName:f.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Ll(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=Zf(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},tm=f.kernel_impls.nonMaxSuppressionV4Impl;const em={kernelName:f.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;Ll(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=tm(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},nm=f.kernel_impls.nonMaxSuppressionV5Impl;const rm={kernelName:f.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;Ll(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=nm(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},am=Yl(((t,e)=>t!==e?1:0)),sm=fd(f.NotEqual,am,null,"bool"),im={kernelName:f.NotEqual,backendName:"cpu",kernelFunc:sm};const om={kernelName:f.OneHot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a}=e,{depth:s,onValue:i,offValue:o}=r;Ll(a,"oneHot");const u=f.util.sizeFromShape(a.shape),c=new Float32Array(u*s);c.fill(o);const l=n.data.get(a.dataId).values;for(let d=0;d<u;++d)l[d]>=0&&l[d]<s&&(c[d*s+l[d]]=i);return n.makeTensorInfo([...a.shape,s],"int32",c)}};function um(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=ld({inputs:{input:r},backend:n}),e=um({inputs:{x:t},backend:n}),a=xh({inputs:{input:r},backend:n}),s=um({inputs:{x:a},backend:n}),i=od({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return $p({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const cm={kernelName:f.ZerosLike,backendName:"cpu",kernelFunc:um};const lm={kernelName:f.OnesLike,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const e=ld({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),s=xh({inputs:{input:a},backend:r}),i=um({inputs:{x:s},backend:r}),o=od({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return $p({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function dm(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r;if(1===e.length)return fp({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const s=e[0].shape,i=e[0].dtype;e.forEach((t=>{f.util.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),f.util.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=vh({inputs:e.map((t=>{const e=fp({inputs:{input:t},backend:n,attrs:{dim:a}});return o.push(e),e})),backend:n,attrs:{axis:a}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}const hm={kernelName:f.Pack,backendName:"cpu",kernelFunc:dm};const pm={kernelName:f.PadV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r;Ll(a,"pad");const o=s.map(((t,e)=>t[0]+a.shape[e]+t[1])),u=s.map((t=>t[0])),c=n.data.get(a.dataId).values,l=f.util.sizeFromShape(a.shape),d=a.shape.length,h=f.util.computeStrides(a.shape),p=f.util.sizeFromShape(o),m=o.length,b=f.util.computeStrides(o),g=f.util.getTypedArrayFromDType(a.dtype,p);0!==i&&g.fill(i);for(let y=0;y<l;y++){const t=f.util.indexToLoc(y,d,h).map(((t,e)=>t+u[e]));g[f.util.locToIndex(t,m,b)]=c[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},fm=Yl(((t,e)=>Math.pow(t,e))),mm=fd(f.Pow,fm),bm={kernelName:f.Pow,backendName:"cpu",kernelFunc:mm};function gm(t,e,n,r){const[a,s]=f.backend_util.computeOutAndReduceShapes(t,r),i=Object(f.upcastType)(e,"int32"),o=f.util.makeZerosTypedArray(f.util.sizeFromShape(a),i),u=f.util.sizeFromShape(s);for(let c=0;c<o.length;++c){const t=c*u;let e=1;for(let r=0;r<u;++r)e*=n[t+r];o[c]=e}return{outVals:o,outShape:a,outDtype:i}}const ym={kernelName:f.Prod,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;Ll(a,"prod");const o=a.shape.length,u=f.util.parseAxisParam(s,a.shape),c=f.backend_util.getAxesPermutation(u,o);let l=u,d=a;const h=[];null!=c&&(d=Fd({inputs:{x:a},backend:n,attrs:{perm:c}}),h.push(d),l=f.backend_util.getInnerMostAxes(l.length,o));const p=n.data.get(d.dataId).values,{outVals:m,outShape:b,outDtype:g}=gm(d.shape,d.dtype,p,l);let y=b;return i&&(y=f.backend_util.expandShapeToKeepDim(b,u)),h.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(y,g,m)}};function xm(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return f.util.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((e-t)/n)),s=f.util.makeZerosTypedArray(a,r);e<t&&1===n&&(n=-1),s[0]=t;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}const Om={kernelName:f.Range,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,dtype:s,step:i}=n,o=xm(r,a,i,s);return e.makeTensorInfo([o.length],s,o)}},vm=Vl(f.Reciprocal,(t=>1/t)),wm={kernelName:f.Reciprocal,backendName:"cpu",kernelFunc:vm};const km={kernelName:f.ResizeBilinear,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ll(a,"resizeBilinear");const u=f.util.computeStrides(a.shape),[c,l]=o,[d,h,p,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(f.util.sizeFromShape([d,c,l,m])),y=[s&&c>1?h-1:h,s&&l>1?p-1:p],x=[s&&c>1?c-1:c,s&&l>1?l-1:l];let O=0;const v=y[0]/x[0],w=y[1]/x[1];for(let f=0;f<d;f++)for(let t=0;t<c;t++){let e;e=i?v*(t+.5)-.5:v*t;const n=Math.max(0,Math.floor(e)),r=e-n,a=Math.min(h-1,Math.ceil(e)),s=f*u[0]+n*u[1],o=f*u[0]+a*u[1];for(let t=0;t<l;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),a=e-n,c=Math.min(p-1,Math.ceil(e)),l=s+n*u[2],d=o+n*u[2],h=s+c*u[2],f=o+c*u[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],s=e+(b[h+t]-e)*a,i=s+(n+(b[f+t]-n)*a-s)*r;g[O++]=i}}}return n.makeTensorInfo([d,c,l,m],"float32",g)}};const Im={kernelName:f.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r;Ll([s,a],"resizeBilinearGrad");const o=f.util.computeStrides(a.shape),[u,c,l,d]=a.shape,[,h,p]=s.shape,m=new Float32Array(u*c*l*d),b=[i&&h>1?c-1:c,i&&p>1?l-1:l],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=b[0]/g[0],x=b[1]/g[1],O=n.data.get(s.dataId).values;let v=0;for(let f=0;f<u;f++){const t=f*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let t=0;t<p;t++){const e=t*x,n=Math.floor(e),r=Math.min(Math.ceil(e),l-1),a=e-n,c=1-a,p=s+n*o[2],f=s+r*o[2],b=i+n*o[2],g=i+r*o[2],y=h*c,w=h*a,k=u*c,I=u*a;for(let t=0;t<d;t++){const e=O[v++];m[p+t]+=e*y,m[f+t]+=e*w,m[b+t]+=e*k,m[g+t]+=e*I}}}}return n.makeTensorInfo([u,l,c,d],"float32",m)}};const Nm={kernelName:f.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r;Ll(a,"resizeNearestNeighbor");const u=f.util.computeStrides(a.shape),[c,l]=o,[d,h,p,m]=a.shape,b=n.data.get(a.dataId).values,g=new Float32Array(d*c*l*m),y=[s&&c>1?h-1:h,s&&l>1?p-1:p],x=[s&&c>1?c-1:c,s&&l>1?l-1:l],O=y[0]/x[0],v=y[1]/x[1];let w=0;for(let f=0;f<d;f++){const t=f*u[0];for(let e=0;e<c;e++){const n=i?O*(e+.5):O*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let t=0;t<l;t++){const e=i?v*(t+.5):v*t;let n=Math.min(p-1,s?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let t=0;t<m;t++){const e=b[r+t];g[w++]=e}}}}return n.makeTensorInfo([d,c,l,m],a.dtype,g)}};const jm={kernelName:f.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r;Ll([s,a],"resizeNearestNeighborGrad");const o=f.util.computeStrides(a.shape),u=f.util.computeStrides(s.shape),[c,l,d,h]=a.shape,[,p,m]=s.shape,b=new Float32Array(c*l*d*h),g=n.data.get(s.dataId).values,y=[i&&p>1?l-1:l,i&&m>1?d-1:d],x=[i&&p>1?p-1:p,i&&m>1?m-1:m],O=y[0]/x[0],v=y[1]/x[1],w=1/O,k=1/v,I=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;for(let f=0;f<c;f++){const t=f*o[0];for(let e=0;e<l;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let s=0;s<d;s++){const r=n+s*o[2],c=Math.floor(s*k),f=Math.floor(c-N/2);for(let n=0;n<h;n++){let o=0;for(let r=0;r<I;r++){const c=r+a;if(c<0||c>=p)continue;const h=t+c*u[1],b=c*O;if(e===Math.min(l-1,i?Math.round(b):Math.floor(b)))for(let t=0;t<N;t++){const e=t+f;if(e<0||e>=m)continue;const r=h+e*u[2],a=e*v;s===Math.min(d-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}b[r+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,b)}};const Sm={kernelName:f.Reverse,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dims:s}=r;Ll(a,"reverse");const i=a.shape.length,o=f.util.parseAxisParam(s,a.shape);if(0===i)return Gl({inputs:{x:a},backend:n});const u=new f.TensorBuffer(a.shape,a.dtype),c=n.bufferSync(a);for(let l=0;l<u.size;l++){const t=u.indexToLoc(l),e=t.slice();o.forEach((t=>e[t]=a.shape[t]-1-e[t])),u.set(c.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Tm={kernelName:f.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=f.util.getTypedArrayFromDType(r.dtype,f.util.sizeFromShape(r.shape)),[c,l,d,h]=r.shape,[p,m]=f.backend_util.getImageCenter(i,l,d),b=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let f=0;f<c;f++){const t=f*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[c,e,r,i],f=o[2],x=o[1];let O=(f-p)*g-(x-m)*b,v=(f-p)*b+(x-m)*g;O=Math.round(O+p),v=Math.round(v+m);let w=s;if("number"!==typeof s&&(w=3===i?255:s[i]),O>=0&&O<d&&v>=0&&v<l){w=y[t+v*(d*h)+O*h+i]}u[t+n+a+i]=w}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Cm=Vl(f.Round,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1})),$m={kernelName:f.Round,backendName:"cpu",kernelFunc:Cm},Em=dh((t=>1/Math.sqrt(t))),Am=Wl(f.Rsqrt,Em),Fm={kernelName:f.Rsqrt,backendName:"cpu",kernelFunc:Am};function Rm(t,e,n,r,a,s,i,o,u,c){const l=[r/a,a],d=t.values,h=e.values;if(0===r)return Object(f.buffer)(n,e.dtype);const p=Object(f.buffer)(l,e.dtype);p.values.fill(u);for(let f=0;f<s;f++){const t=[];let s=0;for(let e=0;e<i;e++){const n=d[f*i+e];t.push(n),s+=n*o[e]}if(s<0||s>=r/a)throw new Error(`Invalid indices: ${t} does not index into ${n}`);for(let n=0;n<a;n++)c?p.values[s*a+n]+=h[f*a+n]:p.values[s*a+n]=0===e.rank?h[0]:h[f*a+n]}return p}const _m={kernelName:f.ScatterNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a,updates:s}=e,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=f.backend_util.calculateShapes(s,a,i),h=Rm(n.bufferSync(a),n.bufferSync(s),i,d,c,u,o,l,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const Dm={kernelName:f.Select,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:a,e:s}=e;Ll([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=Object(f.upcastType)(a.dtype,s.dtype),d=f.util.makeZerosTypedArray(f.util.sizeFromShape(a.shape),l);let h=0;const p=0===i||i>1||1===a.shape.length?1:f.util.sizeFromShape(a.shape.slice(1));for(let f=0;f<o.length;f++)for(let t=0;t<p;t++)1===o[f]?d[h++]=u[f]:d[h++]=c[f];return n.makeTensorInfo(a.shape,l,d)}},Mm=f.backend_util.SELU_SCALEALPHA,zm=f.backend_util.SELU_SCALE,Lm=Vl(f.Selu,(t=>t>=0?zm*t:Mm*(Math.exp(t)-1))),Pm={kernelName:f.Selu,backendName:"cpu",kernelFunc:Lm},Bm=Vl(f.Sign,(t=>t<0?-1:t>0?1:0)),Vm={kernelName:f.Sign,backendName:"cpu",kernelFunc:Bm},Wm=Vl(f.Sin,(t=>Math.sin(t))),Um={kernelName:f.Sin,backendName:"cpu",kernelFunc:Wm},Km=Vl(f.Sinh,(t=>Math.sinh(t))),Gm={kernelName:f.Sinh,backendName:"cpu",kernelFunc:Km},Hm=Math.log(1.1920928955078125e-7)+2,qm=Vl(f.Softplus,(t=>{const e=t>-Hm,n=t<Hm,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a})),Xm={kernelName:f.Softplus,backendName:"cpu",kernelFunc:qm};const Ym={kernelName:f.SpaceToBatchND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;Ll([a],"spaceToBatchND");const o=f.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let f=1+s.length;f<a.shape.length;++f)u.push([0,0]);const c=pm.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=f.backend_util.getReshaped(c.shape,s,o,!1),d=f.backend_util.getPermuted(l.length,s.length,!1),h=f.backend_util.getReshapedPermuted(c.shape,s,o,!1),p=Od({inputs:{x:c},backend:n,attrs:{shape:l}}),m=Fd({inputs:{x:p},backend:n,attrs:{perm:d}}),b=Od({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};function Jm(t,e,n,r,a){const s=f.util.sizeFromShape(r),i=e[0],o=a.length,u=[];let c=1,l=-1;for(let f=0;f<o;++f){const t=a[f];if(-1===t){if(-1!==l)throw new Error(`only one output dimension may be -1, not both ${l} and ${f}`);l=f,u.push(1)}else{if(t<0)throw new Error(`size ${f} must be non-negative, not ${t}`);c*=t,u.push(t)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const t=Math.trunc(s/c);if(c*t!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${u}`);u[l]=t}const d=f.util.sizeFromShape(u);if(d!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const h=r.length,p=[];if(h>0){p[h-1]=1;for(let t=h-2;t>=0;--t)p[t]=p[t+1]*r[t+1]}const m=[];if(o>0){m[o-1]=1;for(let t=o-2;t>=0;--t)m[t]=m[t+1]*u[t+1]}const b=f.util.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let e=0;for(let n=0;n<h;++n)e+=t[f*h+n]*p[n];for(let t=0;t<o;++t)b[f*o+t]=Math.trunc(e/m[t]),e%=m[t]}return[b,[i,o],u]}const Zm={kernelName:f.SparseReshape,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:a,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[c,l,d]=Jm(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const Qm={kernelName:f.SparseToDense,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:a,sparseValues:s,defaultValue:i}=e,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=f.backend_util.calculateShapes(s,a,o),p=Rm(n.bufferSync(a),n.bufferSync(s),o,h,l,c,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}};const tb={kernelName:f.SplitV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{numOrSizeSplits:s,axis:i}=r,o=f.util.parseAxisParam(i,a.shape)[0],u=f.backend_util.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map((t=>{const e=[...l];e[o]=t;const r=sh({inputs:{x:a},backend:n,attrs:{begin:c,size:e}});return c[o]+=t,r}))}},eb=Vl(f.Sqrt,(t=>Math.sqrt(t))),nb={kernelName:f.Sqrt,backendName:"cpu",kernelFunc:eb},rb={kernelName:f.Square,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;Ll(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){const t=a[i];s[i]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},ab=Yl(((t,e)=>{const n=t-e;return n*n})),sb=fd(f.SquaredDifference,ab),ib={kernelName:f.SquaredDifference,backendName:"cpu",kernelFunc:sb},ob=Vl(f.Step,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),ub={kernelName:f.Step,backendName:"cpu",kernelFunc:ob};function cb(t,e,n,r){const a=Object(f.buffer)(t,e.dtype);for(let s=0;s<a.size;s++){const t=a.indexToLoc(s),i=new Array(t.length);for(let e=0;e<i.length;e++)i[e]=t[e]*n[e]+r[e];a.set(e.get(...i),...t)}return a}const lb={kernelName:f.StridedSlice,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r;Ll(a,"stridedSlice");const{nonStrided:p,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=f.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,d,h),O=Od({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(p){const t=sh({inputs:{x:O},backend:n,attrs:{begin:m,size:g}});v=Od({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some((t=>0===t)))v=n.makeTensorInfo(x,a.dtype,[]);else{const t=cb(x,n.bufferSync(O),b,m);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const w=Od({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(v),w}},db=Vl(f.Tan,(t=>Math.tan(t))),hb={kernelName:f.Tan,backendName:"cpu",kernelFunc:db},pb=Vl(f.Tanh,(t=>Math.tanh(t))),fb={kernelName:f.Tanh,backendName:"cpu",kernelFunc:pb};function mb(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(f.buffer)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const s=t.locToIndex(n);r.values[a]=t.values[s]}return r}const bb={kernelName:f.Tile,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:s}=r;Ll(a,"tile");const i=mb(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function gb(t,e,n,r,a){const s=e[e.length-1],[i,o]=[t.length/s,s],u=f.util.getTypedArrayFromDType(n,i*r),c=f.util.getTypedArrayFromDType("int32",i*r);for(let d=0;d<i;d++){const e=d*o,n=t.subarray(e,e+o),a=[];for(let t=0;t<n.length;t++)a.push({value:n[t],index:t});a.sort(((t,e)=>e.value-t.value));const s=d*r,i=u.subarray(s,s+r),l=c.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=a[t].value,l[t]=a[t].index}const l=e.slice();return l[l.length-1]=r,[Object(f.buffer)(l,n,u),Object(f.buffer)(l,"int32",c)]}const yb={kernelName:f.TopK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r;Ll(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=gb(o,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const xb={kernelName:f.Transform,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{image:a,transforms:s}=e,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,d,h,p]=a.shape,[m,b]=null!=c?c:[d,h],g=[l,m,b,p],y=f.util.computeStrides(a.shape),x=y[0],O=y[1],v=y[2],w=f.util.getTypedArrayFromDType(a.dtype,f.util.sizeFromShape(g));w.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let f=0;f<l;++f){const t=1===s.shape[0]?I:I.subarray(8*f,8*f+8);for(let e=0;e<m;++e)for(let n=0;n<b;++n)for(let r=0;r<p;++r){let a;const s=t[6]*n+t[7]*e+1;if(0===s)continue;const c=(t[0]*n+t[1]*e+t[2])/s,l=(t[3]*n+t[4]*e+t[5])/s,p=Ob(c,h,o),m=Ob(l,d,o);switch(i){case"nearest":a=wb(k,d,h,x,O,v,f,m,p,r,u);break;case"bilinear":a=kb(k,d,h,x,O,v,f,m,p,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[f*x+e*O+n*v+r]=a}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function Ob(t,e,n){switch(n){case"reflect":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=2*e;n<t&&(n=t*Math.trunc(-n/t)+n),n=n<-e?n+t:-n-1}else if(n>e-1)if(e<=1)n=0;else{const t=2*e;n-=t*Math.trunc(n/t),n>=e&&(n=t-n-1)}return f.util.clamp(0,n,e-1)}(t,e);case"wrap":return function(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const t=e-1;n+=e*(Math.trunc(-n/t)+1)}else if(n>e-1)if(e<=1)n=0;else{const t=e-1;n-=e*Math.trunc(n/t)}return f.util.clamp(0,n,e-1)}(t,e);case"nearest":return function(t,e){return f.util.clamp(0,t,e-1)}(t,e);case"constant":default:return function(t,e){return t}(t)}}function vb(t,e,n,r,a,s,i,o,u,c,l){return 0<=o&&o<e&&0<=u&&u<n?t[i*r+o*a+u*s+c]:l}function wb(t,e,n,r,a,s,i,o,u,c,l){return vb(t,e,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function kb(t,e,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*vb(t,e,n,r,a,s,i,d,h,c,l)+(u-h)*vb(t,e,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*vb(t,e,n,r,a,s,i,p,h,c,l)+(u-h)*vb(t,e,n,r,a,s,i,p,f,c,l))}function Ib(t,e,n,r){const a=f.util.parseAxisParam(e,n)[0],s=[1,n[0],1];for(let f=0;f<a;f++)s[0]*=n[f];s[1]=n[a];for(let f=a+1;f<n.length;f++)s[2]*=n[f];const i={},o=new Int32Array(n[a]),u=new f.TensorBuffer(s,r,t),c=[],l=1===s[0]&&1===s[2];for(let f=0;f<n[a];f++){let e;if(l)e=t[f].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(u.get(e,f,n));e=t.join(",")}if(void 0!==i[e])o[f]=i[e];else{const t=Object.keys(i).length;i[e]=t,o[f]=t,c.push(f)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new f.TensorBuffer(d,r);c.forEach(((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,t,r),n,e,r)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}const Nb={kernelName:f.Unique,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;Ll(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=Ib(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const jb={kernelName:f.Unpack,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let p=0;p<i;p++)p!==s&&(u[c++]=a.shape[p]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let p=0;p<h.length;p++){l[s]=p;const t=sh({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=Od({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}};const Sb={kernelName:f.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,segmentIds:s}=e,{numSegments:i}=r;Ll(a,"unsortedSegmentSum");const o=[],u=[],c=a.shape.length-s.shape.length;let l=s;for(let h=0;h<c;++h){const t=fp({inputs:{input:l},backend:n,attrs:{dim:h+1}});l=t,u.push(t)}for(let h=0;h<i;++h){const t=f.util.createScalarValue(h,"int32"),e=n.makeTensorInfo([],"int32",t),r=ep({inputs:{a:e,b:l},backend:n}),s=hd({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=qh({inputs:{a:s,b:a},backend:n}),c=Yh({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(c),u.push(e),u.push(r),u.push(s),u.push(i),u.push(c)}const d=dm({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),d}},Tb=[Id,jd,Td,$d,xd,Ed,_d,Dd,Md,zd,Pd,Vd,Ud,Hd,Xd,Qd,th,eh,nh,kd,rh,oh,lh,pd,fh,bh,ud,gh,wh,Nh,jh,Ih,Th,Ch,Sh,Eh,Fh,Rh,_h,Dh,Mh,Lh,Ph,Bh,Vh,Wh,Kh,Uh,vp,Zh,Kl,Qh,np,lp,pp,mp,yp,Cp,Ep,Ap,_p,zp,Lp,Pp,Bp,Wp,Gp,Xp,Hl,Yp,Oh,Zp,tf,nf,Xl,sf,cf,df,ff,bf,xf,vf,If,Nf,jf,Af,Ff,Rf,_f,Df,Mf,Cf,zf,Lf,Vf,Wf,Gf,Xf,Xh,Jf,Qf,em,rm,im,om,lm,hm,pm,bm,Ql,ym,Om,dd,wm,ed,rd,vd,km,Im,Nm,jm,Sm,Tm,$m,Fm,_m,Dm,Pm,sd,Vm,Um,Gm,ih,qf,Xm,Ym,Zm,Qm,tb,nb,rb,ib,ub,lb,Np,Jh,hb,fb,bb,yb,Rd,xb,Nb,jb,Sb,cm];for(const fj of Tb)Object(f.registerKernel)(fj);const Cb={},$b={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Eb(t){if(!(t in Cb)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Cb[t]}),!1),1===t)return e.getContext("webgl",$b)||e.getContext("experimental-webgl",$b);return e.getContext("webgl2",$b)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Cb[t]=e}const e=Cb[t];return e.isContextLost()?(delete Cb[t],Eb(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Cb[t])}var Ab,Fb,Rb;function _b(t,e){return[e,t]}function Db(t){const e=f.util.sizeFromShape(t),n=Math.ceil(e/4);return f.util.sizeToSquarishShape(n)}function Mb(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function zb(t,e){const n=t;let r,a,s,i,o,u,c,l,d,h;return 2===Object(f.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=t.RGBA,a=t.RGBA,s=t.RGBA,i=n.RGBA,o=t.RGBA,c=4,l=4,d=null!=e?e.HALF_FLOAT_OES:null,h=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function Lb(t,e){const n=e();return Object(f.env)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Ab||(Ab={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Fb||(Fb={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Rb||(Rb={}));function Pb(t){return!!(Object(f.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Bb(t,e){return Yb(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}function Vb(t,e){const n=Yb(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Lb(t,(()=>t.shaderSource(n,e))),Lb(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Wb.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const r=+n[1],a=t.split("\n"),s=a.length.toString().length+2,i=a.map(((t,e)=>f.util.rightPad((e+1).toString(),s)+t));let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${f.util.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Wb=/ERROR: [0-9]+:([0-9]+):/g;function Ub(t,e){if(Lb(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Kb(t,e,n,r,a,s,i){const o=t.getAttribLocation(e,n);return-1!==o&&(Lb(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),Lb(t,(()=>t.vertexAttribPointer(o,a,t.FLOAT,!1,s,i))),Lb(t,(()=>t.enableVertexAttribArray(o))),!0)}function Gb(t,e,n,r){Lb(t,(()=>function(t,e,n){Jb(t,n),Lb(t,(()=>t.activeTexture(t.TEXTURE0+n))),Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),Lb(t,(()=>t.uniform1i(n,r)))}function Hb(t,e,n){Lb(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),Lb(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function qb(t,e){Lb(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),Lb(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function Xb(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function Yb(t,e,n){const r=Lb(t,(()=>e()));if(null==r)throw new Error(n);return r}function Jb(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Zb(t,e=2){return f.util.sizeFromShape(t.slice(0,t.length-e))}function Qb(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function tg(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Zb(t),...Qb(t)]),e}function eg(t){return t%2===0}function ng(t,e){if(t=t.slice(-2),e=e.slice(-2),f.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(eg(n)&&eg(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&eg(t[0])&&eg(e[0])}let rg,ag;function sg(t,e){return null!=t.getExtension(e)}function ig(t){try{if(null!=Eb(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function og(t){if(0===t)return!1;const e=Eb(t);if(1!==t){if(sg(e,"EXT_color_buffer_float"))return ug(e);const t="EXT_color_buffer_half_float";if(sg(e,t)){const n=e.getExtension(t);return function(t,e){const n=zb(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const a=1,s=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}if(!sg(e,"OES_texture_float"))return!1;if(!sg(e,"WEBGL_color_buffer_float"))return!1;return ug(e)}function ug(t){const e=zb(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function cg(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&f.util.assert("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const lg=Object(f.env)();function dg(){let t,e,n,r,a,s,i,o,u,c;return 2===Object(f.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function hg(t,e,n="index"){const r=f.util.computeStrides(e);return r.map(((e,a)=>`${`int ${t[a]} = ${n} / ${e}`}; ${a===r.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${e}`:`index -= ${t[a]} * ${e}`};`)).join("")}function pg(t){const e=f.util.computeStrides(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}lg.registerFlag("HAS_WEBGL",(()=>lg.getNumber("WEBGL_VERSION")>0)),lg.registerFlag("WEBGL_VERSION",(()=>ig(2)?2:ig(1)?1:0)),lg.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),lg.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===lg.get("WEBGL_VERSION"))),lg.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),lg.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),lg.registerFlag("WEBGL_PACK",(()=>lg.getBool("HAS_WEBGL"))),lg.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_CLIP",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_PACK_REDUCE",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_LAZILY_UNPACK",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_CONV_IM2COL",(()=>lg.getBool("WEBGL_PACK"))),lg.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==rg){const e=Eb(t);rg=e.getParameter(e.MAX_TEXTURE_SIZE)}return rg}(lg.getNumber("WEBGL_VERSION")))),lg.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==ag){const e=Eb(t);ag=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ag)}(lg.getNumber("WEBGL_VERSION")))),lg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=lg.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Eb(t);return e=sg(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:sg(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),lg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>lg.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!f.device_util.isMobile())),lg.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Eb(t);if(1===t){if(!sg(e,"OES_texture_float"))return!1}else if(!sg(e,"EXT_color_buffer_float"))return!1;return ug(e)}(lg.getNumber("WEBGL_VERSION")))),lg.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!lg.getBool("WEBGL_FORCE_F16_TEXTURES")&&lg.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),lg.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>og(lg.getNumber("WEBGL_VERSION")))),lg.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=lg.getNumber("WEBGL_VERSION"))&&null!=Eb(t).fenceSync;var t})),lg.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>lg.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),lg.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),lg.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>f.device_util.isMobile()&&lg.getBool("IS_CHROME")?1:-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)}));const fg="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class mg{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ab.DENSE;const e=Db(t),n=dg();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${hg(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class bg{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ab.DENSE;const e=Db(t),n=dg();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${hg(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class gg{constructor(t){this.variableNames=["A"],this.outTexUsage=Fb.DOWNLOAD;const e=dg();this.outputShape=t,this.userCode=`\n      ${fg}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class yg{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Fb.DOWNLOAD;const e=dg();this.outputShape=t,this.userCode=`\n      ${fg}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class xg{constructor(t,e,n=!1){this.variableNames=["A"];const r=dg(),[a,s]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${pg(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Og{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=dg(),[a,s]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let u=0;u<=1;u++)for(let e=0;e<=1;e++){const n=2*u+e;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${e} < ${t[2]}) {\n            localCoords[2] += ${e};\n            if(localCoords[1] + ${u} < ${t[1]}) {\n              localCoords[1] += ${u};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${n}] = values[0];\n              } else if(offset == 1) {\n                result[${n}] = values[1];\n              } else if(offset == 2) {\n                result[${n}] = values[2];\n              } else {\n                result[${n}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${pg(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function vg(t){const e=dg();return function(t,e){const n=Yb(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Lb(t,(()=>t.shaderSource(n,e))),Lb(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function wg(t){return function(t,e){const n=Yb(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Lb(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Lb(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function kg(t){return function(t,e){const n=Yb(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Lb(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),Lb(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}function Ig(t,e,n,r,a,s){!function(t,e){const n=Object(f.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const i=function(t){return Yb(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),o=t.TEXTURE_2D;return Lb(t,(()=>t.bindTexture(o,i))),Lb(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),Lb(t,(()=>t.texParameteri(o,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),Lb(t,(()=>t.texParameteri(o,t.TEXTURE_MIN_FILTER,t.NEAREST))),Lb(t,(()=>t.texParameteri(o,t.TEXTURE_MAG_FILTER,t.NEAREST))),Lb(t,(()=>t.texImage2D(o,0,r,e,n,0,a,s,null))),Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),i}function Ng(t){return t.internalFormatFloat}function jg(t){return t.internalFormatHalfFloat}function Sg(t){return t.downloadTextureFormat}function Tg(t){return t.internalFormatPackedFloat}function Cg(t){return t.internalFormatPackedHalfFloat}function $g(t,e,n,r,a,s,i,o){const u=t,c=new Float32Array(function(t,e){const[n,r]=Mb(t,e);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class Eg{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(f.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Cb[t]=e}(e,t)):this.gl=Eb(e);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(f.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Bb(this.gl,t),sg(this.gl,e))this.textureHalfFloatExtension=Bb(this.gl,e);else if(Object(f.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),sg(this.gl,r))this.colorBufferHalfFloatExtension=Bb(this.gl,r);else if(Object(f.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",sg(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!sg(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=wg(this.gl),this.indexBuffer=kg(this.gl),this.framebuffer=function(t){return Yb(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=zb(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(f.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Lb(t,(()=>t.finish())),Lb(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),Lb(t,(()=>t.deleteFramebuffer(this.framebuffer))),Lb(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),Lb(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),Lb(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=_b(e,n);return Ig(t,a,s,Ng(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=_b(e,n);return Ig(t,a,s,jg(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=_b(e,n);return Ig(t,a,s,Sg(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?Lb(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):Lb(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,s){let i,o,u;Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=t.UNSIGNED_BYTE,u=t.RGBA):(i=new Float32Array(n*r*4),o=t.FLOAT,u=s.internalFormatPackedFloat),i.set(a),Lb(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,o,i))),Lb(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=Mb(e,n);return Ig(t,a,s,Cg(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,s]=Mb(e,n);return Ig(t,a,s,Tg(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(qb(this.gl,this.framebuffer),this.outputTexture=null),Lb(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[a,s]=_b(e,n),i=new Uint8Array(e*n*4);return Lb(t,(()=>t.readPixels(0,0,a,s,r.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,a,s){return $g(this.gl,t,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();Lb(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a)));const s=16*e*n;return Lb(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,s,t.STREAM_READ))),Lb(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),Lb(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(f.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return Lb(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=Vb(e,t),r=vg(e),a=function(t){return Yb(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return Lb(e,(()=>e.attachShader(a,r))),Lb(e,(()=>e.attachShader(a,n))),function(t,e){if(Lb(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Ub(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return Lb(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Kb(t,e,"clipSpacePos",n,3,20,0)&&Kb(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Lb(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Ub(this.gl,this.program),Lb(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return Yb(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Lb(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Gb(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=Mb(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Ub(this.gl,this.program),Xb(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Lb(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Lb(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Bb(this.gl,2===Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await f.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(t,Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||f.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Hb(this.gl,t,this.framebuffer),this.debug&&Xb(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Hb(this.gl,this.outputTexture,this.framebuffer),this.debug&&Xb(this.gl)):qb(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Hb(r,t,this.framebuffer),this.debug&&Xb(r),this.outputTexture=t,Lb(r,(()=>r.viewport(0,0,e,n))),Lb(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Lb(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Ag}=f.backend_util;function Fg(t,e,n,r){const a=[];t.forEach((t=>{const e=f.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))}));const s=a.join("\n"),i=t.map((t=>function(t,e,n=!1){let r="";r+=n?_g(t):Rg(t);const a=t.shapeInfo.logicalShape,s=e.logicalShape;a.length<=s.length&&(r+=n?function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,o=Ag(t.shapeInfo.logicalShape,e.logicalShape),u=Wg(i),c=i-s;let l;const d=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((t=>`coords.${d[t+c]} = 0;`)).join("\n");let h="";h=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+c]}`)).join(", ");let p="return outputValue;";const m=1===f.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===f.util.sizeFromShape(e.logicalShape);if(1!==s||m||b){if(m&&!b)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const t=s-2,e=s-1;o.indexOf(t)>-1&&o.indexOf(e)>-1?p="return vec4(outputValue.x);":o.indexOf(t)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(e)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(t,e):function(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,o=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&o===u&&null==t.shapeInfo.flatOffset&&f.util.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Wg(u),l=Ag(t.shapeInfo.logicalShape,e.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map((t=>`coords.${p[t+d]} = 0;`)).join("\n");let m="";m=u<2&&o>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+d]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(t,e));return r}(t,e,r))).join("\n"),o=e.texShape,u=dg(),c=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,d,h=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Dg}\n    ${Mg}\n    ${zg}\n  `}(u);e.isPacked?(l=function(t,e){switch(t.length){case 0:return Pg();case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(f.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let s=a,i="",o="b, r, c";for(let u=2;u<t.length-1;u++)s*=t[t.length-u-1],i=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+i,o=`b${u}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,o),d=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(l=function(t,e){switch(t.length){case 0:return Pg();case 1:return function(t,e){if(1===e[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${e[1]}.0);\n      }\n    `;if(1===e[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${e[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      return resTexRC.x * ${e[1]} + resTexRC.y;\n    }\n  `}(0,e);case 2:return function(t,e){if(f.util.arraysEqual(t,e))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `;if(1===t[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===t[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=hg(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=hg(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=hg(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=hg(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}(e.logicalShape,o),d=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(h+=Lg);return[h,c,d,s,l,i,n].join("\n")}function Rg(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[s,i]=t.shapeInfo.texShape,o=Bg(e);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Vg(t)}\n      }\n    `;const r=t.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Bg(e);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&f.util.arraysEqual(e,a)){const t=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=f.util.squeezeShape(e),o=s;if(o.length<e.length){const e=["row","col"];return`\n      ${Rg(Ug(t,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Kg(e,i)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Vg(t)}\n      }\n    `;const u=a[0],c=a[1],l=Bg(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],s=e[2],{newShape:i,keptDims:o}=f.util.squeezeShape(e),u=i;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${Rg(Ug(t,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Kg(e,o)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${Vg(t)}\n      }\n    `;const c=t.shapeInfo.texShape,l=c[0],d=c[1],h=t.shapeInfo.flatOffset;if(d===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===s&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=Bg(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${p};\n        vec2 uv = uvFromFlat(${l}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],s=e[2]*a,i=e[1]*s,{newShape:o,keptDims:u}=f.util.squeezeShape(e);if(o.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Rg(Ug(t,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Kg(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${Vg(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,l=t.shapeInfo.texShape,d=l[0],h=l[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=Bg(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],s=e[3]*a,i=e[2]*s,o=e[1]*i,{newShape:u,keptDims:c}=f.util.squeezeShape(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Rg(Ug(t,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Kg(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Vg(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Bg(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=f.util.squeezeShape(e);if(a.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Rg(Ug(t,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Kg(e,s)});\n      }\n    `}const i=e[5],o=e[4]*i,u=e[3]*o,c=e[2]*u,l=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Vg(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],m=h[1];if(m===l&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=Bg(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${p}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function _g(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=dg();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=dg();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=a[0],i=a[1],o=dg();if(null!=a&&f.util.arraysEqual(e,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(e[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=[1,2],a=["b","row","col"];return`\n        ${_g(Ug(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Kg(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(e[2]/2),c=u*Math.ceil(e[1]/2),l=dg();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=t.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let f=2;f<n-1;f++)d=`int b${f}, `+d,l*=e[n-f-1],h=`b${f} * ${l} + `+h;const p=dg();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(t)}}const Dg="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Mg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Lg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Pg(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Bg(t){return`offset${t}`}function Vg(t){const e=t.name,n=f.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Wg(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Ug(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Kg(t,e){return e.map((e=>t[e])).join(", ")}function Gg(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const r=t.logicalShape,a=e[n],s=a.shape;if(!f.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(t.isUniform&&a.isUniform)return;const i=t.texShape,o=a.isUniform?null:a.texData.texShape;if(!f.util.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:Hg,bincountImpl:qg,bincountReduceImpl:Xg,ceilImpl:Yg,concatImpl:Jg,expImpl:Zg,expm1Impl:Qg,floorImpl:ty,gatherV2Impl:ey,greaterImpl:ny,lessImpl:ry,linSpaceImpl:ay,logImpl:sy,maxImpl:iy,maximumImpl:oy,minimumImpl:uy,multiplyImpl:cy,negImpl:ly,prodImpl:dy,rangeImpl:hy,rsqrtImpl:py,simpleAbsImpl:fy,sliceImpl:my,sparseReshapeImpl:by,stridedSliceImpl:gy,subImpl:yy,tileImpl:xy,topKImpl:Oy,transposeImpl:vy,uniqueImpl:wy}=r;function ky(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function Iy(t,e){return 1===e?[t]:ky(t,e)}class Ny{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Iy("rc",e),r=Wg(e),a=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let a=t-2;a<t;a++)r+=`${n[a]} >= ${e[a]}`,a<t-1&&(r+="||");return r}(e,t,n),s=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<t;n++)s=`${e[e.length-1-n]},`+s;n.push(s)}return n}(n,e);if(1===n)return`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class jy{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let a=0;a<4;a++){let t="thisRC = rc;";a%2===1&&(t+="thisRC.z += 1;"),a>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${hg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${pg(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Sy{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Cy(e,n),a=$y(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Ty(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let i;return r===Rb.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Rb.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Rb.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Rb.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Rb.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const a=Cy(n,r),s=$y(e,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Ty(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(f.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ty(t,e,n,r,a){const s=function(t,e){switch(t){case Rb.PACKED_2X2_FLOAT32:return Tg(e);case Rb.PACKED_2X2_FLOAT16:return Cg(e);case Rb.UNPACKED_FLOAT32:return Ng(e);case Rb.UNPACKED_FLOAT16:return jg(e);case Rb.PACKED_4X1_UNSIGNED_BYTE:return Sg(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let i;if(a){const[e,n]=Mb(t[0],t[1]);i=e*n}else{const[e,n]=_b(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,s)}function Cy(t,e){if(t===Fb.UPLOAD)return Rb.PACKED_2X2_FLOAT32;if(t===Fb.RENDER||null==t)return function(t){return Object(f.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Rb.PACKED_2X2_FLOAT32:Rb.UNPACKED_FLOAT32:t?Rb.PACKED_2X2_FLOAT16:Rb.UNPACKED_FLOAT16}(e);if(t===Fb.DOWNLOAD||t===Fb.PIXELS)return Rb.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function $y(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class Ey{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ay="return abs(x);";const Fy="return x;";class Ry{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class _y{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Iy("rc",e),r=Wg(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),s=n.slice(-2),i=e<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Dy=f.kernel_impls.whereImpl,My={};class zy extends f.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Object(f.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Eb(Object(f.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(f.env)().getNumber("WEBGL_VERSION"))in My||(My[e]={}),My[e]),this.gpgpu=new Eg(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Sy(this.gpgpu),this.numMBBeforeWarning=null==Object(f.env)().global.screen?1024:Object(f.env)().global.screen.height*Object(f.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new f.DataStorage(this,Object(f.engine)())}nextDataId(){return zy.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,n){if((Object(f.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(f.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:Fb.UPLOAD,refCount:1}),r}refCount(t){if(this.texData.has(t)){return this.texData.get(t).refCount}return 0}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}move(t,e,n,r,a){if(Object(f.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:Fb.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=e;if(null!=s){let e;e=o?new Ry(i,Fy):new Ey(i,Fy);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=f.util.now()),"complex64"===r){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);l=f.backend_util.mergeRealAndImagArrays(t,e)}else l=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=f.util.now()-c),this.convertAndCacheOnCPU(t,l)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=e;if(null!=a){let e;e=o?new Ry(r,Fy):new Ey(r,Fy);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(f.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(f.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&Object(f.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(e.texture,...Db(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];c=f.backend_util.mergeRealAndImagArrays(e,n)}else if(null==l)c=this.getValuesFromTexture(t);else{const t=f.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(t,c),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&Object(f.engine)().removeDataId(t,this),this.pendingDeletes--),d}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>f.util.decodeString(t)))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(f.buffer)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Pb(n)){if(Object(f.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),a=f.util.sizeFromShape(e);if(Object(f.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Db(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(f.env)().getBool("WEBGL_PACK")&&!0===r,i=s?tg(e):e,o=s?new yg(i):new gg(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:t}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=f.util.flatten(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),s=f.util.flatten(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);i.kernelMs=f.util.sum(t),i.getExtraProfileInfo=()=>t.map(((t,e)=>({name:s[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:f.util.now(),endMs:null}}endTimer(t){return Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=f.util.now(),t)}async getQueryTime(t){if(Object(f.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:n}=this.texData.get(t);return null!=n&&(this.disposeData(n.real.dataId,e),this.disposeData(n.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,s)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=128){return Object(f.env)().getBool("WEBGL_CPU_FORWARD")&&t.every((t=>null==this.texData.get(t.dataId).texture&&f.util.sizeFromShape(t.shape)<e))}getGPGPUContext(){return this.gpgpu}where(t){f.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Dy(t.shape,e)}packedUnaryOp(t,e,n){const r=new Ry(t.shape,e),a=this.compileAndRun(r,[t],n);return Object(f.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=fy(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(f.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Ay,t.dtype);const e=new Ey(t.shape,Ay),n=this.compileAndRun(e,[t]);return Object(f.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&f.util.isString(n[0])){const a=n.map((t=>f.util.encodeString(t)));r=this.write(a,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(f.engine)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new _y(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new Ny(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Zb(t.shape),...Qb(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Zb(e),...Qb(e)],s=new jy(a,n),i=this.runWebGLProgram(s,[r],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,s=tg(r);let i;i=n?new bg(s):new mg(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r,a=!1){const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Ab.DENSE){const e=Db(t.outputShape);i.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===f.util.sizeFromShape(s.shape))return i.values=f.util.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&f.util.sizeFromShape(e.shape)<=Object(f.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),o.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!ng(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),o.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},l=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const a=t.userCode;let s=t.constructor.name;return s+="_"+r+"_"+a,s}(t,u,c),d=this.getAndSaveBinary(l,(()=>function(t,e,n,r){const a=e.userCode,s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),i=s.map((t=>t.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Fg(s,o,a,e.packedInputs),c=t.createProgram(u);let l=null;const d=t.getUniformLocation(c,"NAN",!1);1===Object(f.env)().getNumber("WEBGL_VERSION")&&(l=t.getUniformLocation(c,"INFINITY",!1));const h={};for(let p=0;p<e.variableNames.length;p++){const n=e.variableNames[p],r=!1;h[n]=t.getUniformLocation(c,n,r),h[`offset${n}`]=t.getUniformLocation(c,`offset${n}`,r)}return{program:e,source:u,webGLProgram:c,uniformLocations:h,inShapeInfos:i,outShapeInfo:o,infLoc:l,nanLoc:d}}(this.gpgpu,t,u,c))),h=null!=this.activeTimers;let p;h&&(p=this.startTimer()),function(t,e,n,r,a){Gg(e.inShapeInfos,n),Gg([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(f.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,r)=>{const a=e.program.variableNames[r],s=e.uniformLocations[a],i=e.uniformLocations[`offset${a}`];if(null!=s)if(n.isUniform)if(f.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,u,c,r),o.forEach((t=>this.disposeIntermediateTensorInfo(t))),h&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)}));const m=Object(f.env)().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const t=f.util.now();t-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=t)}if(!Object(f.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r,a=!1){n=n||e[0].dtype;return this.runWebGLProgram(t,e,n,r,a)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(f.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(f.tidy)((()=>{if(!Object(f.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(f.env)().getBool("DEBUG");Object(f.env)().set("DEBUG",!1);const e=this.abs(Object(f.scalar)(1e-8)).dataSync()[0];if(Object(f.env)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=e;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=f.util.now());let l=e.texShape;if(null==l&&(l=function(t,e=!1){let n=Object(f.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?f.util.nearestLargerEven(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=f.util.squeezeShape(t);t=e.newShape}let r=f.util.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Zb(t);let n=2,a=2;return t.length&&([n,a]=Qb(t)),r=e*(n/2)*(a/2),f.util.sizeToSquarishShape(r).map((t=>2*t))}return f.util.sizeToSquarishShape(r)}(n,o),e.texShape=l),null!=a){const t=tg(n);let s,i=l[1],d=l[0];const h=a instanceof Uint8Array;o?([i,d]=Mb(l[0],l[1]),s=new Og(t,[d,i],h)):s=new xg(t,[d,i],h);const p=this.makeTensorInfo([d,i],r);this.texData.get(p.dataId).usage=h?Fb.PIXELS:Fb.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,d,a);const m=!0,b=this.runWebGLProgram(s,[p],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=f.util.now()-c)}else{const t=this.acquireTexture(l,i,r,o);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*f.util.bytesPerElement(e)}}zy.nextDataId=0;f.device_util.isBrowser()&&Object(f.registerBackend)("webgl",(()=>new zy),2);class Ly{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=f.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Py{constructor(t,e,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=f.backend_util.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===f.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${Wg(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Iy("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function By(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Vy={kernelName:f.Identity,backendName:"webgl",kernelFunc:By};function Wy(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=By({inputs:{x:r},backend:n}),u=By({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const Uy={kernelName:f.Complex,backendName:"webgl",kernelFunc:Wy},Ky="return (a < 0.) ? b * a : a;",Gy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Hy={kernelName:f.LeakyRelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{alpha:s}=r,i=n.makeTensorInfo([],"float32",f.util.createScalarValue(s,"float32")),o=Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Py(Gy,a.shape,i.shape):new Ly(Ky,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},qy="return (a < 0.) ? b * a : a;",Xy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Yy={kernelName:f.Prelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e,s=Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Py(Xy,r.shape,a.shape):new Ly(qy,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function Jy({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const t=o.texData.get(i.dataId),e=n(t.values,u);return o.makeTensorInfo(i.shape,u,e)}let c;return c=Object(f.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new Ry(i.shape,e):new Ey(i.shape,t),o.runWebGLProgram(c,[i],u)}}function Zy({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const e=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Ly(t,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(f.upcastType)(n.dtype,r.dtype))})),s=Wy({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const d=s||Object(f.upcastType)(u.dtype,c.dtype);if(l.shouldExecuteOnCPU([u,c])&&null!=a){const t=l.texData.get(u.dataId),e=l.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,t.values,e.values,d),s=l.makeTensorInfo(r,d);return l.texData.get(s.dataId).values=n,s}let h;return h=Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Py(e,u.shape,c.shape,n):new Ly(t,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Qy(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===t)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===t)return e?Xy:qy;if("leakyrelu"===t)return e?Gy:Ky;if("sigmoid"===t)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class tx{constructor(t,e,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?t[1]:t[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(x=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const ex="return areal * breal - aimag * bimag;",nx="return areal * bimag + aimag * breal;";class rx{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=f.backend_util.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ax="return a * b;";function sx(t){const{inputs:e,backend:n}=t,{a:r,b:a}=e,s=f.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),s=new rx(ex,r.shape,a.shape),i=new rx(nx,r.shape,a.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=Wy({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const t=n.texData.get(r.dataId),e=n.texData.get(a.dataId),[i,o]=cy(r.shape,a.shape,t.values,e.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Py(ax,r.shape,a.shape):new Ly(ax,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const ix={kernelName:f.Multiply,backendName:"webgl",kernelFunc:sx};function ox(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{shape:s}=r,i=n,o=f.util.sizeFromShape(a.shape),u=f.util.inferFromImplicitShape(s,o),c=f.util.sizeFromShape(u);f.util.assert(o===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const l=i.texData.get(a.dataId);return!l.isPacked||ng(a.shape,u)||null!==l.texture&&ng(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(t,e,n){const r=[Zb(t.shape),...Qb(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},s=[Zb(e),...Qb(e)],i=new jy(s,r),o=n.runWebGLProgram(i,[a],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(a,u,i)}const ux={kernelName:f.Reshape,backendName:"webgl",kernelFunc:ox};class cx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${f.util.isInt(t)?t.toPrecision(2):t}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class lx{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=t;this.outputShape=[r,s];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===e?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function dx(t,e,n,r){const a=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=f.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new cx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},o):new cx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c}):new lx({windowSize:u,inSize:o,batchSize:t.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class hx{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const r=Wg(this.rank),a=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class px{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Wg(this.rank),a=ky("rc",this.rank),s=new Array(this.rank);for(let c=0;c<e.length;c++)s[e[c]]=a[c];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function fx(t,e,n){const r=Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new px(t.shape,e):new hx(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function mx(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r;return function(t,e,n,r){const a=e,s=t.shape.length,i=f.util.parseAxisParam(a,t.shape);let o=i;const u=f.backend_util.getAxesPermutation(o,s),c=null!=u;let l=t;c&&(l=fx(t,u,r),o=f.backend_util.getInnerMostAxes(o.length,s)),f.backend_util.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=f.backend_util.computeOutAndReduceShapes(l.shape,o);let p=d;n&&(p=f.backend_util.expandShapeToKeepDim(d,i));const m=f.util.sizeFromShape(h),b=ox({inputs:{x:l},attrs:{shape:[f.util.sizeFromShape(t.shape)/m,m]},backend:r}),g=dx(b,Object(f.sumOutType)(t.dtype),"sum",r),y=ox({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),c&&r.disposeIntermediateTensorInfo(l),y}(a,s,i,n)}const bx={kernelName:f.Sum,backendName:"webgl",kernelFunc:mx};function gx(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let c;if(i.shouldExecuteOnCPU([a])){const t=i.texData.get(a.dataId).values,e=vy(t,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);i.texData.get(c.dataId).values=e}else c=fx(a,s,i);return c}const yx={kernelName:f.Transpose,backendName:"webgl",kernelFunc:gx};function xx({a:t,b:e,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=t.shape.length,l=e.shape.length,d=n?t.shape[c-2]:t.shape[c-1],h=r?e.shape[l-1]:e.shape[l-2],p=n?t.shape[c-1]:t.shape[c-2],m=r?e.shape[l-2]:e.shape[l-1],b=t.shape.slice(0,-2),g=e.shape.slice(0,-2),y=f.util.sizeFromShape(b),x=f.util.sizeFromShape(g),O=y===x||1===y||1===x;f.util.assert(c>=2&&l>=2&&O,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`));const v=(y>x?t.shape.slice(0,-2):e.shape.slice(0,-2)).concat([p,m]);f.util.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,d,p]:[y,p,d],k=r?[x,m,h]:[x,h,m],I=ox({inputs:{x:t},backend:a,attrs:{shape:w}}),N=ox({inputs:{x:e},backend:a,attrs:{shape:k}}),j=[I,N],S=Math.max(y,x),T=n?I.shape[1]:I.shape[2],C=null!=s,$=null!=i,E="leakyrelu"===u,A=null!=u?Qy(u,!0):null;let F;if((1===p||1===m)&&T>1e3&&!1===(C||$||E||null!=A)){let t=I,e=N;n&&(t=gx({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),j.push(t)),r&&(e=gx({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),j.push(e));const s=1===m;let i=t;1!==m&&(i=ox({inputs:{x:t},backend:a,attrs:{shape:[S,T,1]}}),j.push(i));const o=1===m?2:1;let u=e;s&&(u=ox({inputs:{x:e},backend:a,attrs:{shape:[S,1,T]}}),j.push(u));const c=sx({inputs:{a:i,b:u},backend:a});F=mx({inputs:{x:c},backend:a,attrs:{axis:o,keepDims:!0}}),j.push(c)}else{const u=Object(f.upcastType)(t.dtype,e.dtype),c=new tx(w,k,[S,p,m],n,r,C,A,$,E),l=[I,N];if(null!=s&&l.push(s),$&&l.push(i),E){const t=a.makeTensorInfo([],"float32",f.util.createScalarValue(o,"float32"));l.push(t),j.push(t)}F=a.runWebGLProgram(c,l,u)}const R=ox({inputs:{x:F},backend:a,attrs:{shape:v}});j.push(F);for(const f of j)a.disposeIntermediateTensorInfo(f);return R}const Ox={kernelName:f._FusedMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s,bias:i,preluActivationWeights:o}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return xx({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}},vx="return abs(x);";const wx={kernelName:f.Abs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=fy(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let a;return a=Object(f.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ry(r.shape,vx):new Ey(r.shape,vx),n.runWebGLProgram(a,[r],r.dtype)}},kx=Jy({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Ix={kernelName:f.Acos,backendName:"webgl",kernelFunc:kx},Nx=Jy({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),jx={kernelName:f.Acosh,backendName:"webgl",kernelFunc:Nx},Sx="return a + b;",Tx=Zy({opSnippet:Sx,packedOpSnippet:Sx,supportsComplex:!0,cpuKernelImpl:Hg}),Cx={kernelName:f.Add,backendName:"webgl",kernelFunc:Tx};class $x{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Ex{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Ax={kernelName:f.AddN,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,a=n;if(1===a.length)return By({inputs:{x:a[0]},backend:r});if(a.length>Object(f.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(a.length/2),n=t({inputs:a.slice(0,e),backend:r}),s=t({inputs:a.slice(e),backend:r});return t({inputs:[n,s],backend:r})}const s=a.map((t=>t.dtype)).reduce(((t,e)=>Object(f.upcastType)(t,e))),i=a.map((t=>t.shape)),o=Object(f.env)().getBool("WEBGL_PACK")?new Ex(a[0].shape,i):new $x(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};const Fx={kernelName:f.All,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,o=a.shape.length,u=f.util.parseAxisParam(s,a.shape);let c=u;const l=f.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=gx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=f.backend_util.getInnerMostAxes(c.length,o)),f.backend_util.assertAxesAreInnerMostDims("all",c,o);const[h,p]=f.backend_util.computeOutAndReduceShapes(d.shape,c),m=ox({inputs:{x:d},backend:n,attrs:{shape:[-1,f.util.sizeFromShape(p)]}}),b=dx(m,m.dtype,"all",n);let g;if(i){g=ox({inputs:{x:b},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(h,u)}})}else g=ox({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}};const Rx={kernelName:f.Any,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,o=a.shape.length,u=f.util.parseAxisParam(s,a.shape);let c=u;const l=f.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=gx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=f.backend_util.getInnerMostAxes(c.length,o)),f.backend_util.assertAxesAreInnerMostDims("any",c,o);const[h,p]=f.backend_util.computeOutAndReduceShapes(d.shape,c),m=ox({inputs:{x:d},backend:n,attrs:{shape:[-1,f.util.sizeFromShape(p)]}}),b=dx(m,m.dtype,"any",n);let g;if(i){g=ox({inputs:{x:b},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(h,u)}})}else g=ox({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}};class _x{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Dx{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f.util.assert(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=t[t.length-1],s=Math.ceil(a/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=Wg(o),c=Iy("coords",o);let l,d;if(1===s){d=o+1;const t=Wg(d);l=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[o-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[o-2]};`}else d=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],m=h.map((t=>"int "+t)),b=Iy("sourceLocR",d-1).concat("inIdx.r"),g=Iy("sourceLocG",d-1).concat("inIdx.g"),y=Iy("sourceLocB",d-1).concat("inIdx.b"),x=Iy("sourceLocA",d-1).concat("inIdx.a"),O="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${O}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Mx(t,e,n,r=null){let a=e.shape[0],s=e.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=f.backend_util.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new _x(o,n,null==r),c=[e];null!=r&&c.push(r);const l=t.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const d=Mx(t,e,n,l);return t.disposeIntermediateTensorInfo(l),d}function zx(t,e,n,r=null){const a=null!=r?r.shape:e.shape,s=a[a.length-1],i=f.backend_util.computeOptimalWindowSize(s),o=new Dx(a,i,n,null==r),u=null==r?[e]:[e,r],c=t.runWebGLProgram(o,u,"int32");if(c.shape.length===e.shape.length){const r=zx(t,e,n,c);return t.disposeIntermediateTensorInfo(c),r}return c}function Lx(t,e,n,r){const a=[n];if(f.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,e.shape.length),!Object(f.env)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[s,i]=f.backend_util.computeOutAndReduceShapes(e.shape,a),o=f.util.sizeFromShape(i),u=ox({inputs:{x:e},backend:t,attrs:{shape:[-1,o]}});n.push(u);const c=Mx(t,u,r);n.push(c);const l=ox({inputs:{x:c},backend:t,attrs:{shape:s}});return n.forEach((e=>t.disposeIntermediateTensorInfo(e))),l}return zx(t,e,r)}const Px={kernelName:f.ArgMax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;let i=f.util.parseAxisParam(s,a.shape);const o=f.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=gx({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=f.backend_util.getInnerMostAxes(i.length,u.shape.length)),f.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const l=Lx(n,u,i[0],"max");return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}};const Bx={kernelName:f.ArgMin,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s}=r;let i=f.util.parseAxisParam(s,a.shape);const o=f.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=gx({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=f.backend_util.getInnerMostAxes(i.length,u.shape.length)),f.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const l=Lx(n,u,i[0],"min");return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}},Vx=Jy({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Wx={kernelName:f.Asin,backendName:"webgl",kernelFunc:Vx},Ux=Jy({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Kx={kernelName:f.Asinh,backendName:"webgl",kernelFunc:Ux},Gx=Jy({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Hx={kernelName:f.Atan,backendName:"webgl",kernelFunc:Gx},qx=Zy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Xx={kernelName:f.Atan2,backendName:"webgl",kernelFunc:qx},Yx=Jy({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Jx={kernelName:f.Atanh,backendName:"webgl",kernelFunc:Yx};class Zx{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideHeight,o=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,b=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(s/4),O=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Qx{constructor(t,e,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const s=t.filterWidth,i=t.strideDepth,o=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let O=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(O="avgValue / count");const v=4*Math.floor(s/4),w=s%4,k=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${O});\n        }\n      }\n    `}}const tO={kernelName:f.AvgPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;cg(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=f.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&f.util.arraysEqual(c.inShape,c.outShape))return By({inputs:{x:a},backend:n});const l=new Zx(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}};const eO={kernelName:f.AvgPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=f.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,c),d=new Qx(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class nO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.top,l=u-1-t.padInfo.left,d=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rO{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aO={kernelName:f.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=f.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new rO(d);return n.runWebGLProgram(h,[a],i.dtype)}};const sO={kernelName:f.AvgPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s;cg([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=f.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=new nO(l);return n.runWebGLProgram(d,[a],i.dtype)}};const iO={kernelName:f.BatchMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:s}=e,{transposeA:i,transposeB:o}=r;return xx({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class oO{constructor(t,e,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],f.backend_util.assertAndGetBroadcastShape(t,e),f.backend_util.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(f.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(f.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class uO{constructor(t,e,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],f.backend_util.assertAndGetBroadcastShape(t,e),f.backend_util.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(f.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(f.backend_util.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const cO={kernelName:f.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=t;f.util.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),f.util.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),f.util.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let d=null;null!=o&&(d=o.shape,c.push(o));const h=Object(f.env)().getBool("WEBGL_PACK_NORMALIZATION")?new uO(r.shape,a.shape,s.shape,l,d,u):new oO(r.shape,a.shape,s.shape,l,d,u);return e.runWebGLProgram(h,c,c[0].dtype)}};class lO{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Wg(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return dO.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let a;a=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${dO[e]} = start[${e}] + coords.${dO[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const dO=["x","y","z","w","u","v"];class hO{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Wg(this.rank),n=Iy("coords",this.rank),r=Iy("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function pO(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,size:i}=r,[o,u]=f.slice_util.parseSliceParams(a,s,i);if(f.slice_util.assertParamsValid(a,o,u),0===f.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const t=n.texData.get(a.dataId),e=my(t.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,e)}const{isPacked:c}=n.texData.get(a.dataId),l=f.slice_util.isSliceContinous(a.shape,o,u);if(c||!l){const t=Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hO(u):new lO(u),e=t.getCustomSetupFunc(o);return n.runWebGLProgram(t,[a],a.dtype,e)}return n.uploadToGPU(a.dataId),function(t,e,n,r){const a=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=t.dtype;let o=f.slice_util.computeFlatOffset(e,f.util.computeStrides(t.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||t.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const fO={kernelName:f.Slice,backendName:"webgl",kernelFunc:pO},mO={kernelName:f.BatchToSpaceND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,crops:i}=r;f.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((t,e)=>t*e)),u=f.backend_util.getReshaped(a.shape,s,o),c=f.backend_util.getPermuted(u.length,s.length),l=f.backend_util.getReshapedPermuted(a.shape,s,o),d=f.backend_util.getSliceBeginCoords(i,s.length),h=f.backend_util.getSliceSize(l,i,s.length),p=[],m=ox({inputs:{x:a},backend:n,attrs:{shape:u}}),b=gx({inputs:{x:m},backend:n,attrs:{perm:c}}),g=ox({inputs:{x:b},backend:n,attrs:{shape:l}}),y=pO({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(m),p.push(b),p.push(g),p.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}};const bO={kernelName:f.Bincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=qg(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},gO=Zy({opSnippet:"return float(a != b);",dtype:"bool"}),yO={kernelName:f.NotEqual,backendName:"webgl",kernelFunc:gO};function xO(t){const{inputs:e,backend:n}=t,{input:r}=e;return By({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const OO={kernelName:f.Real,backendName:"webgl",kernelFunc:xO};const vO={kernelName:f.Cast,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:a}=e,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return By({inputs:{x:s},backend:r});const e=f.zeros(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=Wy({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const e=xO({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!f.util.hasEncodingLoss(s.dtype,i)){const t=By({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new Ey(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",f.util.getTypedArrayFromDType("bool",1)),e=gO({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},wO="return ceil(x);",kO=Jy({opSnippet:wO,packedOpSnippet:wO,cpuKernelImpl:Yg}),IO={kernelName:f.Ceil,backendName:"webgl",kernelFunc:kO};class NO{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class jO{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const SO={kernelName:f.ClipByValue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{clipValueMin:s,clipValueMax:i}=r;let o;o=Object(f.env)().getBool("WEBGL_PACK_CLIP")?new jO(a.shape):new NO(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};class TO{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function CO(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const $O={kernelName:f.ComplexAbs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=n.texData.get(r.dataId),s=new TO(r.shape),i=[CO(r,a.complexTensorInfos.real),CO(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class EO{constructor(t){this.outputShape=[],this.outputShape=f.backend_util.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let s=1;s<e.length;s++)e[s]=e[s-1]+t[s][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<e.length;s++){const t=e[s-1];n.push(`else if (yC < ${e[s]}) setOutput(getT${s}(yR, yC-${t}));`)}const r=e.length,a=e[e.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class AO{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=f.backend_util.computeOutShape(t,e);const n=this.outputShape,r=n.length,a=Wg(r),s=Iy("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map(((t,e)=>`T${e}`));const o=new Array(t.length-1);o[0]=t[0][e];for(let f=1;f<o.length;f++)o[f]=o[f-1]+t[f][e];const u=i[e],c=i.slice(-2),l=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let f=1;f<o.length;f++){const t=o[f-1];d+=`\n        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${FO(i,u,t)}),\n            vec2(${FO(c,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${FO(i,u,p)}),\n          vec2(${FO(c,u,p)}));`,this.userCode=`\n      float getValue(${i.map((t=>"int "+t))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function FO(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function RO(t){const{inputs:e,backend:n}=t,{input:r}=e;return By({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const _O={kernelName:f.Imag,backendName:"webgl",kernelFunc:RO};function DO(t,e,n){const r=t[0].dtype;if("complex64"===r){const r=t.map((t=>xO({inputs:{input:t},backend:n}))),a=t.map((t=>RO({inputs:{input:t},backend:n}))),s=DO(r,e,n),i=DO(a,e,n),o=Wy({inputs:{real:s,imag:i},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),a.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(t);if("string"===r&&(a=!0),a){const a=t.map((t=>{const r=f.util.sizeFromShape(t.shape.slice(e));return ox({inputs:{x:t},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((t=>({vals:n.readSync(t.dataId),shape:t.shape}))),i=f.backend_util.computeOutShape(a.map((t=>t.shape)),1),o=1===a[0].shape[0],u=Jg(s,i,r,o),c=f.backend_util.computeOutShape(t.map((t=>t.shape)),e),l=n.makeTensorInfo(c,r,u);return a.forEach((t=>n.disposeIntermediateTensorInfo(t))),l}if(t.length>Object(f.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),a=DO(t.slice(0,r),e,n),s=DO(t.slice(r),e,n),i=DO([a,s],e,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const a=new AO(t.map((t=>t.shape)),e);return n.runWebGLProgram(a,t,r)}const{tensors2D:s,outShape:i}=function(t,e,n){const r=f.backend_util.computeOutShape(t.map((t=>t.shape)),e);return{tensors2D:t.map((t=>ox({inputs:{x:t},attrs:{shape:[-1,f.util.sizeFromShape(t.shape.slice(e))]},backend:n}))),outShape:r}}(t,e,n),o=new EO(s.map((t=>t.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((t=>n.disposeIntermediateTensorInfo(t)));const c=ox({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),c}function MO(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r,s=f.util.parseAxisParam(a,e[0].shape)[0],i=f.backend_util.computeOutShape(e.map((t=>t.shape)),s);if(0===f.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const o=e.filter((t=>f.util.sizeFromShape(t.shape)>0));if(1===o.length)return By({inputs:{x:o[0]},backend:n});const u=o.map((t=>t.shape));return f.backend_util.assertParamsConsistent(u,s),DO(o,s,n)}const zO={kernelName:f.Concat,backendName:"webgl",kernelFunc:MO};class LO{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.padInfo.top,i=t.padInfo.left,o=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",O="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,O="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${O}\n        setOutput(result);\n      }\n    `}}class PO{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BO{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=dg(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let O=0;O<=1;O++)for(let n=0;n<=1;n++)x+=`\n          blockIndex = rc.y + ${n};\n          pos = rc.x + ${O};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*O+n}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*O+n}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function VO({x:t,filter:e,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=t.shape,c=r.texData.get(t.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p="channelsLast"===n.dataFormat;let m;const b=[],g=(1===d||1===h)&&l>1e3,y=u[2]%2!==0&&!!c.isPacked;if(!g&&Object(f.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const l=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:t.dataId,shape:[1,l,n.inChannels],dtype:t.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,f.util.assert(ng(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const g=ox({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(g);const y=xx({a:d,b:g,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(y.dataId);f.util.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,x.shape=n.outShape,m=By({inputs:{x:y},backend:r}),m.shape=n.outShape,b.push(y)}else{const c=ox({inputs:{x:t},backend:r,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),l=ox({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=xx({a:c,b:l,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});m=ox({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),b.push(c),b.push(l),b.push(d)}for(const f of b)r.disposeIntermediateTensorInfo(f);return m}function WO({x:t,filter:e,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=n,m="channelsLast"===p,b=u*c*l,g=h*d,y=[b,g],x=[],O=ox({inputs:{x:t},backend:r,attrs:{shape:t.shape.slice(1)}}),v=ox({inputs:{x:e},backend:r,attrs:{shape:[1,b,f.util.sizeFromShape(e.shape)/b]}});x.push(O),x.push(v);const w=new BO(y,O.shape,n),k=r.runWebGLProgram(w,[O],"float32"),I=ox({inputs:{x:k},backend:r,attrs:{shape:[1,y[0],y[1]]}});x.push(k),x.push(I);const N=null!=a,j=null!=s,S="leakyrelu"===o,T=o?Qy(o,!0):null,C=new tx(I.shape,v.shape,[1,g,n.outChannels],!0,!1,N,T,j,S),$=[I,v];if(a&&$.push(a),j&&$.push(s),S){const t=r.makeTensorInfo([],"float32",f.util.createScalarValue(i,"float32"));$.push(t),x.push(t)}const E=r.runWebGLProgram(C,$,"float32"),A=ox({inputs:{x:E},backend:r,attrs:{shape:m?[1,h,d,n.outChannels]:[1,n.outChannels,h,d]}});x.push(E);for(const f of x)r.disposeIntermediateTensorInfo(f);return A}const UO={kernelName:f.Conv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=f.backend_util.convertConv2DDataFormat(u),h=f.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(f.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=WO({x:a,filter:s,convInfo:h,backend:n});else{const t=new LO(h);p=n.runWebGLProgram(t,[a,s],"float32")}else p=VO({x:a,filter:s,convInfo:h,backend:n});const m=ox({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),m}};class KO{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GO{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HO{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,s=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${a};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qO{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,s=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XO={kernelName:f.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=f.backend_util.convertConv2DDataFormat(u),h=f.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),p=new KO(h);return n.runWebGLProgram(p,[a,s],"float32")}};const YO={kernelName:f.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=f.backend_util.convertConv2DDataFormat(c),h=f.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d),p=new GO(h);return n.runWebGLProgram(p,[a,s],"float32")}};const JO={kernelName:f.Conv3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=r,c=f.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new PO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const ZO={kernelName:f.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,pad:o,filterShape:u}=r,c=f.backend_util.computeConv3DInfo(a.shape,u,i,1,o),l=new HO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const QO={kernelName:f.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{pad:i,strides:o,inputShape:u}=r,c=f.backend_util.computeConv3DInfo(u,s.shape,o,1,i),l=new qO(c);return n.runWebGLProgram(l,[a,s],"float32")}},tv=Jy({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ev={kernelName:f.Cos,backendName:"webgl",kernelFunc:tv},nv=Jy({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),rv={kernelName:f.Cosh,backendName:"webgl",kernelFunc:nv};class av{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=t,[c]=e,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,O]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${O};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const sv={kernelName:f.CropAndResize,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:s,boxInd:i}=e,{cropSize:o,method:u,extrapolationValue:c}=r,l=new av(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};class iv{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":`getX(${ov(r,"coords")})`,s=t[t.length-1];let i="",o="";e?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Wg(r)} coords = getOutputCoords();\n        int end = ${uv(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${uv(r,"coords")} = idx;\n          val += getX(${ov(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function ov(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function uv(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}const cv={kernelName:f.Cumsum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,c=f.backend_util.getAxesPermutation([s],u);let l=a;null!=c&&(l=gx({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=f.backend_util.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=l.shape[d];let p=By({inputs:{x:l},backend:n});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){const t=new iv(l.shape,!1,o),e=t.getCustomSetupFunc(f),r=p;p=n.runWebGLProgram(t,[p],p.dtype,e),n.disposeIntermediateTensorInfo(r)}if(i){const t=new iv(l.shape,i,o),e=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=c){const t=gx({inputs:{x:p},backend:n,attrs:{perm:f.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),t}return p}};const lv={kernelName:f.DenseBincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:s}=e,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const t=n.readSync(a.dataId),e=n.readSync(s.dataId),r=qg(t,e,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(s),r=Xg(t,e,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class dv{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const hv={kernelName:f.DepthToSpace,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockSize:s,dataFormat:i}=r;f.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],c="NHWC"===i?a.shape[2]:a.shape[3],l="NHWC"===i?a.shape[3]:a.shape[1],d=u*s,h=c*s,p=l/(s*s),m=new dv("NHWC"===i?[o,d,h,p]:[o,p,d,h],s,i);return n.runWebGLProgram(m,[a],a.dtype)}};class pv{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,o=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class fv{constructor(t,e=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.outChannels/t.inChannels,i=t.inHeight,o=t.inWidth,u=t.padInfo.top,c=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,b=t.filterWidth,g=b;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let f=0;f<b;f++)y+=`\n          vec4 xTexelC${2*f};\n          vec4 xC${f};`;for(let w=0;w<m;w++){for(let t=0;t<b;t++)y+=`\n          xTexelC${2*t} = vec4(0.0);\n          xC${t} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${w*h};\n        if (xR >=0 && xR < ${i}) {\n      `;for(let t=0;t<g/2+1;t++){const e=2*t;if(y+=`\n          xC = xCCorner + ${e*p};\n          `,1===d){if(e<b&&(c%2===1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                }\n              `,y+=1===p&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${o}) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<b)){const t=c%2===0?f.util.nearestLargerEven(p):p;p%2===0&&c%2===1||p%2!==0&&c%2!==1?(y+=`\n                  xCOffset = xC + ${c%2} + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelC${e+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${o}) {\n                      xTexelC${e+2}.zw = vec2(0.0);\n                    }\n                  }\n                  `,p>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                    }\n                    `),y+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+2}.xy);\n                  `):y+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelC${e+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${o}) {\n                        xTexelC${e+2}.zw = vec2(0.0);\n                      }\n                    }\n\n                    xC${e+1} = xTexelC${e+2};\n                    `}}else e<b&&(c%2===1?(y+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelC${e+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${o}) {\n                    xTexelC${e+2}.zw = vec2(0.0);\n                  }\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+2}.zw);\n              `,e+1<b&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${o}) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelC${e+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${o}) {\n                    xTexelC${e+2}.zw = vec2(0.);\n                  }\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+2}.xy);\n              `,e+1<b&&(y+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+2}.zw);\n                `)));e<b&&(y+=`\n            wTexel = getW(${w}, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<b&&(y+=`\n              wTexel = getW(${w}, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let x="",O="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,O="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${O}\n        setOutput(result);\n      }\n    `}}const mv={kernelName:f.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,l),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const d=f.backend_util.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!0);let h;return h=Object(f.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new fv(d):new pv(d),n.runWebGLProgram(h,[a,s],"float32")}};class bv{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gv{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yv={kernelName:f.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,dy:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,d=f.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),h=new bv(d);return n.runWebGLProgram(h,[a,s],"float32")}};const xv={kernelName:f.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,filter:s}=e,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,d=f.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),h=new gv(d);return n.runWebGLProgram(h,[a,s],"float32")}};class Ov{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const vv={kernelName:f.Diag,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=[...r.shape,...r.shape],s=f.util.sizeFromShape(r.shape),i=ox({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new Ov(s),u=n.runWebGLProgram(o,[i],i.dtype),c=ox({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};class wv{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=t,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const kv={kernelName:f.Dilation2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s}=e,{strides:i,pad:o,dilations:u}=r,c=f.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let l;const d=new wv(c);l=n.runWebGLProgram(d,[a,s],"float32");const h=ox({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),h}};const Iv={kernelName:f.Einsum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{equation:a}=r,s=e,{allDims:i,summedDims:o,idDims:u}=f.backend_util.decodeEinsumEquation(a,s.length);f.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:c,steps:l}=f.backend_util.getEinsumComputePath(o,u),d=l.length;let h=null,p=i.length;const m=[];for(let b=0;b<d;++b){for(const t of l[b]){const{permutationIndices:e,expandDims:r}=f.backend_util.getEinsumPermutation(p,u[t]);let a;f.backend_util.isIdentityPermutation(e)?a=s[t]:(a=gx({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const i=a.shape.slice();for(let t=0;t<r.length;++t)i.splice(r[t],0,1);f.util.arraysEqual(a.shape,i)||(a=ox({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=sx({inputs:{a:a,b:h},backend:n}),m.push(h))}b<d-1&&(c[b]>=0&&(h=mx({inputs:{x:h},backend:n,attrs:{axis:c[b]-(i.length-p),keepDims:!1}}),m.push(h)),p--)}for(const f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}},Nv=Jy({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),jv={kernelName:f.Elu,backendName:"webgl",kernelFunc:Nv},Sv={kernelName:f.EluGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:a}=e,s=Object(f.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Py("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Ly("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Tv=Zy({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Cv={kernelName:f.Equal,backendName:"webgl",kernelFunc:Tv},$v=Jy({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${f.backend_util.ERF_P};\n  float a1 = ${f.backend_util.ERF_A1};\n  float a2 = ${f.backend_util.ERF_A2};\n  float a3 = ${f.backend_util.ERF_A3};\n  float a4 = ${f.backend_util.ERF_A4};\n  float a5 = ${f.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ev={kernelName:f.Erf,backendName:"webgl",kernelFunc:$v},Av="return exp(x);",Fv=Jy({opSnippet:Av,packedOpSnippet:Av,cpuKernelImpl:Zg}),Rv={kernelName:f.Exp,backendName:"webgl",kernelFunc:Fv};function _v(t){const{inputs:e,attrs:n,backend:r}=t,{dim:a}=n,{input:s}=e,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(f.util.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),ox({inputs:{x:s},backend:r,attrs:{shape:o}})}const Dv={kernelName:f.ExpandDims,backendName:"webgl",kernelFunc:_v},Mv="return exp(x) - 1.0;",zv=Jy({opSnippet:Mv,packedOpSnippet:Mv,cpuKernelImpl:Qg}),Lv={kernelName:f.Expm1,backendName:"webgl",kernelFunc:zv};class Pv{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Bv(t,e,n){const r=n.texData.get(t.dataId),a=f.util.sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=ox({inputs:{x:t},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new Pv("real",o,e),c=new Pv("imag",o,e),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,l,"float32"),h=n.runWebGLProgram(c,l,"float32"),p=Wy({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const m=ox({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),m}const Vv={kernelName:f.FFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Bv(r,!1,n)}};class Wv{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function Uv(t){const{backend:e,attrs:n}=t,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||f.util.inferDtype(a),"string"===s){const t=f.util.getArrayFromDType(s,f.util.sizeFromShape(r));return t.fill(a),e.makeTensorInfo(r,s,t)}{const t=new Wv(r,a),n=t.getCustomSetupFunc(a);return e.runWebGLProgram(t,[],s,n)}}const Kv={kernelName:f.Fill,backendName:"webgl",kernelFunc:Uv};class Gv{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Hv={kernelName:f.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,a=new Gv(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},qv="return floor(x);",Xv=Jy({opSnippet:qv,packedOpSnippet:qv,cpuKernelImpl:ty}),Yv={kernelName:f.Floor,backendName:"webgl",kernelFunc:Xv},Jv=Zy({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Zv={kernelName:f.FloorDiv,backendName:"webgl",kernelFunc:Jv};class Qv{constructor(t){this.variableNames=["A"];const e=dg(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class tw{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=dg(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const ew={kernelName:f.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:a}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],d=[c,u,s];(o||i)&&(null==nw&&(nw=document.createElement("canvas").getContext("2d")),nw.canvas.width=u,nw.canvas.height=c,nw.drawImage(a,0,0,u,c),a=nw.canvas);const h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=Fb.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Object(f.env)().getBool("WEBGL_PACK")?new tw(d):new Qv(d),m=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),m}};let nw;const rw={kernelName:f.FusedConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:m}=r,b=f.backend_util.convertConv2DDataFormat(l),g=f.backend_util.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!1,b);let y;const x=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(f.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=WO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});else{const t=null!=i,e=null!=o,r="leakyrelu"===p,u=p?Qy(p,!1):null,c=new LO(g,t,u,e,r),l=[a,s];if(i&&l.push(i),o&&l.push(o),r){const t=n.makeTensorInfo([],"float32",f.util.createScalarValue(m,"float32"));l.push(t),x.push(t)}y=n.runWebGLProgram(c,l,"float32")}else y=VO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:m});const O=ox({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return x.push(y),x.forEach((t=>n.disposeIntermediateTensorInfo(t))),O}};const aw={kernelName:f.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:s,bias:i,preluActivationWeights:o}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,m=[];let b=l;null==b&&(b=[1,1]),f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(u,b),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${b}'`));const g=f.backend_util.computeConv2DInfo(a.shape,s.shape,u,b,c,d,!0),y=Object(f.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?Qy(h,y):null,O=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===h;if(v&&O.push(i),w&&O.push(o),k){const t=n.makeTensorInfo([],"float32",f.util.createScalarValue(p,"float32"));O.push(t),m.push(t)}let I;I=y?new fv(g,v,x,w,k):new pv(g,v,x,w,k);const N=n.runWebGLProgram(I,O,"float32");return m.forEach((t=>n.disposeIntermediateTensorInfo(t))),N}};class sw{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Wg(e.length),a=Wg(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const iw={kernelName:f.GatherNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:a}=e,s=a.shape,i=s[s.length-1],[o,u,c,l]=f.backend_util.prepareAndValidate(r,a),d=ox({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),h=ox({inputs:{x:r},backend:n,attrs:{shape:[f.util.sizeFromShape(r.shape)/c,c]}}),p=new sw(i,l,[u,c]),m=n.runWebGLProgram(p,[h,d],h.dtype),b=ox({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),b}};class ow{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Wg(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<t.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[a]}`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const uw={kernelName:f.GatherV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,indices:s}=e,{axis:i,batchDims:o}=r,u=f.util.parseAxisParam(i,a.shape)[0],c=f.backend_util.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=f.util.sizeFromShape(s.shape),d=[],h=ox({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=ox({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const m=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const t=n.bufferSync(p),e=n.bufferSync(h),r=ey(e,t,m);return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const b=new ow(h.shape,m),g=n.runWebGLProgram(b,[h,p],h.dtype);d.push(g);const y=ox({inputs:{x:g},backend:n,attrs:{shape:c.outputShape}});return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),y}},cw=Zy({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ny,dtype:"bool"}),lw={kernelName:f.Greater,backendName:"webgl",kernelFunc:cw},dw=Zy({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),hw={kernelName:f.GreaterEqual,backendName:"webgl",kernelFunc:dw};const pw={kernelName:f.IFFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Bv(r,!0,n)}},fw=Jy({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),mw={kernelName:f.IsFinite,backendName:"webgl",kernelFunc:fw},bw=Jy({opSnippet:"return float(isinf(x));",dtype:"bool"}),gw={kernelName:f.IsInf,backendName:"webgl",kernelFunc:bw},yw=Jy({opSnippet:"return float(isnan(x));",dtype:"bool"}),xw={kernelName:f.IsNan,backendName:"webgl",kernelFunc:yw},Ow=Zy({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ry,dtype:"bool"}),vw={kernelName:f.Less,backendName:"webgl",kernelFunc:Ow},ww=Zy({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),kw={kernelName:f.LessEqual,backendName:"webgl",kernelFunc:ww};const Iw={kernelName:f.LinSpace,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:s}=n,i=ay(r,a,s);return e.makeTensorInfo([i.length],"float32",i)}},Nw=Jy({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sy}),jw={kernelName:f.Log,backendName:"webgl",kernelFunc:Nw},Sw=Jy({opSnippet:"return log(1.0 + x);"}),Tw={kernelName:f.Log1p,backendName:"webgl",kernelFunc:Sw},Cw=Zy({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),$w={kernelName:f.LogicalAnd,backendName:"webgl",kernelFunc:Cw},Ew=Jy({opSnippet:"return float(!(x >= 1.0));"}),Aw={kernelName:f.LogicalNot,backendName:"webgl",kernelFunc:Ew},Fw=Zy({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Rw={kernelName:f.LogicalOr,backendName:"webgl",kernelFunc:Fw};class _w{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Dw{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=e,i=t[3]-1;let o;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Mw={kernelName:f.LRN,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{depthRadius:s,bias:i,alpha:o,beta:u}=r,c=Object(f.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Dw(a.shape,s,i,o,u):new _w(a.shape,s,i,o,u);return n.runWebGLProgram(c,[a],a.dtype)}};class zw{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Lw={kernelName:f.LRNGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a,y:s,dy:i}=e,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new zw(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function Pw(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=f.util.parseAxisParam(s,a.shape);let c=u;const l=f.backend_util.getAxesPermutation(c,o),d=null!=l,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const t=n.texData.get(p.dataId).values,e=new Array(o);for(let n=0;n<e.length;n++)e[n]=a.shape[l[n]];const r=vy(t,a.shape,a.dtype,l,e);p=n.makeTensorInfo(e,a.dtype);n.texData.get(p.dataId).values=r}else p=fx(a,l,n);c=f.backend_util.getInnerMostAxes(c.length,o)}f.backend_util.assertAxesAreInnerMostDims("max",c,o);const[m,b]=f.backend_util.computeOutAndReduceShapes(p.shape,c);let g,y=m;if(i&&(y=f.backend_util.expandShapeToKeepDim(m,u)),h){const t=n.texData.get(p.dataId).values,e=iy(t,f.util.sizeFromShape(b),y,a.dtype);g=n.makeTensorInfo(y,a.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const a=f.util.sizeFromShape(e),s=ox({inputs:{x:t},attrs:{shape:[f.util.sizeFromShape(t.shape)/a,a]},backend:r}),i=dx(s,t.dtype,"max",r),o=ox({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,b,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const Bw={kernelName:f.Max,backendName:"webgl",kernelFunc:Pw},Vw=Zy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:oy}),Ww={kernelName:f.Maximum,backendName:"webgl",kernelFunc:Vw};const Uw={kernelName:f.MaxPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e;cg(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=f.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&f.util.arraysEqual(c.inShape,c.outShape))return By({inputs:{x:a},backend:n});const l=new Zx(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}};const Kw={kernelName:f.MaxPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=f.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,c,u),d=new Qx(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class Gw{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,s=t.effectiveFilterWidth,i=a-1-t.padInfo.top,o=s-1-t.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hw{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,s=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=o-1-t.padInfo.front,d=u-1-t.padInfo.top,h=c-1-t.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const qw={kernelName:f.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s}=e,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=f.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new Qx(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),m=new Hw(d),b=n.runWebGLProgram(m,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),b}};const Xw={kernelName:f.MaxPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:a,input:s,output:i}=e,o=s;cg([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=f.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=new Zx(h,"max",!0),m=n.runWebGLProgram(p,[o],o.dtype),b=new Gw(h),g=n.runWebGLProgram(b,[a,m],o.dtype);return n.disposeIntermediateTensorInfo(m),g}};const Yw={kernelName:f.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=e,u=n;f.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];f.util.assert(f.backend_util.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const l=f.backend_util.computePool2DInfo(r.shape,a,s,c,i),[d,h]=function(t,e,n,r){let a=new Zx(n,"max",!1);const s=r.runWebGLProgram(a,[t],"float32");return a=new Zx(n,"max",!0,!0,e),[s,r.runWebGLProgram(a,[t],"float32")]}(r,o,l,u);return[d,h]}};const Jw={kernelName:f.Mean,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:a,axis:s}=e,i=n,o=r.shape.length,u=f.util.parseAxisParam(s,r.shape);let c=u;const l=f.backend_util.getAxesPermutation(c,o),d=null!=l,h=i.shouldExecuteOnCPU([r]),p=[];let m=r;if(d){if(h){const t=i.texData.get(m.dataId).values,e=new Array(o);for(let a=0;a<e.length;a++)e[a]=r.shape[l[a]];const n=vy(t,r.shape,r.dtype,l,e);m=i.makeTensorInfo(e,r.dtype);i.texData.get(m.dataId).values=n}else m=fx(r,l,i);p.push(m),c=f.backend_util.getInnerMostAxes(c.length,o)}f.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[b,g]=f.backend_util.computeOutAndReduceShapes(m.shape,c);let y=b;a&&(y=f.backend_util.expandShapeToKeepDim(b,u));const x=function(t,e,n,r){const a=f.util.sizeFromShape(e),s=ox({inputs:{x:t},attrs:{shape:[f.util.sizeFromShape(t.shape)/a,a]},backend:r}),i=dx(s,"float32","mean",r),o=ox({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(m,g,y,i);for(const f of p)i.disposeIntermediateTensorInfo(f);return x}};const Zw={kernelName:f.Min,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,o=a.shape.length,u=f.util.parseAxisParam(s,a.shape);let c=u;const l=f.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=gx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=f.backend_util.getInnerMostAxes(c.length,a.shape.length)),f.backend_util.assertAxesAreInnerMostDims("min",c,o);const[h,p]=f.backend_util.computeOutAndReduceShapes(d.shape,c),m=ox({inputs:{x:d},backend:n,attrs:{shape:[-1,f.util.sizeFromShape(p)]}}),b=dx(m,m.dtype,"min",n);let g;if(i){g=ox({inputs:{x:b},backend:n,attrs:{shape:f.backend_util.expandShapeToKeepDim(h,u)}})}else g=ox({inputs:{x:b},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=l&&n.disposeIntermediateTensorInfo(d),g}},Qw=Zy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:uy}),tk={kernelName:f.Minimum,backendName:"webgl",kernelFunc:Qw};class ek{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,a=Wg(r),s=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class nk{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,a=Wg(r),s=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=Iy("rc",r),u=Iy("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const t=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const rk={kernelName:f.MirrorPad,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:a,mode:s}=n,i=Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nk(r.shape,a,s):new ek(r.shape,a,s);return e.runWebGLProgram(i,[r],r.dtype)}},ak=Zy({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),sk={kernelName:f.Mod,backendName:"webgl",kernelFunc:ak};class ik{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const ok=Zy({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uk={kernelName:f.RealDiv,backendName:"webgl",kernelFunc:ok},ck="return a - b;",lk=Zy({opSnippet:ck,packedOpSnippet:ck,supportsComplex:!0,cpuKernelImpl:yy}),dk={kernelName:f.Sub,backendName:"webgl",kernelFunc:lk};function hk(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{dim:s}=r,i=f.util.parseAxisParam([s],a.shape),o=Pw({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=f.backend_util.expandShapeToKeepDim(o.shape,i),c=ox({inputs:{x:o},backend:n,attrs:{shape:u}}),l=lk({inputs:{a:a,b:c},backend:n}),d=Fv({inputs:{x:l},backend:n}),h=mx({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=ox({inputs:{x:h},backend:n,attrs:{shape:u}}),m=ok({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),m}const pk={kernelName:f.Softmax,backendName:"webgl",kernelFunc:hk};const fk={kernelName:f.Multinomial,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:s,seed:i,normalized:o}=r,u=o?a:hk({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new ik(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},mk="return -x;";const bk={kernelName:f.Neg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,a]=ly(t.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,e)}let a;return a=Object(f.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ry(r.shape,mk):new Ey(r.shape,mk),n.runWebGLProgram(a,[r],r.dtype)}},gk=f.kernel_impls.nonMaxSuppressionV3Impl;const yk={kernelName:f.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(t){f.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:d}=gk(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},xk=f.kernel_impls.nonMaxSuppressionV4Impl;const Ok={kernelName:f.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(t){f.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=xk(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},vk=f.kernel_impls.nonMaxSuppressionV5Impl;const wk={kernelName:f.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(t){f.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:s}=e,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,m=u,b=c,{selectedIndices:g,selectedScores:y}=vk(l,d,h,p,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class kk{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Ik={kernelName:f.OneHot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:a}=e,{depth:s,onValue:i,offValue:o}=r,u=f.util.sizeFromShape(a.shape),c=new kk(u,s,i,o),l=ox({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const h=ox({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),h}};function Nk(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=xO({inputs:{input:r},backend:n}),e=Nk({inputs:{x:t},backend:n}),a=RO({inputs:{input:r},backend:n}),s=Nk({inputs:{x:a},backend:n}),i=Wy({inputs:{real:e,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Uv({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const jk={kernelName:f.ZerosLike,backendName:"webgl",kernelFunc:Nk};const Sk={kernelName:f.OnesLike,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const e=xO({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),s=RO({inputs:{input:a},backend:r}),i=Nk({inputs:{x:s},backend:r}),o=Wy({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Uv({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const Tk={kernelName:f.Pack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:a}=r;if(1===e.length)return _v({inputs:{input:e[0]},backend:n,attrs:{dim:a}});const s=e[0].shape,i=e[0].dtype;e.forEach((t=>{f.util.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),f.util.assert(i===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=MO({inputs:e.map((t=>{const e=_v({inputs:{input:t},backend:n,attrs:{dim:a}});return o.push(e),e})),backend:n,attrs:{axis:a}});return o.forEach((t=>n.disposeIntermediateTensorInfo(t))),u}};class Ck{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,a=Wg(r),s=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class $k{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,a=Wg(r),s=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=Iy("rc",r),u=Iy("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}const Ek=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{paddings:s,constantValue:i}=r,o=Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $k(a.shape,s,i):new Ck(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},Ak={kernelName:f.PadV2,backendName:"webgl",kernelFunc:Ek},Fk=Zy({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Rk={kernelName:f.Pow,backendName:"webgl",kernelFunc:Fk};const _k={kernelName:f.Prod,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],c=f.util.parseAxisParam(s,a.shape);let l=c;const d=f.backend_util.getAxesPermutation(l,o);let h,p=a;if(null!=d&&(p=gx({inputs:{x:a},backend:n,attrs:{perm:d}}),l=f.backend_util.getInnerMostAxes(l.length,o),u.push(p)),f.backend_util.assertAxesAreInnerMostDims("prod",l,o),n.shouldExecuteOnCPU([p])){const t=n.texData.get(p.dataId).values,{outVals:e,outShape:r,outDtype:a}=dy(p.shape,p.dtype,t,l);h=n.makeTensorInfo(r,a,e)}else{const[t,e]=f.backend_util.computeOutAndReduceShapes(p.shape,l),r=f.util.sizeFromShape(e),s=ox({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=dx(s,Object(f.sumOutType)(a.dtype),"prod",n);h=ox({inputs:{x:i},backend:n,attrs:{shape:t}}),u.push(s),u.push(i)}if(i){u.push(h);const t=f.backend_util.expandShapeToKeepDim(h.shape,c);h=ox({inputs:{x:h},backend:n,attrs:{shape:t}})}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),h}},Dk=t=>{const{backend:e,attrs:n}=t,{start:r,stop:a,step:s,dtype:i}=n,o=hy(r,a,s,i);return e.makeTensorInfo([o.length],i,o)},Mk={kernelName:f.Range,backendName:"webgl",kernelFunc:Dk},zk=Jy({opSnippet:"return 1.0 / x;"}),Lk={kernelName:f.Reciprocal,backendName:"webgl",kernelFunc:zk},Pk=Jy({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Bk={kernelName:f.Relu,backendName:"webgl",kernelFunc:Pk},Vk=Jy({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Wk={kernelName:f.Relu6,backendName:"webgl",kernelFunc:Vk};class Uk{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Kk{constructor(t,e,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Gk={kernelName:f.ResizeBilinear,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(f.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Kk(a.shape,u,c,s,i):new Uk(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],"float32")}};class Hk{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const qk={kernelName:f.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new Hk(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Xk{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=t;this.outputShape=[s,e,n,u];const c=[r&&e>1?i-1:i,r&&n>1?o-1:o],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Yk={kernelName:f.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new Xk(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}};class Jk{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,s,i]=t,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Zk={kernelName:f.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:s}=e,{alignCorners:i}=r,o=new Jk(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Qk{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Wg(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class tI{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Iy("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Wg(n);function o(n){const r=t.map(((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(r.slice())};\n          if(${a}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const eI={kernelName:f.Reverse,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{dims:s}=r,i=a.shape.length,o=f.util.parseAxisParam(s,a.shape);if(0===i)return By({inputs:{x:a},backend:n});const u=Object(f.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tI(a.shape,o):new Qk(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class nI{constructor(t,e){this.variableNames=["Image"],this.outputShape=[];const n=t[1],r=t[2];this.outputShape=t;let a="";a="number"===typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(t,e,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,t,e,n,r)}}}const rI={kernelName:f.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:a,fillValue:s,center:i}=e,o=n,u=new nI(r.shape,s),[c,l]=f.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(c,l,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,d)}},aI=Jy({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),sI={kernelName:f.Round,backendName:"webgl",kernelFunc:aI},iI=Jy({opSnippet:"return inversesqrt(x);",cpuKernelImpl:py}),oI={kernelName:f.Rsqrt,backendName:"webgl",kernelFunc:iI};class uI{constructor(t,e,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Wg(a.length),u=Wg(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const cI={kernelName:f.ScatterNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:a,updates:s}=e,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=f.backend_util.calculateShapes(s,a,i),h=[d/c,c];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=ox({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),m=ox({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new uI(u,o,p.shape.length,m.shape.length,l,h),y=n.runWebGLProgram(g,[m,p,b],m.dtype),x=ox({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}};class lI{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<e.length;r++)i.push(`${n[r]}`),r<t&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=Wg(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const dI={kernelName:f.Select,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:a,e:s}=e,i=new lI(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(f.upcastType)(a.dtype,s.dtype))}},hI=Jy({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${f.backend_util.SELU_SCALEALPHA};\n  float scale = ${f.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),pI={kernelName:f.Selu,backendName:"webgl",kernelFunc:hI},fI=Jy({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),mI={kernelName:f.Sigmoid,backendName:"webgl",kernelFunc:fI},bI=Jy({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),gI={kernelName:f.Sign,backendName:"webgl",kernelFunc:bI},yI=Jy({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),xI={kernelName:f.Sin,backendName:"webgl",kernelFunc:yI},OI=Jy({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),vI={kernelName:f.Sinh,backendName:"webgl",kernelFunc:OI},wI=Jy({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),kI={kernelName:f.Softplus,backendName:"webgl",kernelFunc:wI},II={kernelName:f.SpaceToBatchND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{blockShape:s,paddings:i}=r;f.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((t,e)=>t*e)),u=[[0,0]];u.push(...i);for(let f=1+s.length;f<a.shape.length;++f)u.push([0,0]);const c=[],l=Ek({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=f.backend_util.getReshaped(l.shape,s,o,!1),h=f.backend_util.getPermuted(d.length,s.length,!1),p=f.backend_util.getReshapedPermuted(l.shape,s,o,!1),m=ox({inputs:{x:l},backend:n,attrs:{shape:d}}),b=gx({inputs:{x:m},backend:n,attrs:{perm:h}}),g=ox({inputs:{x:b},backend:n,attrs:{shape:p}});return c.push(l),c.push(m),c.push(b),c.forEach((t=>n.disposeIntermediateTensorInfo(t))),g}};const NI={kernelName:f.SparseReshape,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:a,newShape:s}=e;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[c,l,d]=by(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const jI={kernelName:f.SparseToDense,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:a,sparseValues:s,defaultValue:i}=e,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=f.backend_util.calculateShapes(s,a,o),h=new uI(c,u,a.shape.length,s.shape.length,l,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),m=ox({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),m}};const SI={kernelName:f.SplitV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{numOrSizeSplits:s,axis:i}=r,o=f.util.parseAxisParam(i,a.shape)[0],u=f.backend_util.prepareSplitSize(a,s,o),c=a.shape.length,l=new Array(c).fill(0),d=a.shape.slice();return u.map((t=>{const e=[...d];e[o]=t;const r=pO({inputs:{x:a},backend:n,attrs:{begin:l,size:e}});return l[o]+=t,r}))}},TI=Jy({opSnippet:"return sqrt(x);"}),CI={kernelName:f.Sqrt,backendName:"webgl",kernelFunc:TI},$I=Jy({opSnippet:"return x * x;"}),EI={kernelName:f.Square,backendName:"webgl",kernelFunc:$I},AI="return (a - b) * (a - b);",FI=Zy({opSnippet:AI,packedOpSnippet:AI}),RI={kernelName:f.SquaredDifference,backendName:"webgl",kernelFunc:FI};const _I={kernelName:f.Step,backendName:"webgl",kernelFunc:function({inputs:t,attrs:e,backend:n}){const{x:r}=t,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `,s=new Ey(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class DI{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Wg(n.length),s=Wg(n.length);let i="";if(1===r)i="coords * strides + begin";else{let t=0;i=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const MI={kernelName:f.StridedSlice,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{nonStrided:p,$begin:m,$strides:b,size:g,newShape:y,outShape:x}=f.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,d,h),O=ox({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(p){const t=pO({inputs:{x:O},backend:n,attrs:{begin:m,size:g}});v=ox({inputs:{x:t},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(t)}else if(x.some((t=>0===t)))v=n.makeTensorInfo(x,a.dtype,[]);else{if(n.shouldExecuteOnCPU([O])){const t=n.texData.get(O.dataId).values,e=Object(f.buffer)(O.shape,O.dtype,t),r=gy(x,e,b,m);v=n.makeTensorInfo(x,O.dtype,r.values)}else{const t=new DI(m,b,x);v=n.runWebGLProgram(t,[O],O.dtype)}}const w=ox({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(v),w}},zI=Jy({opSnippet:"return tan(x);"}),LI={kernelName:f.Tan,backendName:"webgl",kernelFunc:zI},PI=Jy({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BI={kernelName:f.Tanh,backendName:"webgl",kernelFunc:PI};class VI{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const r=Wg(this.rank),a=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push(`imod(${n[a]}, ${t[a]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function WI(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const t=n.readSync(a.dataId).map((t=>f.util.decodeString(t))),e=Object(f.buffer)(a.shape,a.dtype,t),r=xy(e,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new VI(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const UI={kernelName:f.Tile,backendName:"webgl",kernelFunc:WI};const KI={kernelName:f.TopK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=Oy(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};class GI{constructor(t,e,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const HI={kernelName:f.Transform,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:a,transforms:s}=e,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new GI(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}};const qI={kernelName:f.Unique,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:s}=e;cg(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=wy(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const XI={kernelName:f.Unpack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let m=0;m<o;m++)m!==s&&(c[l++]=i.shape[m]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let m=0;m<f.length;m++){h[s]=m;const t=pO({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),e=ox({inputs:{x:t},backend:n,attrs:{shape:c}});f[m]=e,d.push(t)}return d.forEach((t=>n.disposeIntermediateTensorInfo(t))),f}};class YI{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,s=t.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const JI=[Mw,Lw,Ox,wx,Ix,jx,Cx,Ax,Fx,Rx,Px,Bx,Wx,Kx,Xx,Hx,Jx,eO,tO,aO,sO,iO,cO,mO,bO,vO,IO,SO,$O,Uy,zO,XO,YO,UO,ZO,QO,JO,ev,rv,sv,cv,lv,hv,yv,xv,mv,vv,kv,Iv,jv,Sv,Cv,Ev,Rv,Dv,Lv,Vv,Kv,Hv,Yv,Zv,ew,rw,aw,iw,uw,lw,hw,Vy,pw,_O,mw,gw,xw,Hy,vw,kw,Iw,Tw,jw,$w,Aw,Rw,Bw,Kw,Uw,qw,Xw,Yw,Ww,Jw,Zw,tk,rk,sk,fk,ix,bk,yk,Ok,wk,yO,Ik,Sk,Tk,Ak,Rk,Yy,_k,Mk,OO,uk,Lk,Wk,Bk,ux,Gk,qk,Yk,Zk,eI,rI,sI,oI,cI,dI,pI,mI,gI,xI,vI,fO,pk,kI,II,NI,jI,SI,CI,EI,RI,_I,MI,dk,bx,LI,BI,UI,KI,HI,yx,qI,XI,{kernelName:f.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,segmentIds:s}=e,{numSegments:i}=r,o=a.shape.length,u=[];let c=0;const l=f.backend_util.getAxesPermutation([c],o);let d=a;null!=l&&(d=gx({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),c=f.backend_util.getInnerMostAxes(1,o)[0]);const h=f.backend_util.segment_util.computeOutShape(d.shape,c,i),p=f.util.sizeFromShape([d.shape[c]]),m=ox({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(m);const b=Object(f.sumOutType)(a.dtype),g=(t,e,r,a,s)=>{const i=t.shape[0],o=t.shape[1],c=f.backend_util.segment_util.segOpComputeOptimalWindowSize(o,s),l=new YI({windowSize:c,inSize:o,batchSize:i,numSegments:s},e),d=n.compileAndRun(l,[t,r],a);if(u.push(d),d.shape[1]===s)return d;const h=Dk({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=WI({inputs:{x:h},backend:n,attrs:{reps:[o/c]}});u.push(h),u.push(p);return g(d,e,p,a,s)},y=ox({inputs:{x:g(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:h}});let x=y;if(null!=l){u.push(y);const t=f.backend_util.getUndoAxesPermutation(l);x=gx({inputs:{x:x},backend:n,attrs:{perm:t}})}return u.forEach((t=>n.disposeIntermediateTensorInfo(t))),x}},jk];for(const fj of JI)Object(f.registerKernel)(fj);f.version_core;var ZI=function(t,e){return(ZI=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function QI(t,e){function n(){this.constructor=t}ZI(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var tN=function(){return(tN=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function eN(t,e,n,r){return new(n||(n=Promise))((function(a,s){function i(t){try{u(r.next(t))}catch(t){s(t)}}function o(t){try{u(r.throw(t))}catch(t){s(t)}}function u(t){t.done?a(t.value):new n((function(e){e(t.value)})).then(i,o)}u((r=r.apply(t,e||[])).next())}))}function nN(t,e){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=e.call(t,i)}catch(t){s=[6,t],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}function rN(t){var e=t.shape[2],n=Object(f.argMax)(t,2),r=Object(f.reshape)(n,[-1]);return Object(f.oneHot)(r,e)}function aN(t,e){return Object(f.tidy)((function(){return Object(f.cast)(Object(f.greater)(t,Object(f.scalar)(e)),"int32")}))}function sN(t,e){var n=e.shape,r=n[0],a=n[1],s=n[2];return Object(f.tidy)((function(){var n=rN(e),i=Object(f.expandDims)(Object(f.range)(0,s,1,"int32"),1),o=Object(f.cast)(Object(f.matMul)(n,i),"int32"),u=Object(f.reshape)(o,[r,a]),c=Object(f.add)(u,Object(f.scalar)(1,"int32"));return Object(f.sub)(function(t,e){return Object(f.mul)(t,e)}(c,t),Object(f.scalar)(1,"int32"))}))}function iN(t){var e=t.shape,n=e[0],r=e[1],a=e[2];return Object(f.tidy)((function(){var e=rN(t),s=Object(f.expandDims)(Object(f.range)(0,a,1,"int32"),1),i=Object(f.cast)(Object(f.matMul)(e,s),"int32");return Object(f.reshape)(i,[n,r])}))}var oN=function(){function t(t,e){this.model=t,this.outputStride=e;var n=this.model.inputs[0].shape;f.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return t.prototype.predict=function(t){var e=this;return Object(f.tidy)((function(){var n=e.preprocessInput(Object(f.cast)(t,"float32")),r=Object(f.expandDims)(n,0),a=e.model.predict(r).map((function(t){return Object(f.squeeze)(t,[0])})),s=e.nameOutputResults(a);return{heatmapScores:Object(f.sigmoid)(s.heatmap),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd,segmentation:s.segmentation,partHeatmaps:s.partHeatmaps,longOffsets:s.longOffsets,partOffsets:s.partOffsets}}))},t.prototype.dispose=function(){this.model.dispose()},t}(),uN=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return QI(e,t),e.prototype.preprocessInput=function(t){return Object(f.tidy)((function(){return Object(f.sub)(Object(f.div)(t,127.5),1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(oN),cN=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],lN=cN.length,dN=cN.reduce((function(t,e,n){return t[e]=n,t}),{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(t){var e=t[0],n=t[1];return[dN[e],dN[n]]}));function hN(t,e,n){var r=t[0],a=t[1],s=e[0],i=e[1],o=n.top,u=n.bottom;return[i/(n.left+n.right+a),s/(o+u+r)]}function pN(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+lN)}}function fN(t,e,n){var r=pN(t.heatmapY,t.heatmapX,t.id,n),a=r.y,s=r.x;return{x:t.heatmapX*e+s,y:t.heatmapY*e+a}}function mN(t,e,n){return t<e?e:t>n?n:t}function bN(t,e){return{x:t.x+e.x,y:t.y+e.y}}function gN(t,e,n){void 0===n&&(n=.3);for(var r=0,a=0,s=0;s<t.length;s++)e.keypoints[s].score>n&&(a+=1,r+=Math.pow(t[s].x-e.keypoints[s].position.x,2)+Math.pow(t[s].y-e.keypoints[s].position.y,2));return 0===a?r=1/0:r/=a,r}function yN(t,e,n,r,a,s,i){for(var o=i[0],u=i[1],c=n(t),l=c.y*r+c.x,d=a[lN*(2*l)+e],h=a[lN*(2*l+1)+e],p=t.y+d,f=t.x+h,m=0;m<s;m++){p=Math.min(p,o-1);var b=n({x:f=Math.min(f,u-1),y:p}),g=b.y*r+b.x;p+=d=a[lN*(2*g)+e],f+=h=a[lN*(2*g+1)+e]}return{x:f,y:p}}function xN(t,e,n,r,a,s,i,o,u,c){for(var l=a[0],d=a[1],h=s[0],p=s[1],f=o[0],m=o[1],b=[],g=function(t){return function(t,e,n,r){var a=e[0],s=e[1],i=n[0],o=n[1],u=Math.round(((a+t.y+1)*o-1)/r);return{x:Math.round(((s+t.x+1)*i-1)/r),y:u}}(t,[l,d],[h,p],u)},y=0;y<r;y++){var x=yN(t,y,g,i,e,c,[f,m]);b.push(x)}for(var O=-1,v=1/0,w=0;w<n.length;w++){var k=gN(b,n[w]);k<v&&(O=w,v=k)}return O}function ON(t,e){var n=t[0],r=t[1];return[Math.round((r-1)/e+1),Math.round((n-1)/e+1)]}function vN(t,e,n,r,a,s,i,o,u,c,l){for(var d=i[0],h=i[1],p=t.shape,m=p[0],b=p[1],g=e.shape.slice(0,2),y=g[0],x=g[1],O=Object(f.reshape)(e,[y,x,2,lN]),v=new Float32Array(l*lN*3).fill(0),w=0;w<n.length;w++)for(var k=w*lN*3,I=n[w],N=0;N<lN;N++){var j=I.keypoints[N],S=k+3*N;v[S]=j.score,v[S+1]=j.position.y,v[S+2]=j.position.x}var T=hN([r,a],[d,h],o),C=T[0],$=T[1],E=Object(f.tensor)(v,[l,lN,3]),A=o.top,F=o.left,R={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,b],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+A+", "+$+", "+s+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+F+", "+C+", "+s+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+l+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+lN+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+u+"; s++) {\n            int yRounded = round(min(y, float("+(r-1)+")));\n            int xRounded = round(min(x, float("+(a-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+A+", "+$+", "+s+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+F+", "+C+", "+s+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+c+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return Object(f.backend)().compileAndRun(R,[t,O,E])}function wN(){return"webgl"===Object(f.getBackend)()}function kN(t,e,n,r,a,s,i,o,u,c,l,d){var h=i[0],p=i[1];return void 0===u&&(u=.2),void 0===c&&(c=8),void 0===l&&(l=.3),void 0===d&&(d=10),eN(this,void 0,void 0,(function(){var i,m,b,g,y;return nN(this,(function(x){switch(x.label){case 0:return i=n.filter((function(t){return t.score>=u})),wN()?(b=Object(f.tidy)((function(){var n=vN(t,e,i,r,a,s,[h,p],o,c,l,d),u=Object(f.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return i.map((function(t,e){return function(t,e){return Object(f.tidy)((function(){return Object(f.cast)(Object(f.equal)(t,Object(f.scalar)(e)),"int32")}))}(u,e)}))})),[4,Promise.all(b.map((function(t){return t.data()})))]):[3,2];case 1:return m=x.sent(),b.forEach((function(t){return t.dispose()})),[3,5];case 2:return[4,t.data()];case 3:return g=x.sent(),[4,e.data()];case 4:y=x.sent(),m=function(t,e,n,r,a,s,i,o,u,c){var l=i[0],d=i[1];void 0===c&&(c=5);for(var h=n.map((function(t){return new Uint8Array(r*a).fill(0)})),p=o.top,f=o.left,m=hN([r,a],[l,d],o),b=m[0],g=m[1],y=ON([l,d],s)[0],x=0;x<r;x+=1)for(var O=0;O<a;O+=1){var v=x*a+O;if(1===t[v]){var w=xN({x:O,y:x},e,n,c,[p,f],[b,g],y,[r,a],s,u);w>=0&&(h[w][v]=1)}}return h}(g,y,i,r,a,s,[h,p],o,c),x.label=5;case 5:return[2,m.map((function(t,e){return{data:t,pose:i[e],width:a,height:r}}))]}}))}))}function IN(t,e,n,r,a,s,i,o,u,c,l,d,h){var p=o[0],m=o[1];return void 0===c&&(c=.2),void 0===l&&(l=8),void 0===d&&(d=.3),void 0===h&&(h=10),eN(this,void 0,void 0,(function(){var o,b,g,y,x,O;return nN(this,(function(v){switch(v.label){case 0:return o=r.filter((function(t){return t.score>=c})),wN()?(g=Object(f.tidy)((function(){var r=vN(t,e,o,a,s,i,[p,m],u,l,d,h),c=Object(f.engine)().makeTensorFromDataId(r.dataId,r.shape,r.dtype);return o.map((function(t,e){return function(t,e,n){return Object(f.tidy)((function(){return Object(f.sub)(Object(f.mul)(Object(f.cast)(Object(f.equal)(t,Object(f.scalar)(n)),"int32"),Object(f.add)(e,1)),1)}))}(c,n,e)}))})),[4,Promise.all(g.map((function(t){return t.data()})))]):[3,2];case 1:return b=v.sent(),g.forEach((function(t){return t.dispose()})),[3,6];case 2:return[4,t.data()];case 3:return y=v.sent(),[4,e.data()];case 4:return x=v.sent(),[4,n.data()];case 5:O=v.sent(),b=function(t,e,n,r,a,s,i,o,u,c,l){var d=o[0],h=o[1];void 0===l&&(l=5);for(var p=r.map((function(t){return new Int32Array(a*s).fill(-1)})),f=u.top,m=u.left,b=hN([a,s],[d,h],u),g=b[0],y=b[1],x=ON([d,h],i)[0],O=0;O<a;O+=1)for(var v=0;v<s;v+=1){var w=O*s+v;if(1===t[w]){var k=xN({x:v,y:O},e,r,l,[f,m],[g,y],x,[a,s],i,c);k>=0&&(p[k][w]=n[w])}}return p}(y,x,O,o,a,s,i,[p,m],u,l),v.label=6;case 6:return[2,b.map((function(t,e){return{pose:o[e],data:t,height:a,width:s}}))]}}))}))}function NN(t){return Math.floor(t/2)}var jN=function(){function t(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return t.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},t.prototype.empty=function(){return-1===this.numberOfElements},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(t){for(;t>0&&this.less(NN(t),t);)this.exchange(t,NN(t)),t=NN(t)},t.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},t.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},t.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},t.prototype.exchange=function(t,e){var n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=n},t}();function SN(t,e,n,r,a,s){for(var i=s.shape,o=i[0],u=i[1],c=!0,l=Math.max(n-a,0),d=Math.min(n+a+1,o),h=l;h<d;++h){for(var p=Math.max(r-a,0),f=Math.min(r+a+1,u),m=p;m<f;++m)if(s.get(h,m,t)>e){c=!1;break}if(!c)break}return c}var TN=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(t){var e=t[0],n=t[1];return[dN[e],dN[n]]})),CN=TN.map((function(t){return t[1]})),$N=TN.map((function(t){return t[0]}));function EN(t,e,n,r){return{y:mN(Math.round(t.y/e),0,n-1),x:mN(Math.round(t.x/e),0,r-1)}}function AN(t,e,n,r,a,s,i,o){void 0===o&&(o=2);for(var u=r.shape,c=u[0],l=u[1],d=function(t,e,n){var r=n.shape[2]/2;return{y:n.get(e.y,e.x,t),x:n.get(e.y,e.x,r+t)}}(t,EN(e.position,s,c,l),i),h=bN(e.position,d),p=0;p<o;p++){var f=EN(h,s,c,l),m=pN(f.y,f.x,n,a);h=bN({x:f.x*s,y:f.y*s},{x:m.x,y:m.y})}var b=EN(h,s,c,l),g=r.get(b.y,b.x,n);return{position:h,part:cN[n],score:g}}function FN(t,e,n,r,a,s){var i=e.shape[2],o=CN.length,u=new Array(i),c=t.part,l=t.score,d=fN(c,r,n);u[c.id]={score:l,part:cN[c.id],position:d};for(var h=o-1;h>=0;--h){var p=CN[h],f=$N[h];u[p]&&!u[f]&&(u[f]=AN(h,u[p],f,e,n,r,s))}for(h=0;h<o;++h)p=$N[h],f=CN[h],u[p]&&!u[f]&&(u[f]=AN(h,u[p],f,e,n,r,a));return u}function RN(t,e,n,r){var a=n.x,s=n.y;return t.some((function(t){var n=t.keypoints[r].position;return function(t,e,n,r){var a=n-t,s=r-e;return a*a+s*s}(s,a,n.y,n.x)<=e}))}function _N(t,e,n){return n.reduce((function(n,r,a){var s=r.position,i=r.score;return RN(t,e,s,a)||(n+=i),n}),0)/n.length}function DN(t,e,n,r,a,s,i,o){void 0===i&&(i=.5),void 0===o&&(o=20);for(var u=[],c=function(t,e,n){for(var r=n.shape,a=r[0],s=r[1],i=r[2],o=new jN(a*s*i,(function(t){return t.score})),u=0;u<a;++u)for(var c=0;c<s;++c)for(var l=0;l<i;++l){var d=n.get(u,c,l);d<t||SN(l,d,u,c,e,n)&&o.enqueue({score:d,part:{heatmapY:u,heatmapX:c,id:l}})}return o}(i,1,t),l=o*o;u.length<s&&!c.empty();){var d=c.dequeue();if(!RN(u,l,fN(d.part,a,e),d.part.id)){var h=FN(d,t,e,a,n,r),p=_N(u,l,h);u.push({keypoints:h,score:p})}}return u}var MN,zN=[-123.15,-115.9,-103.06],LN=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return QI(e,t),e.prototype.preprocessInput=function(t){return Object(f.add)(t,zN)},e.prototype.nameOutputResults=function(t){var e=t[0],n=t[1],r=t[2],a=t[3],s=t[4],i=t[5];return{offsets:s,segmentation:t[6],partHeatmaps:i,longOffsets:a,heatmap:r,displacementFwd:n,displacementBwd:e,partOffsets:t[7]}},e}(oN),PN="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",BN="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function VN(t){if("undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)return function(t){if(0!==t.offsetHeight&&0!==t.offsetWidth)return[t.offsetHeight,t.offsetWidth];if(null!=t.height&&null!=t.width)return[t.height,t.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(t);if("undefined"!=typeof ImageData&&t instanceof ImageData)return[t.height,t.width];if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)return function(t){return t.hasAttribute("height")&&t.hasAttribute("width")?[t.height,t.width]:[t.videoHeight,t.videoWidth]}(t);if(t instanceof f.Tensor)return[t.shape[0],t.shape[1]];throw new Error("error: Unknown input type: "+t+".")}function WN(t,e){return function(t,e){return(t-1)%e==0}(t,e)?t:Math.floor(t/e)*e+1}var UN={low:"low",medium:"medium",high:"high",full:"full"},KN=((MN={})[UN.low]=.25,MN[UN.medium]=.5,MN[UN.high]=.75,MN[UN.full]=1,MN);function GN(t,e,n){var r=n[0],a=n[1],s=function(t){if("string"==typeof t){var e=KN[t];return f.util.assert("number"==typeof e,(function(){return"string value of inputResolution must be one of "+Object.values(UN).join(",")+" but was "+t+"."})),e}return f.util.assert("number"==typeof t&&t<=2&&t>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+t})),t}(t);return[WN(r*s,e),WN(a*s,e)]}function HN(t,e,n,r,a){var s=e[0],i=e[1],o=n[0],u=n[1],c=r[0],l=c[0],d=c[1],h=r[1],p=h[0],m=h[1];return void 0===a&&(a=!1),Object(f.tidy)((function(){var e=f.image.resizeBilinear(t,[o,u],!0);return a&&(e=Object(f.sigmoid)(e)),function(t,e,n){var r=e[0],a=e[1],s=n[0],i=s[0],o=s[1],u=n[1],c=u[0],l=u[1];return Object(f.tidy)((function(){var e=Object(f.expandDims)(t);return Object(f.squeeze)(f.image.cropAndResize(e,[[i/(r+i+o-1),c/(a+c+l-1),(i+r-1)/(r+i+o-1),(c+a-1)/(a+c+l-1)]],[0],[r,a]),[0])}))}(e,[s,i],[[l,d],[p,m]])}))}function qN(t,e){var n=e[0],r=e[1],a=VN(t),s=a[0],i=a[1],o=r/n,u=[0,0,0,0],c=u[0],l=u[1],d=u[2],h=u[3];return i/s<o?(c=0,l=0,d=Math.round(.5*(o*s-i)),h=Math.round(.5*(o*s-i))):(c=Math.round(.5*(1/o*i-s)),l=Math.round(.5*(1/o*i-s)),d=0,h=0),{resized:Object(f.tidy)((function(){var e=function(t){return t instanceof f.Tensor?t:f.browser.fromPixels(t)}(t);return e=Object(f.pad3d)(e,[[c,l],[d,h],[0,0]]),f.image.resizeBilinear(e,[n,r])})),padding:{top:c,left:d,right:h,bottom:l}}}function XN(t){return eN(this,void 0,void 0,(function(){return nN(this,(function(e){return[2,Promise.all(t.map((function(t){return t.buffer()})))]}))}))}function YN(t,e,n,r,a){var s=e[0],i=e[1],o=n[0],u=n[1],c=function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===e&&0===r&&0===a?t:t.map((function(t){return function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:t.score,keypoints:t.keypoints.map((function(t){var s=t.score,i=t.part,o=t.position;return{score:s,part:i,position:{x:o.x*n+a,y:o.y*e+r}}}))}}(t,e,n,r,a)}))}(t,(s+r.top+r.bottom)/o,(i+r.left+r.right)/u,-r.top,-r.left);return a?function(t,e){return e<=0?t:t.map((function(t){return function(t,e){return{score:t.score,keypoints:t.keypoints.map((function(t){var n=t.score,r=t.part,a=t.position;return{score:n,part:r,position:{x:e-1-a.x,y:a.y}}}))}}(t,e)}))}(c,i):c}var JN=!0,ZN=!1,QN={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},tj=["MobileNetV1","ResNet50"],ej={MobileNetV1:[8,16,32],ResNet50:[32,16]},nj={MobileNetV1:[.5,.75,1],ResNet50:[1]},rj=[1,2,4];var aj={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},sj={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function ij(t){var e=t.segmentationThreshold,n=t.maxDetections,r=t.scoreThreshold,a=t.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}function oj(t){var e=t.segmentationThreshold,n=t.maxDetections,r=t.scoreThreshold,a=t.nmsRadius,s=t.minKeypointScore,i=t.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".");if(s<0||s>1)throw new Error("Invalid minKeypointScore "+s+".Should be in range [0.0, 1.0]");if(i<=0||i>20)throw new Error("Invalid refineSteps "+i+".Should be in range [1, 20]")}var uj=function(){function t(t){this.baseModel=t}return t.prototype.predictForPersonSegmentation=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},t.prototype.predictForPersonSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,partHeatmapLogits:e.partHeatmaps,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd}},t.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(t){var e=this.baseModel.predict(t);return{segmentLogits:e.segmentation,longOffsets:e.longOffsets,heatmapScores:e.heatmapScores,offsets:e.offsets,displacementFwd:e.displacementFwd,displacementBwd:e.displacementBwd,partHeatmaps:e.partHeatmaps}},t.prototype.segmentPersonActivation=function(t,e,n){var r=this;void 0===n&&(n=.5);var a=VN(t),s=a[0],i=a[1],o=GN(e,this.baseModel.outputStride,[s,i]),u=qN(t,o),c=u.resized,l=u.padding,d=Object(f.tidy)((function(){var t=r.predictForPersonSegmentation(c),e=t.segmentLogits,a=t.heatmapScores,o=t.offsets,u=t.displacementFwd,d=t.displacementBwd,h=c.shape,p=h[0],m=h[1],b=HN(e,[s,i],[p,m],[[l.top,l.bottom],[l.left,l.right]],JN);return{segmentation:aN(Object(f.squeeze)(b),n),heatmapScores:a,offsets:o,displacementFwd:u,displacementBwd:d}})),h=d.segmentation,p=d.heatmapScores,m=d.offsets,b=d.displacementFwd,g=d.displacementBwd;return c.dispose(),{segmentation:h,heatmapScores:p,offsets:m,displacementFwd:b,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:o}},t.prototype.segmentPerson=function(t,e){return void 0===e&&(e=aj),eN(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x;return nN(this,(function(O){switch(O.label){case 0:return ij(e=tN({},aj,e)),n=this.segmentPersonActivation(t,e.internalResolution,e.segmentationThreshold),r=n.segmentation,a=n.heatmapScores,s=n.offsets,i=n.displacementFwd,o=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],h=l[1],[4,r.data()];case 1:return p=O.sent(),r.dispose(),[4,XN([a,s,i,o])];case 2:return f=O.sent(),m=f[0],b=f[1],g=f[2],y=f[3],x=YN(x=DN(m,b,g,y,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[d,h],c,u,ZN),a.dispose(),s.dispose(),i.dispose(),o.dispose(),[2,{height:d,width:h,data:p,allPoses:x}]}}))}))},t.prototype.segmentMultiPerson=function(t,e){return void 0===e&&(e=sj),eN(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,c,l,d,h,p,m,b,g,y,x,O,v,w,k,I=this;return nN(this,(function(N){switch(N.label){case 0:return oj(e=tN({},sj,e)),n=VN(t),r=n[0],a=n[1],s=GN(e.internalResolution,this.baseModel.outputStride,[r,a]),i=qN(t,s),o=i.resized,u=i.padding,c=Object(f.tidy)((function(){var t,n=I.predictForMultiPersonInstanceSegmentationAndPart(o),i=n.segmentLogits,c=n.longOffsets,l=n.heatmapScores,d=n.offsets,h=n.displacementFwd,p=n.displacementBwd,m=HN(i,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],JN);return t=c,{segmentation:aN(Object(f.squeeze)(m),e.segmentationThreshold),longOffsets:t,heatmapScoresRaw:l,offsetsRaw:d,displacementFwdRaw:h,displacementBwdRaw:p}})),l=c.segmentation,d=c.longOffsets,h=c.heatmapScoresRaw,p=c.offsetsRaw,m=c.displacementFwdRaw,b=c.displacementBwdRaw,[4,XN([h,p,m,b])];case 1:return g=N.sent(),y=g[0],x=g[1],O=g[2],v=g[3],w=YN(w=DN(y,x,O,v,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[r,a],s,u,ZN),[4,kN(l,d,w,r,a,this.baseModel.outputStride,s,u,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return k=N.sent(),o.dispose(),l.dispose(),d.dispose(),h.dispose(),p.dispose(),m.dispose(),b.dispose(),[2,k]}}))}))},t.prototype.segmentPersonPartsActivation=function(t,e,n){var r=this;void 0===n&&(n=.5);var a=VN(t),s=a[0],i=a[1],o=GN(e,this.baseModel.outputStride,[s,i]),u=qN(t,o),c=u.resized,l=u.padding,d=Object(f.tidy)((function(){var t=r.predictForPersonSegmentationAndPart(c),e=t.segmentLogits,a=t.partHeatmapLogits,o=t.heatmapScores,u=t.offsets,d=t.displacementFwd,h=t.displacementBwd,p=c.shape,m=p[0],b=p[1],g=HN(e,[s,i],[m,b],[[l.top,l.bottom],[l.left,l.right]],JN),y=HN(a,[s,i],[m,b],[[l.top,l.bottom],[l.left,l.right]],JN);return{partSegmentation:sN(aN(Object(f.squeeze)(g),n),y),heatmapScores:o,offsets:u,displacementFwd:d,displacementBwd:h}})),h=d.partSegmentation,p=d.heatmapScores,m=d.offsets,b=d.displacementFwd,g=d.displacementBwd;return c.dispose(),{partSegmentation:h,heatmapScores:p,offsets:m,displacementFwd:b,displacementBwd:g,padding:l,internalResolutionHeightAndWidth:o}},t.prototype.segmentPersonParts=function(t,e){return void 0===e&&(e=aj),eN(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,c,l,d,h,p,f,m,b,g,y,x;return nN(this,(function(O){switch(O.label){case 0:return ij(e=tN({},aj,e)),n=this.segmentPersonPartsActivation(t,e.internalResolution,e.segmentationThreshold),r=n.partSegmentation,a=n.heatmapScores,s=n.offsets,i=n.displacementFwd,o=n.displacementBwd,u=n.padding,c=n.internalResolutionHeightAndWidth,l=r.shape,d=l[0],h=l[1],[4,r.data()];case 1:return p=O.sent(),r.dispose(),[4,XN([a,s,i,o])];case 2:return f=O.sent(),m=f[0],b=f[1],g=f[2],y=f[3],x=YN(x=DN(m,b,g,y,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[d,h],c,u,ZN),a.dispose(),s.dispose(),i.dispose(),o.dispose(),[2,{height:d,width:h,data:p,allPoses:x}]}}))}))},t.prototype.segmentMultiPersonParts=function(t,e){return void 0===e&&(e=sj),eN(this,void 0,void 0,(function(){var n,r,a,s,i,o,u,c,l,d,h,p,m,b,g,y,x,O,v,w,k,I,N=this;return nN(this,(function(j){switch(j.label){case 0:return oj(e=tN({},sj,e)),n=VN(t),r=n[0],a=n[1],s=GN(e.internalResolution,this.baseModel.outputStride,[r,a]),i=qN(t,s),o=i.resized,u=i.padding,c=Object(f.tidy)((function(){var t=N.predictForMultiPersonInstanceSegmentationAndPart(o),n=t.segmentLogits,i=t.longOffsets,c=t.heatmapScores,l=t.offsets,d=t.displacementFwd,h=t.displacementBwd,p=t.partHeatmaps,m=HN(n,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],JN),b=HN(p,[r,a],s,[[u.top,u.bottom],[u.left,u.right]],JN),g=i;return{segmentation:aN(Object(f.squeeze)(m),e.segmentationThreshold),longOffsets:g,heatmapScoresRaw:c,offsetsRaw:l,displacementFwdRaw:d,displacementBwdRaw:h,partSegmentation:iN(b)}})),l=c.segmentation,d=c.longOffsets,h=c.heatmapScoresRaw,p=c.offsetsRaw,m=c.displacementFwdRaw,b=c.displacementBwdRaw,g=c.partSegmentation,[4,XN([h,p,m,b])];case 1:return y=j.sent(),x=y[0],O=y[1],v=y[2],w=y[3],k=YN(k=DN(x,O,v,w,this.baseModel.outputStride,e.maxDetections,e.scoreThreshold,e.nmsRadius),[r,a],s,u,ZN),[4,IN(l,d,g,k,r,a,this.baseModel.outputStride,s,u,e.scoreThreshold,e.refineSteps,e.minKeypointScore,e.maxDetections)];case 2:return I=j.sent(),o.dispose(),l.dispose(),d.dispose(),h.dispose(),p.dispose(),m.dispose(),b.dispose(),g.dispose(),[2,I]}}))}))},t.prototype.dispose=function(){this.baseModel.dispose()},t}();function cj(t){return eN(this,void 0,void 0,(function(){var e,n,r,a,s,i;return nN(this,(function(o){switch(o.label){case 0:if(e=t.outputStride,n=t.quantBytes,r=t.multiplier,null==f)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return a=function(t,e,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+t+".json";return 4===n?BN+"float/"+r[e]+"/"+a:BN+"quant"+n+"/"+r[e]+"/"+a}(e,r,n),[4,El(t.modelUrl||a)];case 1:return s=o.sent(),i=new uN(s,e),[2,new uj(i)]}}))}))}function lj(t){return eN(this,void 0,void 0,(function(){var e,n,r,a,s;return nN(this,(function(i){switch(i.label){case 0:if(e=t.outputStride,n=t.quantBytes,null==f)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return r=function(t,e){var n="model-stride"+t+".json";return 4===e?PN+"float/"+n:PN+"quant"+e+"/"+n}(e,n),[4,El(t.modelUrl||r)];case 1:return a=i.sent(),s=new LN(a,e),[2,new uj(s)]}}))}))}function dj(t){return void 0===t&&(t=QN),eN(this,void 0,void 0,(function(){return nN(this,(function(e){return"ResNet50"===(t=function(t){if(null==(t=t||QN).architecture&&(t.architecture="MobileNetV1"),tj.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+tj);if(null==t.outputStride&&(t.outputStride=16),ej[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+ej[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),nj[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+nj[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),rj.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+rj+" for architecture "+t.architecture+".");return t}(t)).architecture?[2,lj(t)]:"MobileNetV1"===t.architecture?[2,cj(t)]:[2,null]}))}))}var hj={architecture:"MobileNetV1",outputStride:16,multiplier:.75,quantBytes:2},pj=function(){var t=Object(s.useState)(),e=t[0],n=t[1],r=Object(s.useState)(),a=r[0],i=r[1];return Object(s.useEffect)((function(){(function(t){var e=t.width,n=t.height,r=t.fps,a=t.onUpdate;return new Promise((function(t){navigator.mediaDevices.getUserMedia({video:{width:e,height:n,frameRate:r},audio:!1}).then((function(e){var n=document.createElement("video");n.autoplay=!0;var r=new MediaStream(e.getVideoTracks());n.srcObject=r,n.onloadedmetadata=p(d.a.mark((function s(){var i,o,u;return d.a.wrap((function(s){for(;;)switch(s.prev=s.next){case 0:return i=e.getVideoTracks()[0].getSettings(),n.width=i.width,n.height=i.height,s.next=5,dj(hj);case 5:o=s.sent,u=function(){o&&(o.dispose(),o=null)},r.addEventListener("stop",u),n.addEventListener("timeupdate",(function(){var t;return null===(t=o)||void 0===t?void 0:t.segmentPerson(n).then(a)})),t(r);case 10:case"end":return s.stop()}}),s)})))}))}))})({onUpdate:i}).then(n)}),[]),{stream:e,segment:a}};e.default=function(){var t,e=Object(s.useRef)(null),n=pj(),r=n.stream,i=n.segment;return Object(s.useEffect)((function(){if(i){var t=e.current.getContext("2d"),n=i.width,r=i.height,a=i.allPoses[0].keypoints.filter((function(t){return["nose","leftEye","rightEye"].includes(t.part)})).map((function(t){var e=t.position;return[e.x-n/2,e.y-r/2]})),s=a.reduce((function(t,e){return[t[0]+e[0],t[1]+e[1]]}),[0,0]).map((function(t,e){return t/a.length+[n/2,r/2][e]})),o=i.allPoses[0].keypoints.find((function(t){return"nose"===t.part})).position,u=(s[0]-o.x)/(s[1]-o.y),c=-u*s[1]+s[0];t.clearRect(0,0,n,r),t.beginPath(),t.strokeStyle="rgb(0, 0, 255)",t.moveTo(c,0),t.lineTo(c+r*u,r),t.stroke()}}),[i]),Object(a.jsxs)(a.Fragment,{children:[Object(a.jsx)(o.a,{children:Object(a.jsx)("meta",{name:"viewport",content:"width=device-width,initial-scale=1.0"})}),Object(a.jsxs)("div",{className:c.a.videoList,children:[r&&Object(a.jsx)("video",{className:c.a.video,muted:!0,autoPlay:!0,ref:function(t){return t&&t.srcObject!==r&&(t.srcObject=r)}}),i&&Object(a.jsx)("canvas",{ref:e,className:c.a.canvas,width:i.width,height:i.height}),null===i||void 0===i||null===(t=i.allPoses[0])||void 0===t?void 0:t.keypoints.filter((function(t){return["nose","leftEye","rightEye","leftEar","rightEar"].includes(t.part)})).map((function(t){var e=t.part,n=t.position,r=n.x,s=n.y;return Object(a.jsx)("div",{className:c.a.parts,style:{left:r+"px",top:s+"px"},children:{nose:"\u9f3b",leftEye:"\u76ee",rightEye:"\u76ee",leftEar:"\u8033",rightEar:"\u8033"}[e]},e)}))]}),Object(a.jsx)("pre",{children:JSON.stringify(null===i||void 0===i?void 0:i.allPoses,void 0,"  ")})]})}},R0ls:function(t,e,n){"use strict";n.d(e,"c",(function(){return f})),n.d(e,"b",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"d",(function(){return g}));var r=n("Um8L"),a=n("njhW"),s=n("bzdD"),i=n("parS"),o=n("Ug8H"),u=n("kXpR"),c=n("Rqg+"),l=n("NclT"),d=n("/7N0"),h=n("L7Hl"),p=n("4FMF");function f(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(i.a)(t,Object(h.a)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(p.a)(n,a)),Object(l.a)(n,t.shape)}function b(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(u.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(c.a)(t);if("prelu"===e)return Object(o.a)(t,n);if("leakyrelu"===e)return Object(s.a)(t,r);if("sigmoid"===e)return Object(d.a)(t);throw new Error(`Unknown fused activation ${e}.`)}const g=(t,e)=>!(t>0)||"linear"===e},RIqP:function(t,e,n){var r=n("Ijbi"),a=n("EbDI"),s=n("ZhPi"),i=n("Bnag");t.exports=function(t){return r(t)||a(t)||s(t)||i()}},RRa9:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({any_:function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","any","bool")},o={axis:e,keepDims:n};return r.a.runKernel(a.g,i,o)}})},RbuM:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({split_:function(t,e,n=0){const i={x:Object(s.a)(t,"x","split")},o={numOrSizeSplits:e,axis:n};return r.a.runKernel(a.Lc,i,o)}})},RhH0:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mod_:function(t,e){let n=Object(i.a)(t,"a","mod"),o=Object(i.a)(e,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Tb,u)}})},RhVc:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acosh_:function(t){const e={x:Object(s.a)(t,"x","acosh")};return r.a.runKernel(a.c,e)}})},"Rqg+":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu6_:function(t){const e={x:Object(s.a)(t,"x","relu6")};return r.a.runKernel(a.oc,e)}})},RrGL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({log1p_:function(t){const e={x:Object(s.a)(t,"x","log1p")};return r.a.runKernel(a.Db,e)}})},RrjA:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){const s={shape:t,value:e,dtype:n};return r.a.runKernel(a.eb,{},s)}},RsxS:function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},SFB9:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({addN_:function(t){i.b(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.b(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>Object(s.a)(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!i.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=e;return r.a.runKernel(a.e,o)}})},SHv8:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({matMul_:function(t,e,n=!1,o=!1){let u=Object(i.a)(t,"a","matMul"),c=Object(i.a)(e,"b","matMul");[u,c]=Object(s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:o};return r.a.runKernel(a.s,l,d)}})},SNsm:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("8Km0"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({broadcastTo_:function(t,e){let n=Object(s.a)(t,"broadcastTo","x");const o=n.shape;if(e.some((t=>!(t>0)||t%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(u.a)(n,t)}const c=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(c[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${e}].`);if(0===l.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Object(i.a)(n);const d={x:n},h={reps:l};return r.a.runKernel(a.Vc,d,h)}})},SwXZ:function(t,e,n){"use strict";(function(t){var e=n("szMd");const r=()=>n(0);let a;class s{constructor(){this.util=n(1),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new s)}).call(this,n("8oxB"))},THqV:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80");const o=Object(i.b)({ifft_:function(t){Object(s.b)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.a.runKernel(a.qb,e)}})},TPxA:function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n("w4jT");class a extends r.a{split(t){return new s(this,t)}}class s extends a{constructor(t,e){super(),this.upstream=t,this.impl=new i(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},TyAZ:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({exp_:function(t){const e={x:Object(s.a)(t,"x","exp")};return r.a.runKernel(a.ab,e)}})},"U/2n":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({maxPool3d_:function(t,e=[1,1,1],n,o,c,l="NDHWC"){const d=Object(s.a)(t,"x","maxPool3d");let h=d,p=!1;4===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.b(5===h.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`)),i.b("NDHWC"===l,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${l}`)),null!=c&&i.b(i.v(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`));const f={x:h},m={filterSize:e,strides:n,pad:o,dimRoundingMode:c,dataFormat:l},b=r.a.runKernel(a.Kb,f,m);return p?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},"U/Lz":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unsortedSegmentSum_:function(t,e,n){const o=Object(s.a)(t,"x","unsortedSegmentSum"),u=Object(s.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),(()=>"numSegments must be of dtype int"));const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernel(a.bd,c,l)}})},U45G:function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u}));var r=n("auKK"),a=n("NNfn"),s=n("o/e8"),i=n("atXS");function o(t){return i.b(i.u(t),(()=>"The f passed in grad(f) must be a function")),(e,n)=>{const a=Object(s.a)(e,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy((()=>{const{value:e,grads:n}=r.a.gradients((()=>t(a)),[a],o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function u(t){return i.b(i.u(t),(()=>"The f passed in grads(f) must be a function")),(e,n)=>{i.b(Array.isArray(e),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=Object(s.b)(e,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy((()=>{const{value:e,grads:n}=r.a.gradients((()=>t(...a)),a,o);return null!=o&&i.e(e.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function c(t){return i.b(i.u(t),(()=>"The f passed in valueAndGrad(f) must be a function")),(e,n)=>{i.b(e instanceof a.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.b(null==n||n instanceof a.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.a.gradients((()=>t(e)),[e],n);return p(s),{grad:s[0],value:o}}}function l(t){return i.b(i.u(t),(()=>"The f passed in valueAndGrads(f) must be a function")),(e,n)=>{i.b(Array.isArray(e)&&e.every((t=>t instanceof a.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.b(null==n||n instanceof a.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.a.gradients((()=>t(...e)),e,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(t,e){i.b(i.u(t),(()=>"The f passed in variableGrads(f) must be a function")),i.b(null==e||Array.isArray(e)&&e.every((t=>t instanceof a.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,o=e.length;e=e.filter((t=>t.trainable)),i.b(e.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:c}=r.a.gradients(t,e,null,!0);i.b(c.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.b(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return e.forEach(((t,e)=>{null!=c[e]&&(l[t.name]=c[e])})),null!=s&&s.forEach((t=>l[t.name]=null)),{value:u,grads:l}}function h(t){return r.a.customGrad(t)}function p(t){if(t.filter((t=>null==t)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},UI8N:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({floorDiv_:function(t,e){let n=Object(i.a)(t,"a","floorDiv"),o=Object(i.a)(e,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.hb,u)}})},Ug8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({prelu_:function(t,e){const n={x:Object(s.a)(t,"x","prelu"),alpha:Object(s.a)(e,"alpha","prelu")};return r.a.runKernel(a.hc,n)}})},Um8L:function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=t[s]||1;(e[e.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],s=e.length-r-1,i=e[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let s=e[e.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return s}))},Umw7:function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return s})),n.d(e,"f",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"g",(function(){return c})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("+hG3");function a(t,e,n,a,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return s(e.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return e.inputNames.slice(t,u).map((t=>s(t,n,a,i)))}const c=s(e.inputNames.slice(t)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.util.toNestedArray(c.shape,l)}const u=e.attrParams[t];return u&&u.value}function s(t,e,n,r){const[a,s]=c(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const i=n.currentContextIds.find((t=>!!e[u(a,t)]));return void 0!==i?e[u(a,i)][s]:void 0}function i(t,e,n){return e[u(t,n.currentContextId)]}function o(t,e){const[n,r]=c(t);return[u(n,e&&e.currentContextId),r]}function u(t,e){return e?`${t}-${e}`:t}function c(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)s[t][0]=r[2*t],s[t][1]=r[2*t+1];return s}return r}function d(t){return t.kept?t:Object(r.clone)(t)}},"V+B2":function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},VO80:function(t,e,n){"use strict";n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i}));var r=n("auKK"),a=n("atXS");const s="__op";function i(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const i=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...t)=>{r.a.startScope(n);try{const e=i(...t);return Object(a.x)(e)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(e),e}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},VhY8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({topk_:function(t,e=1,n=!0){const i=Object(s.a)(t,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const u={x:i},c={k:e,sorted:n},[l,d]=r.a.runKernel(a.Wc,u,c);return{values:l,indices:d}}})},WHR0:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},WJRb:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:t,stop:e,num:n};return r.a.runKernel(a.Bb,{},s)}},WVnj:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("6366");function i(t,e,n,i){if(null==i&&(i=Object(a.r)(t)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.O)(e),r=Object(a.O)(n);Object(a.b)(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let s=0;s<n.length;++s){const t=n[s],r=s!==n.length-1||t!==Object(a.O)(e.slice(s));Object(a.b)(n[s]===e[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==i?Object(s.toTypedArray)(t,i):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,i)}},WWBm:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({ceil_:function(t){const e={x:Object(s.a)(t,"x","ceil")};return r.a.runKernel(a.x,e)}})},WYAb:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isInf_:function(t){const e={x:Object(s.a)(t,"x","isInf")};return r.a.runKernel(a.ub,e)}})},Wiw4:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("atXS"),s=n("B3db");function i(t,e="float32"){if("complex64"===e){const e=i(t,"float32"),n=i(t,"float32");return Object(s.a)(e,n)}const n=Object(a.F)(Object(a.O)(t),e);return r.a.makeTensor(n,t,e)}},X4fa:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softmax_:function(t,e=-1){const n=Object(s.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const i={logits:n},o={dim:e};return r.a.runKernel(a.Gc,i,o)}})},XcSs:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sinh_:function(t){const e={x:Object(s.a)(t,"x","sinh")};return r.a.runKernel(a.Ec,e)}})},Xr0w:function(t,e,n){"use strict";n.r(e),n.d(e,"assertParamsValid",(function(){return a})),n.d(e,"maskToAxes",(function(){return s})),n.d(e,"computeOutShape",(function(){return i})),n.d(e,"stridesWithElidedDims",(function(){return o})),n.d(e,"getNormalizedAxes",(function(){return l})),n.d(e,"startIndicesWithElidedDims",(function(){return d})),n.d(e,"stopIndicesWithElidedDims",(function(){return h})),n.d(e,"stridesForAxis",(function(){return p})),n.d(e,"startForAxis",(function(){return f})),n.d(e,"stopForAxis",(function(){return m})),n.d(e,"isSliceContinous",(function(){return b})),n.d(e,"computeFlatOffset",(function(){return g})),n.d(e,"parseSliceParams",(function(){return y})),n.d(e,"sliceInfo",(function(){return x}));var r=n("atXS");function a(t,e,n){const a=t.shape.length;r.b(a===e.length,(()=>`Error in slice${a}D: Length of begin ${e} must match the rank of the array (${a}).`)),r.b(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.b(e[s]+n[s]<=t.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`))}function s(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function i(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function o(t,e,n,r){const a=[...t];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[e]=1:(a.splice(e,0,1),a.pop());return a}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,a,s,i,u,c){const l=t.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;b=d(i,c,l,r,t),g=h(u,c,l,a,t),y=o(s,c,l,t)}else for(let o=0;o<l;o++)b[o]=f(i,r,s,t,o,c),g[o]=m(u,a,s,t,o,c),y[o]=p(s,o,c);return{begin:b,end:g,strides:y}}function d(t,e,n,r,a){const s=[...a],i=c(n,e);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const a=u(e,n,o);let i=r[a];t&1<<a&&(i=0),s[o]=i}return s}function h(t,e,n,a,s){const i=[...s],o=c(n,e);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(e,n,r);let o=a[s];t&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){const t=s[u];i[u]<0&&(i[u]+=t),i[u]=r.i(0,i[u],s[u])}return i}function p(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(t,e,n,a,s,i){let o=e[s];const u=n[s]||1;(t&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function g(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function y(t,e,n){let a;const s=t.shape.length;let i;return a="number"===typeof e?[e,...new Array(s-1).fill(0)]:e.length<s?e.concat(new Array(s-e.length).fill(0)):e.slice(),a.forEach((t=>{r.b(-1!==t,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((e,n)=>e>=0?e:(r.b(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-a[n]))),[a,i]}function x(t,e,n,r,a,o,u,c,d){let h=e.slice(),p=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==c)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const b=t.length-h.length,g=s(c),y=t.slice();g.forEach((t=>{h[t]=0,p[t]=1,y.splice(t,0,1)}));const{begin:x,end:O,strides:v}=l(y,m,b,h,p,f,a,o,u);h=x,p=O,f=v;const w=s(d);w.forEach((t=>{p[t]=h[t]+1,f[t]=1}));const k=i(h,p,f),I=k.filter(((t,e)=>-1===w.indexOf(e)));return{nonStrided:f.every((t=>1===t)),$begin:h,$end:p,$strides:f,size:k,newShape:y,outShape:I}}},Xuae:function(t,e,n){"use strict";var r=n("RIqP"),a=n("lwsE"),s=n("W8MJ"),i=(n("PJYZ"),n("7W2i")),o=n("a1gu"),u=n("Nsbk");function c(t){var e=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=u(t);if(e){var a=u(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return o(this,n)}}e.__esModule=!0,e.default=void 0;var l=n("q1tI"),d=function(t){i(n,t);var e=c(n);function n(t){var s;return a(this,n),(s=e.call(this,t))._hasHeadManager=void 0,s.emitChange=function(){s._hasHeadManager&&s.props.headManager.updateHead(s.props.reduceComponentsToState(r(s.props.headManager.mountedInstances),s.props))},s._hasHeadManager=s.props.headManager&&s.props.headManager.mountedInstances,s}return s(n,[{key:"componentDidMount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.add(this),this.emitChange()}},{key:"componentDidUpdate",value:function(){this.emitChange()}},{key:"componentWillUnmount",value:function(){this._hasHeadManager&&this.props.headManager.mountedInstances.delete(this),this.emitChange()}},{key:"render",value:function(){return null}}]),n}(l.Component);e.default=d},Xyqe:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({rsqrt_:function(t){const e={x:Object(s.a)(t,"x","rsqrt")};return r.a.runKernel(a.xc,e)}})},YAKK:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({atan2_:function(t,e){let n=Object(i.a)(t,"a","atan2"),o=Object(i.a)(e,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.m,u)}})},YSVl:function(t,e,n){var r=n("EhIR"),a=n("uDiL"),s=n("pJ6O"),i=n("yuCN"),o=n("euyF"),u=n("ie1u"),c=n("pJ3+");c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,t.exports=c},Z5Ez:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("SNsm"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({where_:function(t,e,n){const u=Object(s.a)(e,"a","where"),c=Object(s.a)(n,"b","where"),l=Object(s.a)(t,"condition","where","bool"),d=Object(o.a)(Object(o.a)(l.shape,u.shape),c.shape),h={condition:Object(i.a)(l,d),t:Object(i.a)(u,d),e:Object(i.a)(c,d)};return r.a.runKernel(a.zc,h)}})},ZJ6U:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("8Km0"),u=n("VO80");const c=Object(u.b)({concat_:function(t,e=0){Object(i.b)(t.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(s.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)})),1===n.length)return Object(o.a)(n[0]);const u=n,c={axis:e};return r.a.runKernel(a.B,u,c)}})},Zz2E:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]},aSZd:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,o,u=[1,1],c){let l=t;3===t.rank&&(l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n};return r.a.runKernel(a.P,h,p)}})},aTLu:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sin_:function(t){const e={x:Object(s.a)(t,"x","sin")};return r.a.runKernel(a.Dc,e)}})},adw1:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("B3db"),a=n("ZJ6U"),s=n("JLAb"),i=n("parS"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("0I63"),d=n("AV8V"),h=n("bTzI"),p=n("THqV");const f=Object(o.b)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let o;if(e<=2){const r=Object(c.a)(t,[n,e]);o=Object(p.a)(r)}else{const f=[n,2*(e-1)],m=Object(c.a)(Object(u.a)(t),[n,e]),b=Object(c.a)(Object(s.a)(t),[n,e]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,e-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),O=Object(a.a)([b,y],1),v=Object(c.a)(Object(r.a)(x,O),[f[0],f[1]]);o=Object(p.a)(v)}if(o=Object(u.a)(o),3===t.rank&&0!==t.shape[0]){const e=o,n=t.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),e.dispose()}return o}})},atXS:function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n,r,a=t.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=t[a],r=e[a],t[a]=t[s],e[a]=e[s],t[s]=n,e[s]=r}function s(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2===0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function u(t,e){const n=Math.random();return e*n+(1-n)*t}function c(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function l(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function d(t,e,n=""){l(b(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function h(t){l(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function p(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||E(t)&&!n)for(let r=0;r<t.length;++r)p(t[r],e,n);else e.push(t);return e}function f(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function m(t){return 0===t.length}function b(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function g(t){return t%1===0}function y(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function x(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function O(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function v(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t,e=(t=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(t())return void r();s++;const o=e(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function k(t,e){let n=1,r=-1;for(let s=0;s<t.length;++s)if(t[s]>=0)n*=t[s];else if(-1===t[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(t[s]<0)throw Error(`Shapes can not be < 0. Found ${t[s]} at dim ${s}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const a=t.slice();return a[r]=e/n,a}function I(t,e){const n=e.length;return l((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),l(t.every((t=>g(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function N(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,s=null==e||a?null:I(e,t).sort();let i=0;for(let o=0;o<t.length;++o){if(null!=s){if(s[i]===o&&1!==t[o])throw new Error(`Can't squeeze axis ${o} since its dim '${t[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===t[o]&&(n.push(t[o]),r.push(o)),s[i]<=o&&i++}1!==t[o]&&(n.push(t[o]),r.push(o))}return{newShape:n,keptDims:r}}function j(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function T(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function C(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function $(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function E(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function F(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function R(t){return"string"===typeof t||t instanceof String}function _(t){return"boolean"===typeof t}function D(t){return"number"===typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":D(t)?"float32":R(t)?"string":_(t)?"bool":"float32"}function z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e,n,r=!1){const a=new Array;if(1===e.length){const s=e[0]*(r?2:1);for(let e=0;e<s;e++)a[e]=n[t+e]}else{const s=e[0],i=e.slice(1),o=i.reduce(((t,e)=>t*e))*(r?2:1);for(let e=0;e<s;e++)a[e]=B(t+e*o,i,n,r)}return a}function V(t,e,n=!1){if(0===t.length)return e[0];const r=t.reduce(((t,e)=>t*e))*(n?2:1);if(0===r)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return B(0,t,e,n)}function W(t,e){const n=U(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function U(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function K(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return V(t,new Float32Array(n));if("int32"===e)return V(t,new Int32Array(n));if("bool"===e)return V(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function G(t){t.forEach((e=>{l(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function X(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"N",(function(){return a})),n.d(e,"i",(function(){return s})),n.d(e,"H",(function(){return i})),n.d(e,"R",(function(){return o})),n.d(e,"J",(function(){return u})),n.d(e,"l",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"O",(function(){return f})),n.d(e,"y",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"v",(function(){return g})),n.d(e,"S",(function(){return y})),n.d(e,"P",(function(){return x})),n.d(e,"k",(function(){return O})),n.d(e,"L",(function(){return v})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return k})),n.d(e,"I",(function(){return I})),n.d(e,"Q",(function(){return N})),n.d(e,"o",(function(){return j})),n.d(e,"n",(function(){return S})),n.d(e,"h",(function(){return T})),n.d(e,"B",(function(){return C})),n.d(e,"p",(function(){return $})),n.d(e,"A",(function(){return E})),n.d(e,"g",(function(){return A})),n.d(e,"f",(function(){return F})),n.d(e,"z",(function(){return R})),n.d(e,"t",(function(){return _})),n.d(e,"w",(function(){return D})),n.d(e,"r",(function(){return M})),n.d(e,"u",(function(){return z})),n.d(e,"G",(function(){return L})),n.d(e,"j",(function(){return P})),n.d(e,"T",(function(){return V})),n.d(e,"D",(function(){return W})),n.d(e,"F",(function(){return U})),n.d(e,"E",(function(){return K})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return X}))},auKK:function(t,e,n){"use strict";n.d(e,"b",(function(){return y})),n.d(e,"a",(function(){return x}));var r=n("i4e/"),a=n("szMd"),s=n("9JAK"),i=n("wFtI"),o=n("c7gn"),u=n("6366"),c=n("atXS");class l{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new h)}profileKernel(t,e,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const t of r)t.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const e=r[a];e.data().then((n=>{d(n,e.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:s}=t;n.forEach((t=>{Promise.all([t.data(),r,s]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])}))}))}}function d(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn(`Found ${e} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(t,e,n,r,a,s){const i="number"===typeof r?c.L(`${r}ms`,9):r.error,o=c.L(t,25),u=e.rank,l=e.size,d=c.L(e.shape.toString(),14);let h="";for(const c in a){const t=a[c];if(null!=t){const n=t.shape||e.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n("NNfn"),f=n("dsKV");function m(t){return null!=t.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((t=>t.name))))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class g{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){Object(o.d)(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e),s=r.refCount(e);r.disposeData(e,!0),n.backend=t,t.move(e,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(t){const e=x.runKernel(i.rb,{x:t}),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e={x:t},n={dtype:"float32"};return x.runKernel(i.w,e,n)}})),[],{}),e}runKernel(t,e,n){if(!(null!=Object(o.c)(t,this.backendName)))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach((t=>{a+="complex64"===t.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-e-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t){let e,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(t)){const{kernelName:e,inputs:a,attrs:s}=t;null==this.backendName&&this.backend;const l=Object(o.c)(e,this.backendName);c.b(null!=l,(()=>`Cannot find registered kernel '${e}' for backend '${this.backendName}'`)),i=()=>{const t=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(e,t,i);const o=i.map((t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)}));if(r){const t=this.getTensorsForGradient(e,a,o);n=this.saveTensorsForBackwardMode(t)}return o}}else{const{forwardFunc:e}=t,a=t=>{r&&(n=t.map((t=>this.keep(this.clone(t)))))};i=()=>{const t=this.backend.numDataIds();u=this.tidy((()=>e(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,t,n),n}}const{inputs:d,attrs:h}=t,p=m(t)?null:t.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),e=f.outputs):e=i()})),r&&this.addTapeNode(l,d,e,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((t=>null!=d[t]?d[t].shape:null)),outputShapes:e.map((t=>t.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=Object(o.b)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(e).map((t=>e[t]))):s=t.map((t=>e[t]));const i=n.filter(((t,e)=>a[e]));return s.concat(i)}return[]}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&c.z(t[0])&&(a=t.map((t=>u.encodeString(t))));const s=r.write(a,e,n),i=new p.a(e,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const t=this.state.tensorInfo.get(s),e=Object(c.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new p.a(e,n,t,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new p.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*c.g(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof p.c||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const e=t.size*c.g(t.dtype);this.state.numBytes-=e}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},u=Object(o.b)(t);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=c.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],a,s))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(f.getTensorsInContainer)(t),n=new Set(e.map((t=>t.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(c.b(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));c.b(a instanceof p.a,(()=>"The result y returned by f() must be a tensor."));const s=function(t,e,n){const r={},a={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const n=t[u],s=n.inputs;for(const t in s){const i=s[t];let o=!1;for(let t=0;t<e.length;t++)if(r[i.id]){n.outputs.forEach((t=>r[t.id]=!0)),o=!0,a[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let u=t.length-1;u>=0;u--){const e=t[u],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(s[e.outputs[t].id]){for(const t in n)s[n[t].id]=!0,i[e.id]=!0;break}}const o=[];for(let u=0;u<t.length;u++){const e=t[u];if(a[e.id]&&i[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,o.push(n)}}return o}(this.state.activeTape,e,a);if(!r&&0===s.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[a.id]=null==n?function(t){const e=Object(c.D)(Object(c.O)(t),"float32");return x.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const s=e[a],i=[];if(s.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const e in s.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[e]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[e];if(!c.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${e}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=a;else{const e=t[i.id];t[i.id]=r(e,a),e.dispose()}}}}(t,s,(t=>this.tidy(t)),O);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(t){return c.b(c.u(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;c.b(e.every((t=>t instanceof p.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};e.forEach(((t,e)=>{r[e]=t}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=t(...e,a),c.b(n.value instanceof p.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.b(c.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(t,r)=>{const a=n.gradFunc(t,r),s=Array.isArray(a)?a:[a];c.b(s.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.b(s.every((t=>t instanceof p.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((t,e)=>{i[e]=()=>t})),i},inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(u.now)(),n=await this.backend.time(t);return n.wallMs=Object(u.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const t=Object(s.b)();if(null==t._tfengine){const e=new a.b(t);t._tfengine=new g(e)}return Object(a.d)(t._tfengine.ENV),Object(p.g)((()=>t._tfengine)),t._tfengine}g.nextTensorId=0,g.nextVariableId=0;const x=y();function O(t,e){const n={a:t,b:e};return x.runKernel(i.d,n)}},"b++O":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({isNaN_:function(t){const e={x:Object(s.a)(t,"x","isNaN")};return r.a.runKernel(a.vb,e)}})},bTzI:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({slice_:function(t,e,n){const i=Object(s.a)(t,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:e,size:n};return r.a.runKernel(a.Fc,o,u)}})},boNM:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},bzdD:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({leakyRelu_:function(t,e=.2){const n={x:Object(s.a)(t,"x","leakyRelu")},i={alpha:e};return r.a.runKernel(a.yb,n,i)}})},"c/ib":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({resizeBilinear_:function(t,e,n=!1,o=!1){const c=Object(s.a)(t,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`)),i.b(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:e},f=r.a.runKernel(a.qc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},c7gn:function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"d",(function(){return c})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f}));var r=n("szMd"),a=n("9JAK");const s=Object(a.a)("kernelRegistry",(()=>new Map)),i=Object(a.a)("gradRegistry",(()=>new Map));function o(t,e){const n=m(t,e);return s.get(n)}function u(t){return i.get(t)}function c(t){const e=s.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===t&&n.push(i)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=m(e,n);s.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),s.set(r,t)}function d(t){const{kernelName:e}=t;i.has(e)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),i.set(e,t)}function h(t,e){const n=m(t,e);if(!s.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);s.delete(n)}function p(t){if(!i.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);i.delete(t)}function f(t,e){c(t).forEach((t=>{l(Object.assign({},t,{backendName:e}))}))}function m(t,e){return`${e}_${t}`}},c9N1:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv2DBackpropInput_:function(t,e,n,i,u,c="NHWC",l){s.b(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let d=t,h=e,p=!1;3===e.rank&&(p=!0,h=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),s.b(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.b(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.b(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.b(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const b={dy:h,filter:n},g={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return p?Object(o.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},cdtJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("NclT");var u=n("VO80");const c=Object(u.b)({batchNorm_:function(t,e,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(t,"x","batchNorm"),h=Object(s.a)(e,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.b(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.b(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const b={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(o.a)(t,[1,1,1,t.size]):2===t.rank?Object(o.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(d),scale:f,offset:m,mean:h,variance:p},g={varianceEpsilon:l},y=r.a.runKernel(a.jb,b,g);return Object(o.a)(y,d.shape)}})},dWjR:function(t,e,n){"use strict";function r(t,e=!1){console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},dYAU:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({spaceToBatchND_:function(t,e,n){const o=Object(s.a)(t,"x","spaceToBatchND");i.b(o.rank>=1+e.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${e.length}`)),i.b(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),i.b(o.shape.reduce(((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const u={x:o},c={blockShape:e,paddings:n};return r.a.runKernel(a.Ic,u,c)}})},dauL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({einsum_:function(t,...e){const n=e.map(((t,e)=>Object(s.a)(t,`tensors${e}`,"einsum"))),i={equation:t};return r.a.runKernel(a.V,n,i)}})},dnXz:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("o/e8"),a=n("atXS"),s=n("3X4V"),i=n("uBja"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({conv1d_:function(t,e,n,o,c="NWC",l=1,d){const h=Object(r.a)(t,"x","conv1d"),p=Object(r.a)(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.b(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),null!=d&&a.b(a.v(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`)),a.b(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),a.b(i.h(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),a.b("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],O=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(O,[O.shape[2],O.shape[3]]):Object(u.a)(O,[O.shape[0],O.shape[2],O.shape[3]])}})},dsKV:function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return i})),n.d(e,"assertTypesMatch",(function(){return o})),n.d(e,"isTensorInList",(function(){return u})),n.d(e,"getTensorsInContainer",(function(){return c}));var r=n("NNfn"),a=n("I79q"),s=n("atXS");function i(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function o(t,e){Object(s.b)(t.dtype===e.dtype,(()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`))}function u(t,e){return e.some((e=>e.id===t.id))}function c(t){const e=[];return l(t,e,new Set),e}function l(t,e,n){if(null==t)return;if(t instanceof r.a)return void e.push(t);if(a=t,!Array.isArray(a)&&"object"!==typeof a)return;var a;const s=t;for(const r in s){const t=s[r];n.has(t)||(n.add(t),l(t,e,n))}}},"e/6+":function(t,e){(function(e){t.exports=function(){var t={441:function(t){t.exports=function(){throw new Error("define cannot be used indirect")}}},n={};function r(e){if(n[e])return n[e].exports;var a=n[e]={exports:{}},s=!0;try{t[e](a,a.exports,r),s=!1}finally{s&&delete n[e]}return a.exports}return r.ab=e+"/",r(441)}()}).call(this,"/")},euyF:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,s=e.i;return e.w=r=r+1640531527|0,n=a[s+34&127],t=a[s=s+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[s]=n^t,e.i=s,n+(r^r>>>16)|0},function(t,e){var n,r,a,s,i,o=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),a=0,s=-32;s<u;++s)e&&(r^=e.charCodeAt((s+32)%e.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(e&&e.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;t.w=i,t.X=o,t.i=a}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor4096=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},"fN6/":function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},fjZN:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({atan_:function(t){const e={x:Object(s.a)(t,"x","atan")};return r.a.runKernel(a.l,e)}})},fmoR:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({truncatedNormal_:function(t,e=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(e,n,a,!0,i),u=Object(r.a)(t,a);for(let r=0;r<u.values.length;r++)u.values[r]=o.nextValue();return u.toTensor()}})},ftYm:function(t,e,n){"use strict";function r(t){if(t||"undefined"!==typeof navigator&&null!=navigator){if(t||(t=navigator),"ReactNative"===t.product)return!0;const e=t.userAgent||t.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},"g4+C":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({depthwiseConv2d_:function(t,e,n,o,c="NHWC",l=[1,1],d){const h=Object(s.a)(t,"x","depthwiseConv2d"),p=Object(s.a)(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.b(4===p.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),i.b(f.shape[3]===p.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null!=d&&i.b(i.v(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`));const b={x:f,filter:p},g={strides:n,pad:o,dataFormat:c,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},g4m1:function(t,e,n){"use strict";function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(e,t[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(t,e,n||a)}(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function s(t,e,n,r,a){return u(t,e,n,r,a,0)}function i(t,e,n,r,a,s){return u(t,e,n,r,a,0,!1,s,!0)}function o(t,e,n,r,a,s){return u(t,e,n,r,a,s,!0)}function u(t,e,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let r=0;r<e.length;r++)e[r]>s&&p.push({score:e[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const e=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=e;if(n<s)break;let u=!1;for(let r=m.length-1;r>=o;--r){const n=c(t,i,m[r]);if(n>=a){u=!0;break}if(e.score=e.score*l(a,f,n),e.score<=s)break}e.suppressBeginIndex=m.length,u||(e.score===n?(m.push(i),b.push(e.score)):e.score>s&&r(p,e,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return o}))},g4pe:function(t,e,n){t.exports=n("8Kt/")},gErV:function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n("U45G"),a=n("o/e8"),s=n("3rNm"),i=n("TyAZ"),o=n("E1lT"),u=n("wCH+"),c=n("parS"),l=n("VO80"),d=n("oAkI"),h=n("4FMF");const p=Object(l.b)({logSoftmax_:function(t,e=-1){const n=Object(a.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Object(r.a)(((t,n)=>{const r=Object(u.a)(t,e,!0),a=Object(d.a)(t,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(t,Object(c.a)(Object(h.a)(t,e,!0),a))}}}))(n)}})},hNYx:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("auKK"),a=n("wFtI");function s(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:t,stop:e,step:n,dtype:s};return r.a.runKernel(a.jc,{},i)}},hT5K:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({unique_:function(t,e=0){const n=Object(s.a)(t,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:e},[c,l]=r.a.runKernel(a.Zc,o,u);return{values:c,indices:l}}})},hinG:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("BD40"),a=n("VO80"),s=n("1OSX");const i=Object(a.b)({randomUniform_:function(t,e=0,n=1,a="float32",i){const o=Object(r.a)(t,a),u=new s.c(e,n,null,i);for(let r=0;r<o.values.length;r++)o.values[r]=u.nextValue();return o.toTensor()}})},"i/oj":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80"),o=n("o0+U");const u=Object(i.b)({scatterND_:function(t,e,n){const i=Object(s.a)(t,"indices","scatterND","int32"),u=Object(s.a)(e,"updates","scatterND");o.validateInput(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernel(a.yc,c,l)}})},"i4e/":function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{refCount(t){return s("refCount")}incRef(t){return s("incRef")}timerAvailable(){return!0}time(t){return s("time")}read(t){return s("read")}readSync(t){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(t,e){return s("disposeData")}write(t,e,n){return s("write")}move(t,e,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},i8k8:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({maxPoolWithArgmax_:function(t,e,n,i,o=!1){const u={x:Object(s.a)(t,"x","maxPoolWithArgmax")},c={filterSize:e,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Nb,u,c);return{result:l[0],indexes:l[1]}}})},iIjY:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({tanh_:function(t){const e={x:Object(s.a)(t,"x","tanh")};return r.a.runKernel(a.Uc,e)}})},ie1u:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.tychei=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},iuCH:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({abs_:function(t){const e=Object(s.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.a.runKernel(a.A,t)}{const t={x:e};return r.a.runKernel(a.a,t)}}})},jLCh:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("VO80"),i=n("NclT");const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,o,u=[1,1],c){let l=e,d=!1;3===e.rank&&(d=!0,l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:t},f=r.a.runKernel(a.Q,h,p);return d?Object(i.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},jXH2:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({tile_:function(t,e){const n=Object(s.a)(t,"x","tile","string_or_numeric");i.b(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const o={x:n},u={reps:e};return r.a.runKernel(a.Vc,o,u)}})},jgXy:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80");const c=Object(u.b)({erf_:function(t){let e=Object(s.a)(t,"x","erf");i.b("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Object(o.a)(e,"float32"));const n={x:e};return r.a.runKernel(a.Z,n)}})},k7Jv:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("auKK"),a=n("o/e8"),s=n("VO80");const i=Object(s.b)({square_:function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernel("Square",{x:e},{})}})},k9tH:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({mirrorPad_:function(t,e,n){i.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=Object(s.a)(t,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(e.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${e.length}.`));const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.b(2===e[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.b(e[r][0]>=0&&e[r][0]<=o.shape[r]-u&&e[r][1]>=0&&e[r][1]<=o.shape[r]-u,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape ${o.shape}`));const c={paddings:e,mode:n},l={x:o};return r.a.runKernel(a.Sb,l,c)}})},kRdc:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({add_:function(t,e){let n=Object(i.a)(t,"a","add"),o=Object(i.a)(e,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.d,u)}})},"kVK+":function(t,e){e.read=function(t,e,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=t[e+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+t[e+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+t[e+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},e.write=function(t,e,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(e*u-1)*Math.pow(2,a),i+=d):(o=e*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;t[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;t[n+p]=255&i,p+=f,i/=256,c-=8);t[n+p-f]|=128*m}},kXpR:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({relu_:function(t){const e={x:Object(s.a)(t,"x","relu")};return r.a.runKernel(a.nc,e)}})},kaMP:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gather_:function(t,e,n=0,i=0){const o={x:Object(s.a)(t,"x","gather"),indices:Object(s.a)(e,"indices","gather","int32")},u={axis:n,batchDims:i};return r.a.runKernel(a.nb,o,u)}})},l0gX:function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("uBja"),c=n("VO80"),l=n("NclT");const d=Object(c.b)({avgPool_:function(t,e,n,c,d){const h=Object(s.a)(t,"x","avgPool","float32");i.b(u.h(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),null!=d&&i.b(i.v(c),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`));const m={x:p},b={filterSize:e,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},"lIk/":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},lSNA:function(t,e){t.exports=function(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}},lg8H:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("atXS"),s=n("WVnj");function i(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(t,null,n,e)}},lwAK:function(t,e,n){"use strict";var r;e.__esModule=!0,e.AmpStateContext=void 0;var a=((r=n("q1tI"))&&r.__esModule?r:{default:r}).default.createContext({});e.AmpStateContext=a},mEeB:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},mdDO:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("atXS"),i=n("VO80"),o=n("NclT");const u=Object(i.b)({conv3DBackpropInput_:function(t,e,n,i,u){s.b(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let c=t,l=e,d=!1;4===e.rank&&(d=!0,l=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),c=[1,t[0],t[1],t[2],t[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${c.length}.`)),s.b(5===l.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`)),s.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.b(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.b(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:l,filter:n},m={pad:u,strides:i,inputShape:c},b=r.a.runKernel(a.H,f,m);return d?Object(o.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},"n+ZZ":function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("uBja"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({maxPool_:function(t,e,n,u,l){const d=Object(s.a)(t,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.b(o.h(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=l&&i.b(i.v(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const f={x:h},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernel(a.Jb,f,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},"n/2y":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({softplus_:function(t){const e={x:Object(s.a)(t,"x","softplus")};return r.a.runKernel(a.Hc,e)}})},njhW:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({elu_:function(t){const e={x:Object(s.a)(t,"x","elu")};return r.a.runKernel(a.W,e)}})},nnua:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},ntbh:function(t,e){(function(e){t.exports=function(){var t={149:function(t){var e;e=function(){return this}();try{e=e||new Function("return this")()}catch(n){"object"===typeof window&&(e=window)}t.exports=e}},n={};function r(e){if(n[e])return n[e].exports;var a=n[e]={exports:{}},s=!0;try{t[e](a,a.exports,r),s=!1}finally{s&&delete n[e]}return a.exports}return r.ab=e+"/",r(149)}()}).call(this,"/")},"o/e8":function(t,e,n){"use strict";n.d(e,"c",(function(){return u})),n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return h}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("atXS"),o=n("6366");function u(t,e){let n=t;if(Object(i.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(t,r,[]),r}function c(t,e,n){if(n=n||[],!Array.isArray(t)&&!Object(i.A)(t))return void Object(i.b)(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));Object(i.b)(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),Object(i.b)(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let a=0;a<t.length;++a)c(t[a],r,n.concat(a))}function l(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function d(t,e,n,a="numeric"){if(t instanceof s.a)return l(a,t.dtype,e,n),t;let c=Object(i.r)(t);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,e,n),null==t||!Object(i.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(t,c);Object(i.A)(t)||Array.isArray(t)||(t=[t]);const h="string"!==c?Object(o.toTypedArray)(t,c):Object(i.m)(t,[],!0);return r.a.makeTensor(h,d,c)}function h(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,a)=>d(t,`${e}[${a}]`,n,r)))}},"o0+U":function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return s})),n.d(e,"calculateShapes",(function(){return i}));var r=n("atXS");function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(t.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+t.length-r)throw new Error(s+" update.rank != "+(a+t.length-r));for(let i=0;i<a;++i)if(n.shape[i]!==e.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==t[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${t[i+a]})`)}function s(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}a(n,e,t)}function i(t,e,n){const a=e.shape.length,s=a>1?e.shape[a-1]:1,i=n.length;let o=1;for(let r=s;r<i;++r)o*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(e.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},o3Rt:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({acos_:function(t){const e={x:Object(s.a)(t,"x","acos")};return r.a.runKernel(a.b,e)}})},oAkI:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({sub_:function(t,e){let n=Object(i.a)(t,"a","sub"),o=Object(i.a)(e,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Rc,u)}})},"oJu+":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({zerosLike_:function(t){const e={x:Object(s.a)(t,"x","zerosLike")};return r.a.runKernel(a.cd,e)}})},p4Cv:function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n("AoCb"),a=n("o/e8");const s=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),s=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),s}},"pJ3+":function(t,e,n){var r;!function(a,s){var i,o=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,h=255;function p(t,e,n){var r=[],h=g(b((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(a)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(u):(t=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(t)),y(t)}catch(r){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,y(a)]}}():t,3),r),p=new f(r),x=function(){for(var t=p.g(6),e=c,n=0;t<l;)t=(t+n)*u,e*=u,n=p.g(1);for(;t>=d;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,g(y(p.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,p),t.state=function(){return m(p,{})}),n?(s.random=t,e):t})(x,h,"global"in e?e.global:this==s,e.state)}function f(t){var e,n=t.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(t=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+t[a%n]+(e=i[a])],i[s]=e;(r.g=function(t){for(var e,n=0,a=r.i,s=r.j,i=r.S;t--;)e=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+e])+(i[s]=e)];return r.i=a,r.j=s,n})(u)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function b(t,e){var n,r=[],a=typeof t;if(e&&"object"==a)for(n in t)try{r.push(b(t[n],e-1))}catch(s){}return r.length?r:"string"==a?t:t+"\0"}function g(t,e){for(var n,r=t+"",a=0;a<r.length;)e[h&a]=h&(n^=19*e[h&a])+r.charCodeAt(a++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(s.seedrandom=p,g(s.random(),a),t.exports){t.exports=p;try{i=n(2)}catch(x){}}else void 0===(r=function(){return p}.call(e,n,e,t))||(t.exports=r)}([],Math)},pJ6O:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorwow=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},parS:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({mul_:function(t,e){let n=Object(i.a)(t,"a","mul"),o=Object(i.a)(e,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Vb,u)}})},"qA+V":function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},qpuh:function(t,e){(function(e,n){t.exports=function(){var t={929:function(t){t.exports=e}},r={};function a(e){if(r[e])return r[e].exports;var n=r[e]={exports:{}},s=!0;try{t[e](n,n.exports,a),s=!1}finally{s&&delete r[e]}return n.exports}return a.ab=n+"/",a(929)}()}).call(this,{},"/")},r9q9:function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n("o/e8"),a=n("atXS"),s=n("kRdc"),i=n("NuWS"),o=n("TyAZ"),u=n("E1lT"),c=n("wCH+"),l=n("VO80"),d=n("NclT"),h=n("oAkI"),p=n("4FMF");const f=Object(l.b)({logSumExp_:function(t,e=null,n=!1){const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),O=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const t=Object(i.e)(O.shape,f);return Object(d.a)(O,t)}return O}})},rm0a:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({min_:function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","min")},o={axis:e,keepDims:n};return r.a.runKernel(a.Qb,i,o)}})},rqsJ:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},s57M:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({selu_:function(t){const e={x:Object(s.a)(t,"x","selu")};return r.a.runKernel(a.Ac,e)}})},shz4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({lessEqual_:function(t,e){let n=Object(i.a)(t,"a","lessEqual"),u=Object(i.a)(e,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Ab,c)}})},szMd:function(t,e,n){"use strict";n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"d",(function(){return c}));var r=n("atXS");const a="tfjsflags";class s{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);if(a in t){t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}}function i(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}function o(){return u}let u=null;function c(t){u=t}},tQDl:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({reciprocal_:function(t){const e={x:Object(s.a)(t,"x","reciprocal")};return r.a.runKernel(a.mc,e)}})},th0q:function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n("atXS"),a=n("B3db"),s=n("ZJ6U"),i=n("JLAb"),o=n("VO80"),u=n("17CO"),c=n("NclT"),l=n("bTzI"),d=n("RbuM"),h=n("Wiw4"),p=n("oJu+"),f=n("Grcp");const m=Object(o.b)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const o=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,m=Object(s.a)([t,Object(h.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,O=Object(u.a)(y),v=Object(i.a)(y),w=Object(d.a)(O,[x,n-x],O.shape.length-1),k=Object(d.a)(v,[x,n-x],v.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c.a)(Object(a.a)(w[0],k[0]),I)}})},uBja:function(t,e,n){"use strict";function r(t,e,n,r,a="NHWC",s){return i(t,[...e,t[3]],n,s,r,null,null,m(a))}function a(t,e,n,r,a,s,o="channelsLast"){const[u,l]=c(e);let d;if("channelsLast"===o)d=[u,l,t[3],t[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,l,t[1],t[1]]}return i(t,d,n,r,a,s,!1,o)}function s(t,e,n,r,a,s,i="NDHWC"){const[u,c,d]=l(e);let h,p;if("NDHWC"===i)p="channelsLast",h=[u,c,d,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[u,c,d,t[1],t[1]]}return o(t,h,n,r,a,!1,p,s)}function i(t,e,n,r,a,s,i=!1,o="channelsLast"){let[l,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,f,m]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,p,f]=t}const[b,g,,y]=e,[x,O]=c(n),[v,w]=c(r),k=d(b,v),I=d(g,w),{padInfo:N,outHeight:j,outWidth:S}=function(t,e,n,r,a,s,i,o,c){let l,d,p;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,a){null==r&&(r=u(t,e,n));const s=t[0],i=t[1],o=h((s-e+2*r)/n+1,a),c=h((i-e+2*r)/n+1,a);return[o,c]}([e,n],s,r,t,o);d=a[0],p=a[1]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+s-e),o=Math.max(0,(p-1)*a+i-n),u=Math.floor(t/2),c=t-u,h=Math.floor(o/2);l={top:u,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!==typeof t)throw Error(`Unknown padding parameter: ${t}`);{const u="channelsLast"===c?t[1][0]:t[2][0],f="channelsLast"===c?t[1][1]:t[2][1],m="channelsLast"===c?t[2][0]:t[3][0],b="channelsLast"===c?t[2][1]:t[3][1];l={top:u,bottom:f,left:m,right:b,type:0===u&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=h((e-s+u+f)/r+1,o),p=h((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,p,f,x,O,k,I,s,o),T=i?y*m:y;let C;return"channelsFirst"===o?C=[l,T,j,S]:"channelsLast"===o&&(C=[l,j,S,T]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:j,outWidth:S,outChannels:T,padInfo:N,strideHeight:x,strideWidth:O,filterHeight:b,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationHeight:v,dilationWidth:w,inShape:t,outShape:C,filterShape:e}}function o(t,e,n,r,a,s=!1,i="channelsLast",o){let[c,p,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,p,f,m,b]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[c,b,p,f,m]=t}const[g,y,x,,O]=e,[v,w,k]=l(n),[I,N,j]=l(r),S=d(g,I),T=d(y,N),C=d(x,j),{padInfo:$,outDepth:E,outHeight:A,outWidth:F}=function(t,e,n,r,a,s,i,o,c,l,d){let p,f,m,b;if("number"===typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,r,a,s){null==a&&(a=u(t,e,r));const i=t[0],o=t[1],c=t[2],l=h((i-e+2*a)/r+1,s),d=h((o-e+2*a)/r+1,s),p=h((c-e+2*a)/r+1,s);return[l,d,p,n]}([e,n,r,1],o,1,a,t,d);f=s[0],m=s[1],b=s[2]}else if("same"===t){f=Math.ceil(e/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const t=(f-1)*a+o-e,u=(m-1)*s+c-n,d=(b-1)*i+l-r,h=Math.floor(t/2),g=t-h,y=Math.floor(u/2),x=u-y,O=Math.floor(d/2);p={top:y,bottom:x,left:O,right:d-O,front:h,back:g,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((e-o+1)/a),m=Math.ceil((n-c+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:b}}(a,p,f,m,v,w,k,S,T,C,o),R=s?O*b:O;let _;return"channelsFirst"===i?_=[c,R,E,A,F]:"channelsLast"===i&&(_=[c,E,A,F,R]),{batchSize:c,dataFormat:i,inDepth:p,inHeight:f,inWidth:m,inChannels:b,outDepth:E,outHeight:A,outWidth:F,outChannels:R,padInfo:$,strideDepth:v,strideHeight:w,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationDepth:I,dilationHeight:N,dilationWidth:j,inShape:t,outShape:_,filterShape:e}}function u(t,e,n,r=1){const a=d(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function c(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function p(t){const[e,n,r]=c(t);return 1===e&&1===n&&1===r}function f(t,e){return p(t)||p(e)}function m(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"i",(function(){return p})),n.d(e,"h",(function(){return f})),n.d(e,"g",(function(){return m}))},uDiL:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xor128=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},ubnP:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({equal_:function(t,e){let n=Object(i.a)(t,"a","equal"),u=Object(i.a)(e,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Y,c)}})},ukBL:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({gatherND_:function(t,e){const n=Object(s.a)(e,"indices","gatherND","int32"),i={params:Object(s.a)(t,"x","gatherND"),indices:n};return r.a.runKernel(a.mb,i)}})},ulO0:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("3rNm"),u=n("VO80"),c=n("NclT");const l=Object(u.b)({avgPool3d_:function(t,e,n,u,l,d="NDHWC"){const h=Object(s.a)(t,"x","avgPool3d","float32");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.b("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),null!=l&&i.b(i.v(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:p},b={filterSize:e,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let g=r.a.runKernel(a.p,m,b);return g=Object(o.a)(g,p.dtype),f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},uy0A:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greaterEqual_:function(t,e){let n=Object(i.a)(t,"a","greaterEqual"),u=Object(i.a)(e,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.pb,c)}})},vGFT:function(t,e,n){t.exports={videoList:"index_videoList__1q3oa",message:"index_message__1wWgi",video:"index_video__2Durc",parts:"index_parts__29eby",canvas:"index_canvas__1MnmT"}},vGLV:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI");var s=n("o/e8"),i=n("VO80");const o=Object(i.b)({sparseToDense_:function(t,e,n,i=0){const o=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const a=t.rank>0?t.shape[0]:1,s=t.rank>1?t.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=e.size;if(0!==e.rank&&(1!==e.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${a}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernel(a.Kc,l,d)}})},vc8R:function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return i})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n("+hG3");function a(t,e){return s(t,e)}function s(t,e,n=new Map,r=new Set){if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const i in t){const o=s(t[i],e,n,r);a[i]=o}return r.delete(t),a}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,a.value),a.value}function i(t,e=u){return o(t,e)}function o(t,e,n=new Set){const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=o(t.map((t=>t[s])),e,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function u(t){return null===t?null:l(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function c(t,e){const n=new Map;s(t,e,n);for(const a of Array.from(n.keys())){const t=n.get(a);if(r.util.isPromise(t)){const e=await t;n.set(a,e)}}return s(t,e,n)}function l(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r.Tensor))}function d(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof r.Tensor||r.util.isTypedArray(t);var e}},w4jT:function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return N})),n.d(e,"c",(function(){return r}));var r,a=n("+hG3"),s=n("YSVl"),i=n("vc8R");function o(t){return t instanceof a.Tensor?{value:t.clone(),recurse:!1}:Object(i.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class u{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function h(t,e){return new S(t,e)}function p(t,e=r.FAIL){return new T(t,e)}c.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new k(this,t)}filter(t){return new v(this,t)}map(t){return new w(this,t)}mapAsync(t){return new I(this,t)}serialMapAsync(t){return new I(this,t).serial()}flatmap(t){return new j(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new O(this,t,e)}columnMajorBatch(t,e=!0,n=i.f){return this.rowMajorBatch(t,e).map((t=>Object(i.d)(t,n)))}concatenate(t,e){return new S(l([this,t]),e)}take(t){return t<0||null==t?this:new x(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new C(this,t)}shuffle(t,e){return new $(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(i.b)(e,o)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.dispose(t.value)}return this.upstream.next()}}class x extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class O extends f{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class v extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.dispose(t.value)}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class N extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class j extends N{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of e)a.tensor_util.isTensorInList(s,r)||s.dispose();return!0}}class S extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class T extends f{constructor(t,e=r.FAIL){super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(t){await t;let e=0,n=0;const a=await Object(i.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then((t=>(e++,t.done&&n++,t.value))),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class C extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new u(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class $ extends C{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=s.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},"wCH+":function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({max_:function(t,e=null,n=!1){const i={x:Object(s.a)(t,"x","max")},o={reductionIndices:e,keepDims:n};return r.a.runKernel(a.Ib,i,o)}})},wE5H:function(t,e,n){"use strict";n.d(e,"g",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"c",(function(){return c})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return x})),n.d(e,"o",(function(){return O})),n.d(e,"k",(function(){return v})),n.d(e,"q",(function(){return w})),n.d(e,"i",(function(){return k})),n.d(e,"j",(function(){return I})),n.d(e,"p",(function(){return N})),n.d(e,"a",(function(){return j})),n.d(e,"s",(function(){return S}));var r=n("auKK"),a=n("szMd"),s=n("NNfn"),i=n("dsKV");function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(t){return r.a.profile(t)}function m(t,e){return r.a.tidy(t,e)}function b(t){Object(i.getTensorsInContainer)(t).forEach((t=>t.dispose()))}function g(t){return r.a.keep(t)}function y(t){return r.a.time(t)}function x(t){return r.a.setBackend(t)}function O(){return r.a.ready()}function v(){return r.a.backendName}function w(t){r.a.removeBackend(t)}function k(t){return r.a.findBackend(t)}function I(t){return r.a.findBackendFactory(t)}function N(t,e,n=1){return r.a.registerBackend(t,e,n)}function j(){return r.a.backend}function S(t,e){Object(a.c)().setPlatform(t,e)}Object(s.e)(l)},wFtI:function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"d",(function(){return i})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return c})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return O})),n.d(e,"s",(function(){return v})),n.d(e,"t",(function(){return w})),n.d(e,"u",(function(){return k})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return N})),n.d(e,"x",(function(){return j})),n.d(e,"y",(function(){return S})),n.d(e,"z",(function(){return T})),n.d(e,"A",(function(){return C})),n.d(e,"B",(function(){return $})),n.d(e,"C",(function(){return E})),n.d(e,"D",(function(){return A})),n.d(e,"E",(function(){return F})),n.d(e,"F",(function(){return R})),n.d(e,"G",(function(){return _})),n.d(e,"H",(function(){return D})),n.d(e,"I",(function(){return M})),n.d(e,"J",(function(){return z})),n.d(e,"L",(function(){return L})),n.d(e,"K",(function(){return P})),n.d(e,"M",(function(){return B})),n.d(e,"N",(function(){return V})),n.d(e,"O",(function(){return W})),n.d(e,"P",(function(){return U})),n.d(e,"Q",(function(){return K})),n.d(e,"R",(function(){return G})),n.d(e,"S",(function(){return H})),n.d(e,"U",(function(){return q})),n.d(e,"T",(function(){return X})),n.d(e,"lc",(function(){return Y})),n.d(e,"V",(function(){return J})),n.d(e,"W",(function(){return Z})),n.d(e,"X",(function(){return Q})),n.d(e,"Z",(function(){return tt})),n.d(e,"Y",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return st})),n.d(e,"eb",(function(){return it})),n.d(e,"fb",(function(){return ot})),n.d(e,"gb",(function(){return ut})),n.d(e,"hb",(function(){return ct})),n.d(e,"jb",(function(){return lt})),n.d(e,"nb",(function(){return dt})),n.d(e,"mb",(function(){return ht})),n.d(e,"ob",(function(){return pt})),n.d(e,"pb",(function(){return ft})),n.d(e,"rb",(function(){return mt})),n.d(e,"qb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return xt})),n.d(e,"vb",(function(){return Ot})),n.d(e,"yb",(function(){return vt})),n.d(e,"zb",(function(){return wt})),n.d(e,"Ab",(function(){return kt})),n.d(e,"Bb",(function(){return It})),n.d(e,"Cb",(function(){return Nt})),n.d(e,"Db",(function(){return jt})),n.d(e,"Fb",(function(){return St})),n.d(e,"Gb",(function(){return Tt})),n.d(e,"Hb",(function(){return Ct})),n.d(e,"Eb",(function(){return $t})),n.d(e,"wb",(function(){return Et})),n.d(e,"xb",(function(){return At})),n.d(e,"Ib",(function(){return Ft})),n.d(e,"Ob",(function(){return Rt})),n.d(e,"Jb",(function(){return _t})),n.d(e,"Mb",(function(){return Dt})),n.d(e,"Kb",(function(){return Mt})),n.d(e,"Lb",(function(){return zt})),n.d(e,"Nb",(function(){return Lt})),n.d(e,"Pb",(function(){return Pt})),n.d(e,"Qb",(function(){return Bt})),n.d(e,"Rb",(function(){return Vt})),n.d(e,"Sb",(function(){return Wt})),n.d(e,"Tb",(function(){return Ut})),n.d(e,"Ub",(function(){return Kt})),n.d(e,"Vb",(function(){return Gt})),n.d(e,"Wb",(function(){return Ht})),n.d(e,"ac",(function(){return qt})),n.d(e,"Xb",(function(){return Xt})),n.d(e,"Yb",(function(){return Yt})),n.d(e,"Zb",(function(){return Jt})),n.d(e,"cc",(function(){return Zt})),n.d(e,"bc",(function(){return Qt})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return se})),n.d(e,"jc",(function(){return ie})),n.d(e,"kc",(function(){return oe})),n.d(e,"mc",(function(){return ue})),n.d(e,"nc",(function(){return ce})),n.d(e,"pc",(function(){return le})),n.d(e,"sc",(function(){return de})),n.d(e,"tc",(function(){return he})),n.d(e,"qc",(function(){return pe})),n.d(e,"rc",(function(){return fe})),n.d(e,"oc",(function(){return me})),n.d(e,"uc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return xe})),n.d(e,"zc",(function(){return Oe})),n.d(e,"Ac",(function(){return ve})),n.d(e,"Fc",(function(){return we})),n.d(e,"Dc",(function(){return ke})),n.d(e,"Ec",(function(){return Ie})),n.d(e,"Cc",(function(){return Ne})),n.d(e,"Bc",(function(){return je})),n.d(e,"Hc",(function(){return Se})),n.d(e,"Mc",(function(){return Te})),n.d(e,"Sc",(function(){return Ce})),n.d(e,"Ic",(function(){return $e})),n.d(e,"Lc",(function(){return Ee})),n.d(e,"Gc",(function(){return Ae})),n.d(e,"Jc",(function(){return Fe})),n.d(e,"Kc",(function(){return Re})),n.d(e,"Oc",(function(){return _e})),n.d(e,"Nc",(function(){return De})),n.d(e,"Qc",(function(){return Me})),n.d(e,"Rc",(function(){return ze})),n.d(e,"Tc",(function(){return Le})),n.d(e,"Uc",(function(){return Pe})),n.d(e,"Vc",(function(){return Be})),n.d(e,"Wc",(function(){return Ve})),n.d(e,"Xc",(function(){return We})),n.d(e,"Yc",(function(){return Ue})),n.d(e,"Zc",(function(){return Ke})),n.d(e,"ad",(function(){return Ge})),n.d(e,"bd",(function(){return He})),n.d(e,"cd",(function(){return qe})),n.d(e,"Pc",(function(){return Xe})),n.d(e,"ib",(function(){return Ye})),n.d(e,"vc",(function(){return Je})),n.d(e,"dd",(function(){return Ze})),n.d(e,"kb",(function(){return Qe})),n.d(e,"lb",(function(){return tn}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",O="AvgPool3DGrad",v="BatchMatMul",w="BatchToSpaceND",k="Bincount",I="BroadcastTo",N="Cast",j="Ceil",S="ClipByValue",T="Complex",C="ComplexAbs",$="Concat",E="Conv2D",A="Conv2DBackpropFilter",F="Conv2DBackpropInput",R="Conv3D",_="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",z="Cosh",L="Cumsum",P="CropAndResize",B="DenseBincount",V="DepthToSpace",W="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",G="Diag",H="Dilation2D",q="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",J="Einsum",Z="Elu",Q="EluGrad",tt="Erf",et="Equal",nt="Exp",rt="ExpandDims",at="Expm1",st="FFT",it="Fill",ot="FlipLeftRight",ut="Floor",ct="FloorDiv",lt="FusedBatchNorm",dt="GatherV2",ht="GatherNd",pt="Greater",ft="GreaterEqual",mt="Identity",bt="IFFT",gt="Imag",yt="IsFinite",xt="IsInf",Ot="IsNan",vt="LeakyRelu",wt="Less",kt="LessEqual",It="LinSpace",Nt="Log",jt="Log1p",St="LogicalAnd",Tt="LogicalNot",Ct="LogicalOr",$t="LogSoftmax",Et="LRN",At="LRNGrad",Ft="Max",Rt="Maximum",_t="MaxPool",Dt="MaxPoolGrad",Mt="MaxPool3D",zt="MaxPool3DGrad",Lt="MaxPoolWithArgmax",Pt="Mean",Bt="Min",Vt="Minimum",Wt="MirrorPad",Ut="Mod",Kt="Multinomial",Gt="Multiply",Ht="Neg",qt="NotEqual",Xt="NonMaxSuppressionV3",Yt="NonMaxSuppressionV4",Jt="NonMaxSuppressionV5",Zt="OnesLike",Qt="OneHot",te="Pack",ee="PadV2",ne="Pool",re="Pow",ae="Prelu",se="Prod",ie="Range",oe="Real",ue="Reciprocal",ce="Relu",le="Reshape",de="ResizeNearestNeighbor",he="ResizeNearestNeighborGrad",pe="ResizeBilinear",fe="ResizeBilinearGrad",me="Relu6",be="Reverse",ge="Round",ye="Rsqrt",xe="ScatterNd",Oe="Select",ve="Selu",we="Slice",ke="Sin",Ie="Sinh",Ne="Sign",je="Sigmoid",Se="Softplus",Te="Sqrt",Ce="Sum",$e="SpaceToBatchND",Ee="SplitV",Ae="Softmax",Fe="SparseReshape",Re="SparseToDense",_e="SquaredDifference",De="Square",Me="StridedSlice",ze="Sub",Le="Tan",Pe="Tanh",Be="Tile",Ve="TopK",We="Transform",Ue="Transpose",Ke="Unique",Ge="Unpack",He="UnsortedSegmentSum",qe="ZerosLike",Xe="Step",Ye="FromPixels",Je="RotateWithOffset",Ze="_FusedMatMul",Qe="FusedConv2D",tn="FusedDepthwiseConv2D"},"wI/y":function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({clipByValue_:function(t,e,n){const o=Object(s.a)(t,"x","clipByValue");i.b(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const u={x:o},c={clipValueMin:e,clipValueMax:n};return r.a.runKernel(a.y,u,c)}})},wXC5:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80"),u=n("NclT");const c=Object(o.b)({dilation2d_:function(t,e,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(t,"x","dilation2d"),h=Object(s.a)(e,"filter","dilation2d");i.b(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.b(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.b("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.S,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},waK1:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("VO80");const o=Object(i.b)({cosh_:function(t){const e={x:Object(s.a)(t,"x","cosh")};return r.a.runKernel(a.J,e)}})},wion:function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n("auKK"),a=n("atXS"),s=n("B3db"),i=n("Wiw4");function o(t,e="float32"){if("complex64"===e){const e=o(t,"float32"),n=Object(i.a)(t,"float32");return Object(s.a)(e,n)}const n=Object(a.D)(Object(a.O)(t),e);return r.a.makeTensor(n,t,e)}},wxQM:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n("U45G"),a=n("o/e8"),s=n("parS"),i=n("O7f5"),o=n("VO80"),u=n("/7N0"),c=n("n/2y");const l=Object(o.b)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)((t=>({value:Object(i.a)(Object(c.a)(Object(i.a)(t))),gradFunc:e=>Object(s.a)(e,Object(u.a)(Object(i.a)(t)))})))(e)}})},x3y4:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("UI8N"),u=n("VO80");const c=Object(u.b)({div_:function(t,e){let n=Object(i.a)(t,"a","div"),u=Object(i.a)(e,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernel(a.lc,c,{})}})},yK2v:function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},yRKQ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("o/e8"),i=n("atXS"),o=n("VO80");const u=Object(o.b)({transpose_:function(t,e){const n=Object(s.a)(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),i.b(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{i.b(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:e};return r.a.runKernel(a.Yc,o,u)}})},yfHJ:function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("VO80");const u=Object(o.b)({pow_:function(t,e){let n=Object(i.a)(t,"base","pow"),o=Object(i.a)(e,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.gc,u)}})},yuCN:function(t,e,n){(function(t){var r;!function(t,a,s){function i(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new i(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n("e/6+")&&n("qpuh")?void 0===(r=function(){return u}.call(e,n,e,a))||(a.exports=r):this.xorshift7=u}(0,t,n("e/6+"))}).call(this,n("LY0y")(t))},"zR+/":function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n("o/e8"),a=n("c9N1"),s=n("VO80");const i=Object(s.b)({conv2dTranspose_:function(t,e,n,s,i,o){const u=Object(r.a)(t,"x","conv2dTranspose"),c=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},zvA9:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n("auKK"),a=n("wFtI"),s=n("dsKV"),i=n("o/e8"),o=n("Um8L"),u=n("VO80");const c=Object(u.b)({greater_:function(t,e){let n=Object(i.a)(t,"a","greater"),u=Object(i.a)(e,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ob,c)}})}},[["/EDR",0,2,1]]]);